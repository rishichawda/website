{"version":3,"file":"component---src-pages-contact-tsx-6a8eaea25c0399efc7b4.js","mappings":"gJAAO,MAAMA,EAAQ,CACjBC,QAAS,2BCDAC,EAAiB,CAACC,EAAWC,EAAWC,KACjD,IAAKF,EACD,KAAM,gFAEV,IAAKC,EACD,KAAM,wEAEV,IAAKC,EACD,KAAM,mFAEV,OAAO,CAAI,ECVR,MAAMC,EACTC,YAAYC,GACRC,KAAKC,OAASF,EAAeA,EAAaE,OAAS,EACnDD,KAAKE,KAAOH,EAAeA,EAAaI,aAAe,eAC3D,ECFG,MAAMC,EAAW,CAACC,EAAKC,EAAMC,EAAU,CAAC,IACpC,IAAIC,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,iBAAiB,QAAQ,EAAGC,aAC5B,MAAMC,EAAiB,IAAIlB,EAAsBiB,GACnB,MAA1BC,EAAed,QAA0C,OAAxBc,EAAeb,KAChDO,EAAQM,GAGRL,EAAOK,EACX,IAEJJ,EAAIE,iBAAiB,SAAS,EAAGC,aAC7BJ,EAAO,IAAIb,EAAsBiB,GAAQ,IAE7CH,EAAIK,KAAK,OAAQzB,EAAMC,QAAUa,GAAK,GACtCY,OAAOC,KAAKX,GAASY,SAASC,IAC1BT,EAAIU,iBAAiBD,EAAKb,EAAQa,GAAK,IAE3CT,EAAIW,KAAKhB,EAAK,ICjBtB,OACIiB,KCCgB,CAAC7B,EAAW8B,EAAS,6BACrCjC,EAAMkC,QAAU/B,EAChBH,EAAMC,QAAUgC,CAAM,EDFtBF,KEKgB,CAAC3B,EAAWC,EAAY8B,EAAehC,KACvD,MAAMiC,EAAMjC,GAAaH,EAAMkC,QAC/BhC,EAAekC,EAAKhC,EAAWC,GAC/B,MAAMgC,EAAS,CACXC,YAAa,SACbC,QAASH,EACTI,WAAYpC,EACZqC,YAAapC,EACbqC,gBAAiBP,GAErB,OAAOtB,EAAS,uBAAwB8B,KAAKC,UAAUP,GAAS,CAC5D,eAAgB,oBAClB,EFhBFQ,SGiBoB,CAACzC,EAAWC,EAAYyC,EAAM3C,KAClD,MAAMiC,EAAMjC,GAAaH,EAAMkC,QACzBa,EAvBW,CAACD,IAClB,IAAIC,EAOJ,GALIA,EADgB,iBAATD,EACOE,SAASC,cAAcH,GAGvBA,GAEbC,GAAwC,SAAzBA,EAAYG,SAC5B,KAAM,0FAEV,OAAOH,CAAW,EAYEI,CAAaL,GACjC5C,EAAekC,EAAKhC,EAAWC,GAC/B,MAAM+C,EAAW,IAAIC,SAASN,GAK9B,OAJAK,EAASE,OAAO,cAAe,UAC/BF,EAASE,OAAO,aAAclD,GAC9BgD,EAASE,OAAO,cAAejD,GAC/B+C,EAASE,OAAO,UAAWlB,GACpBvB,EAAS,4BAA6BuC,EAAS,E,qCChB1D,IAfiBG,IAEbC,EAAAA,cAAA,OACEC,UAAU,UACVC,MAAM,6BACNC,QAAQ,aAERH,EAAAA,cAAA,QACEI,EAAE,+PACFC,KAAK,iB,6GCQN,MAAMC,EAAOA,IAClBN,EAAAA,cAACO,EAAAA,EAAG,CACFC,MAAM,wBACNC,YAAY,qHAIhB,UAjBA,SAAoBC,GAAY,MAAFA,EAC5B,OACEV,EAAAA,cAACW,EAAAA,EAAM,KACLX,EAAAA,cAAA,QAAMC,UAAU,2DACdD,EAAAA,cAACY,EAAAA,EAAO,OAIhB,C,8ECjBO,MAAMC,EAAiBC,GACvBA,EAAMC,OAIT,gDAAgDC,KAC9CF,GAGK,KAEF,IAAIG,MAAM,sCATR,IAAIA,MAAM,kCAYRC,EAAmBC,GAC1BA,EAAQJ,OAAS,GACZ,IAAIE,MAAM,iCACZ,I","sources":["webpack://rishikc.com/./node_modules/@emailjs/browser/es/store/store.js","webpack://rishikc.com/./node_modules/@emailjs/browser/es/utils/validateParams.js","webpack://rishikc.com/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://rishikc.com/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://rishikc.com/./node_modules/@emailjs/browser/es/index.js","webpack://rishikc.com/./node_modules/@emailjs/browser/es/methods/init/init.js","webpack://rishikc.com/./node_modules/@emailjs/browser/es/methods/send/send.js","webpack://rishikc.com/./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","webpack://rishikc.com/./src/components/icons/send.tsx","webpack://rishikc.com/./src/pages/contact.tsx","webpack://rishikc.com/./src/utils/validation.ts"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.11.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React from \"react\";\n\nconst SendIcon = () => {\n  return (\n    <svg\n      className=\"w-6 h-6\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n    >\n      <path\n        d=\"M21.707 2.293a1 1 0 0 0-1.069-.225l-18 7a1 1 0 0 0 .145 1.909l8.379 1.861 1.862 8.379a1 1 0 0 0 .9.78L14 22a1 1 0 0 0 .932-.638l7-18a1 1 0 0 0-.225-1.069zm-7.445 15.275L13.1 12.319l2.112-2.112a1 1 0 0 0-1.414-1.414L11.681 10.9 6.432 9.738l12.812-4.982z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport default SendIcon;\n","import React from \"react\";\nimport Contact from \"../components/contact\";\nimport Layout from \"../components/layout\";\n\nimport \"../stylesheets/contact.scss\";\nimport SEO from \"../components/seo\";\n\ntype Props = {};\n\nfunction ContactPage({}: Props) {\n  return (\n    <Layout>\n      <main className=\"flex items-center justify-center contact-page-container\">\n        <Contact />\n      </main>\n    </Layout>\n  );\n}\n\nexport const Head = () => (\n  <SEO\n    title=\"Contact - rishikc.com\"\n    description=\"Get in touch for collaboration, queries and more. You can also connect with me through my social media profiles.\"\n  />\n);\n\nexport default ContactPage;\n","export const validateEmail = (email: string) => {\n  if (!email.length) {\n    return new Error(\"Please enter an email address.\");\n  }\n  if (\n    /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(\n      email,\n    )\n  ) {\n    return null;\n  }\n  return new Error(\"Please enter a valid email address\")\n}\n\nexport const validateMessage = (message: string) => {\n  if (message.length < 11)\n    return new Error(\"Please write a short message.\")\n  return null\n}"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","SendIcon","React","className","xmlns","viewBox","d","fill","Head","SEO","title","description","_ref","Layout","Contact","validateEmail","email","length","test","Error","validateMessage","message"],"sourceRoot":""}
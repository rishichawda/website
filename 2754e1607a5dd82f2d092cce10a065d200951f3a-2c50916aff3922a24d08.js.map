{"version":3,"file":"2754e1607a5dd82f2d092cce10a065d200951f3a-2c50916aff3922a24d08.js","mappings":"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","sources":["webpack://rishikc.com/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/utils.mjs"],"sourcesContent":["import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n"],"names":["LayoutGroupContext","createContext","PresenceContext","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","key","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","indexOf","push","length","cancel","index","splice","delete","process","i","has","createRenderStep","processStep","stepId","processFrame","Math","max","min","forEach","requestAnimationFrame","cancelFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","pipe","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","calculatedDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","slice","split","number","match","unit","defaultValue","functionRegex","filter","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","parseFloat","getZeroUnit","potentialUnitType","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","from","fillWildcardKeyframes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","testValueType","dimensionValueTypes","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","hasAnimated","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","fallback","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","template","xScale","yScale","averageScale","output","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","clear","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","addUniqueItem","arr","item","removeItem","warning","invariant","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","targetStats","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","interpolator","progressInRange","isBrowser","any","defaultOffset","remaining","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","SubscriptionManager","subscriptions","numSubscriptions","getSize","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","colorToken","numberToken","analyseComplexValue","colors","numbers","tokenised","createTransformer","convertNumbersToZero","transformer","createUnitType","endsWith","degrees","percent","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString"],"sourceRoot":""}
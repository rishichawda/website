{"version":3,"file":"component---src-pages-404-tsx-c561c7935af4b5e82aca.js","mappings":"sIA4CA,IAvCYA,IAA2D,IAA1D,MAAEC,EAAK,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,GAAoBJ,EAC/D,MAAMK,GAAsBC,EAAAA,EAAAA,KAEtBC,EAAM,CACVN,MAAOA,GAASI,EAAoBJ,MACpCC,YAAaA,GAAeG,EAAoBH,YAChDM,MAAM,GAAIH,EAAoBI,QAAUJ,EAAoBG,MAC5DE,IAAI,GAAIL,EAAoBI,SAAUN,GAAQ,KAGhD,OACEQ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQJ,EAAIN,OACZU,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASN,EAAIL,cACtCS,EAAAA,cAAA,QAAMC,KAAK,QAAQC,QAASN,EAAIC,QAChCG,EAAAA,cAAA,QAAMC,KAAK,WAAWC,QAASN,EAAIN,QACnCU,EAAAA,cAAA,QAAMC,KAAK,UAAUC,QAASR,EAAoBS,GAAGC,OACrDJ,EAAAA,cAAA,QAAMC,KAAK,iBAAiBC,QAASN,EAAIL,cACzCS,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASN,EAAIN,QACxCU,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASN,EAAIG,MACtCC,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASN,EAAIL,cAC9CS,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAASR,EAAoBW,QAAQC,OAC/DN,EAAAA,cAAA,QACEC,KAAK,kBACLC,QAASR,EAAoBW,QAAQE,UAEvCP,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASN,EAAIC,QACvCJ,EACA,C,mGC3BP,MAYae,EAAOA,IAAMR,EAAAA,cAACS,EAAAA,EAAG,CAACnB,MAAM,mBAErC,UAd0CoB,IACxCV,EAAAA,cAACW,EAAAA,EAAM,KACLX,EAAAA,cAAA,OAAKY,UAAU,kBACbZ,EAAAA,cAAA,QAAMY,UAAU,kBACdZ,EAAAA,cAAA,eACEA,EAAAA,cAAA,UAAI,qB","sources":["webpack://rishikc.com/./src/components/seo.tsx","webpack://rishikc.com/./src/pages/404.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { SiteMetadata } from \"../../static/metadata\";\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\n\nconst SEO = ({ title, description, pathname, children }: SeoProps) => {\n  const defaultSiteMetadata = useSiteMetadata() as SiteMetadata;\n\n  const seo = {\n    title: title || defaultSiteMetadata.title,\n    description: description || defaultSiteMetadata.description,\n    image: `${defaultSiteMetadata.siteUrl}${defaultSiteMetadata.image}`,\n    url: `${defaultSiteMetadata.siteUrl}${pathname || ``}`,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"og:title\" content={seo.title} />\n      <meta name=\"og:type\" content={defaultSiteMetadata.og.type} />\n      <meta name=\"og:description\" content={seo.description} />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:card\" content={defaultSiteMetadata.twitter.card} />\n      <meta\n        name=\"twitter:creator\"\n        content={defaultSiteMetadata.twitter.creator}\n      />\n      <meta name=\"twitter:image\" content={seo.image} />\n      {children}\n    </>\n  );\n};\n\ntype SeoProps = {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n};\n\nexport default SEO;\n","import { PageProps } from \"gatsby\";\nimport * as React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage: React.FC<PageProps> = () => (\n  <Layout>\n    <div className=\"root-container\">\n      <main className=\"main-container\">\n        <section>\n          <h1>404: Not Found</h1>\n        </section>\n      </main>\n    </div>\n  </Layout>\n);\n\nexport const Head = () => <SEO title=\"404: Not Found\" />;\n\nexport default NotFoundPage;\n"],"names":["_ref","title","description","pathname","children","defaultSiteMetadata","useSiteMetadata","seo","image","siteUrl","url","React","name","content","og","type","twitter","card","creator","Head","SEO","NotFoundPage","Layout","className"],"sourceRoot":""}
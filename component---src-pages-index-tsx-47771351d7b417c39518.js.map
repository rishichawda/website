{"version":3,"file":"component---src-pages-index-tsx-47771351d7b417c39518.js","mappings":"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","sources":["webpack://rishikc.com/./src/components/articles/preview/card.tsx","webpack://rishikc.com/./src/components/articles/preview/index.tsx","webpack://rishikc.com/./src/hooks/use-insta-nodes.tsx","webpack://rishikc.com/./src/components/gallery/card.tsx","webpack://rishikc.com/./src/components/gallery/index.tsx","webpack://rishikc.com/./src/hooks/use-git-repositories.tsx","webpack://rishikc.com/./src/components/repository/languages.tsx","webpack://rishikc.com/./src/components/repository/card.tsx","webpack://rishikc.com/./src/components/repository/index.tsx","webpack://rishikc.com/./src/pages/index.tsx"],"sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\n\ntype Props = {\n  data: Queries.Mdx;\n};\n\nconst ArticlePreviewCard = ({ data }: Props) => {\n  return (\n    <li className=\"h-entry\" role=\"listitem\">\n      <div>\n        <div className=\"h-item\">\n          <Link className=\"u-url\" tabIndex={-1} to={data.fields?.slug!}>\n            <h2 className=\"p-name\">{data.frontmatter?.title}</h2>\n          </Link>\n        </div>\n        <div>\n          <p className=\"p-summary\">{data.excerpt}</p>\n          <Link className=\"u-url\" to={data.fields?.slug!}>\n            Read more&nbsp;&nbsp;&#10140;\n          </Link>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default ArticlePreviewCard;\n","import \"./index.scss\";\n\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\n\nimport ArticlePreviewCard from \"./card\";\n\nconst ArticlePreview = () => {\n  const data = useStaticQuery(graphql`\n    query ArticlePreviewData {\n      allMdx: allMdx(limit: 3, sort: { frontmatter: { date: DESC } }) {\n        nodes {\n          fields {\n            slug\n            timeToRead {\n              text\n            }\n          }\n          id\n          excerpt(pruneLength: 340)\n          frontmatter {\n            subtitle\n            date(formatString: \"Do MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <div className=\"h-feed article-preview\">\n      <h2 className=\"p-name\">Some of my writings&nbsp;.&nbsp;.</h2>\n      <div className=\"mx-auto py-4\">\n        <ul>\n          {data.allMdx.nodes.map((node: Queries.Mdx) => (\n            <ArticlePreviewCard key={node.id} data={node} />\n          ))}\n        </ul>\n      </div>\n      <Link to=\"articles\" className=\"p-url\">\n        Browse the complete list\n      </Link>\n    </div>\n  );\n};\n\nexport default ArticlePreview;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useInstagramNodes = () => {\n  // Keep potato quality image and redirect to instagram for full quality.\n  // Makes sure nobody wants to download images from my website.\n  // Also improves page load time.\n  const data = useStaticQuery(graphql`\n    query GalleryQuery {\n      allInstagramNode(\n        limit: 12\n        filter: {\n          mediaType: { eq: \"GraphImage\" }\n          fields: { visibility: { eq: true } }\n        }\n        sort: { timestamp: DESC }\n      ) {\n        edges {\n          node {\n            id\n            caption\n            localFile {\n              childImageSharp {\n                gatsbyImageData(placeholder: TRACED_SVG, width: 250)\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data.allInstagramNode.edges;\n};\n\nexport default useInstagramNodes;\n","import \"./index.scss\";\n\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\ntype Props = {\n  data: Queries.InstagramNodeEdge;\n};\n\nconst Card = ({ data }: Props) => {\n  const image = getImage(data.node.localFile);\n\n  return (\n    <div className=\"inline-flex w-full items-stretch cursor-pointer aspect-square instagram-gallery-image-wrapper\">\n      <GatsbyImage className=\"w-full\" alt={data.node.id} image={image!} />\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport useInstagramNodes from \"../../hooks/use-insta-nodes\";\nimport Card from \"./card\";\n\nconst Gallery = () => {\n  const data = useInstagramNodes();\n\n  return (\n    <div className=\"flex flex-col w-full mx-auto px-4 mb-28 justify-between gallery-preview-container\">\n      <div\n        id=\"gallery-preview\"\n        aria-label=\"gallery-preview\"\n        className=\"flex flex-row justify-between pb-6\"\n      >\n        <h2 className=\"antialiased\">Gallery</h2>\n        <a\n          href=\"https://www.instagram.com/rishiikc/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"text-brand-700 dark:text-brand-400 hover:text-brand-900 dark:hover:text-brand-700 antialiased focus-within:outline-dotted focus-within:outline-2 focus-within:outline-brand-700\"\n        >\n          View all photos\n        </a>\n      </div>\n      <div className=\"flex mx-auto\">\n        <div className=\"grid grid-cols-3 sm:grid-cols-4 lg:grid-cols-6 grid-flow-row gap-2 auto-cols-min gallery-preview-list\">\n          {data.map((edge: Queries.InstagramNodeEdge) => {\n            return <Card data={edge} key={edge.node.id} />;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useGitRepositoryInfo = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      github {\n        viewer {\n          repositories(\n            orderBy: { field: STARGAZERS, direction: DESC }\n            first: 6\n            ownerAffiliations: OWNER\n          ) {\n            edges {\n              node {\n                id\n                name\n                url\n                descriptionHTML\n                stargazerCount\n                owner {\n                  login\n                }\n                languages(\n                  orderBy: { field: SIZE, direction: DESC }\n                  first: 10\n                ) {\n                  edges {\n                    node {\n                      color\n                      name\n                    }\n                    size\n                  }\n                  totalSize\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data.github.viewer.repositories.edges;\n};\n\nexport default useGitRepositoryInfo;\n","import React from \"react\";\n\ntype Props = {\n  languages?: Queries.Maybe<Queries.GitHub_LanguageConnection>;\n};\n\nconst Languages = ({ languages }: Props) => {\n  return (\n    <div className=\"repo-langs\">\n      {languages?.edges?.map(\n        (node: Queries.Maybe<Queries.GitHub_LanguageEdge>) => {\n          const n = node as Queries.GitHub_LanguageEdge;\n          let percentage = `${Math.ceil(\n            (n.size / languages!.totalSize) * 100\n          )}%`;\n          return (\n            <dfn\n              key={n.node.name}\n              title={`${n.node.name}, ${percentage}`}\n              style={{\n                backgroundColor: n.node.color!,\n                width: percentage,\n              }}\n            >\n              <div\n                style={{ backgroundColor: n.node.color!, width: percentage }}\n              ></div>\n            </dfn>\n          );\n        }\n      )}\n    </div>\n  );\n};\n\nexport default Languages;\n","import \"./index.scss\";\n\nimport React from \"react\";\n\nimport Languages from \"./languages\";\n\ntype Props = {\n  repository: Queries.Maybe<Queries.GitHub_Repository>;\n};\n\nfunction Card({ repository }: Props) {\n  return (\n    <li role=\"listitem\" className=\"h-item\">\n      <a href={repository?.url} target=\"_blank\">\n        <div className=\"card\">\n          <Languages languages={repository?.languages} />\n          <div className=\"p-name\">\n            <h2>{repository?.name}</h2>\n            <small>&#9733;&nbsp;&nbsp;{repository?.stargazerCount}</small>\n          </div>\n          <div\n            className=\"repo-description\"\n            dangerouslySetInnerHTML={{ __html: repository?.descriptionHTML }}\n          ></div>\n        </div>\n      </a>\n    </li>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport useGitRepositoryInfo from \"../../hooks/use-git-repositories\";\nimport RepoCard from \"./card\";\n\nconst Github = () => {\n  const data = useGitRepositoryInfo();\n\n  return (\n    <div id=\"repositories\" className=\"git-preview\">\n      <h2 className=\"git-preview-header\">Popular OSS repositories</h2>\n      <div>\n        <ul role=\"list\" className=\"git-preview-list\">\n          {data.map((repository: Queries.GitHub_RepositoryEdge) => (\n            <RepoCard\n              key={repository.node?.name}\n              repository={repository.node}\n            />\n          ))}\n        </ul>\n      </div>\n      <a\n        href=\"https://github.com/rishichawda\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        See more projects on GitHub\n      </a>\n    </div>\n  );\n};\n\nexport default Github;\n","import \"../stylesheets/homepage.scss\";\n\nimport { Link, PageProps } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\n\nimport { Player } from \"@lottiefiles/react-lottie-player\";\n\nimport ArticlePreview from \"../components/articles/preview\";\nimport Gallery from \"../components/gallery\";\nimport Layout from \"../components/layout\";\nimport Github from \"../components/repository\";\nimport SEO from \"../components/seo\";\nimport etcLottie from \"../lottie-assets/i-do-everything.json\";\nimport mobileLottie from \"../lottie-assets/i-do-mobile-stuff-too.json\";\nimport webLottie from \"../lottie-assets/i-do-web-stuff.json\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <Layout>\n      <div className=\"root-container\">\n        <main className=\"main-container\">\n          <div id=\"about\" className=\"h-card\">\n            <div>\n              <h1>\n                Hi, I'm <span className=\"p-nickname\">Rishi</span>.\n              </h1>\n              <p className=\"p-note\">\n                Currently, I am a software engineer by profession. I started out\n                building websites as a freelancer, then built fullstack web and\n                mobile applications as a professional. Now, I'm building awesome\n                DevSecOps tools with the Chef team at Progress.\n                <br />\n                <br />\n                Apart from my work, I spend time reading{\" \"}\n                <Link to=\"/reads\">books</Link>, painting or just doodling,\n                designing solutions to random ideas, learning new things and\n                occasionally indulging in{\" \"}\n                <a href=\"#gallery-preview\">photography</a>.<br />\n              </p>\n            </div>\n            <div className=\"u-photo\">\n              <StaticImage\n                src=\"../../static/assets/handsome-guy.webp\"\n                alt=\"handsome\"\n                formats={[\"webp\"]}\n                placeholder=\"tracedSVG\"\n              />\n            </div>\n          </div>\n          <div className=\"services\">\n            <h2>I design and build</h2>\n            <div className=\"services-info\">\n              <div className=\"services-info-images\">\n                <Player autoplay loop speed={2} src={webLottie}></Player>\n                <p className=\"md:hidden text-center mb-8\">\n                  user experiences inside your browser through websites\n                </p>\n                <Player autoplay loop src={mobileLottie}></Player>\n                <p className=\"md:hidden text-center mb-8\">\n                  native boxes, buttons and experiences on your mobile\n                  applications\n                </p>\n                <Player autoplay loop speed={0.5} src={etcLottie}></Player>\n                <p className=\"md:hidden text-center\">\n                  software, tools and more..\n                </p>\n              </div>\n              <div className=\"services-info-text\">\n                <p className=\"text-center\">\n                  user experiences inside your browser through websites\n                </p>\n                <p className=\"text-center\">\n                  native boxes, buttons and experiences on your mobile\n                  applications\n                </p>\n                <p className=\"text-center\">system software, tools and more..</p>\n              </div>\n            </div>\n          </div>\n          <ArticlePreview />\n          <Github />\n          <Gallery />\n        </main>\n      </div>\n    </Layout>\n  );\n};\n\nexport const Head = () => <SEO />;\n\nexport default IndexPage;\n"],"names":["_ref","_data$fields","_data$frontmatter","_data$fields2","data","React","className","role","Link","tabIndex","to","fields","slug","frontmatter","title","excerpt","ArticlePreview","useStaticQuery","allMdx","nodes","map","node","ArticlePreviewCard","key","id","useInstagramNodes","allInstagramNode","edges","image","getImage","localFile","GatsbyImage","alt","Gallery","href","target","rel","edge","Card","useGitRepositoryInfo","github","viewer","repositories","_languages$edges","languages","n","percentage","Math","ceil","size","totalSize","name","style","backgroundColor","color","width","repository","url","Languages","stargazerCount","dangerouslySetInnerHTML","__html","descriptionHTML","Github","_repository$node","RepoCard","Head","SEO","IndexPage","Layout","StaticImage","src","formats","placeholder","__imageData","require","Player","autoplay","loop","speed","webLottie","mobileLottie","etcLottie"],"sourceRoot":""}
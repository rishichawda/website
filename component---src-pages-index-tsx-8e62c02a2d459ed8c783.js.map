{"version":3,"file":"component---src-pages-index-tsx-8e62c02a2d459ed8c783.js","mappings":"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","sources":["webpack://portfolio/./node_modules/camelcase/index.js","webpack://portfolio/../src/image-utils.ts","webpack://portfolio/../src/components/hooks.ts","webpack://portfolio/../src/components/picture.tsx","webpack://portfolio/../src/components/layout-wrapper.tsx","webpack://portfolio/../src/components/placeholder.tsx","webpack://portfolio/../src/components/main-image.tsx","webpack://portfolio/../src/components/gatsby-image.browser.tsx","webpack://portfolio/../src/components/gatsby-image.server.tsx","webpack://portfolio/../src/components/static-image.server.tsx","webpack://portfolio/../src/components/static-image.tsx","webpack://portfolio/./src/components/hero/art.tsx","webpack://portfolio/./src/components/hero/index.tsx","webpack://portfolio/./src/components/gallery.tsx","webpack://portfolio/./src/components/quote.tsx","webpack://portfolio/./src/components/github/card.tsx","webpack://portfolio/./src/components/github/index.tsx","webpack://portfolio/./src/components/articlePreview.tsx","webpack://portfolio/./src/pages/index.tsx"],"sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n  return string;\n};\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n  if (input.length === 0) {\n    return '';\n  }\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n  var hasUpperCase = input !== input.toLowerCase();\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import * as React from \"react\"\n\nconst HeroSVG: React.FC = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      className=\"transition-all w-full md:max-w-screen-sm lg:max-w-screen-md 2xl:max-w-screen-xl\"\n      id=\"hero-art\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      // width=\"50%\"\n      height=\"auto\"\n      viewBox=\"0 0 1087.542 657\"\n      {...props}\n    >\n      <defs>\n        <linearGradient\n          id=\"prefix__b\"\n          x1={0.5}\n          x2={0.5}\n          y2={1}\n          gradientUnits=\"objectBoundingBox\"\n        >\n          <stop offset={0} stopColor=\"#793900\" />\n          <stop offset={1} stopColor=\"#3d1d00\" />\n        </linearGradient>\n        <filter\n          id=\"prefix__a\"\n          x={630.446}\n          y={421.25}\n          width={141.243}\n          height={60.5}\n          filterUnits=\"userSpaceOnUse\"\n        >\n          <feOffset dx={20} dy={20} />\n          <feGaussianBlur stdDeviation={10} result=\"blur\" />\n          <feFlood floodColor=\"#fff\" />\n          <feComposite operator=\"in\" in2=\"blur\" />\n          <feComposite in=\"SourceGraphic\" />\n        </filter>\n      </defs>\n      <g data-name=\"study desk\">\n        <g data-name=\"post its\">\n          <path\n            data-name=\"Path 60\"\n            d=\"M285.652 299.019v-175.5a7.53 7.53 0 017.521-7.521h138.729a7.53 7.53 0 017.521 7.521v175.5a7.53 7.53 0 01-7.521 7.521H293.174a7.53 7.53 0 01-7.522-7.521zm7.521-181.35a5.857 5.857 0 00-5.85 5.85v175.5a5.857 5.857 0 005.85 5.85h138.729a5.857 5.857 0 005.85-5.85v-175.5a5.856 5.856 0 00-5.85-5.85z\"\n            fill=\"#e6e6e6\"\n          />\n          <path\n            data-name=\"Path 61\"\n            d=\"M370.318 196.595V160.56a3.765 3.765 0 013.761-3.761h30.537a3.765 3.765 0 013.761 3.761v36.036a3.765 3.765 0 01-3.761 3.761h-30.538a3.765 3.765 0 01-3.76-3.762z\"\n            fill=\"#6c63ff\"\n          />\n          <path\n            data-name=\"Path 62\"\n            d=\"M310.982 213.31v-36.036a3.765 3.765 0 013.761-3.761h30.537a3.765 3.765 0 013.761 3.761v36.036a3.765 3.765 0 01-3.761 3.761h-30.538a3.765 3.765 0 01-3.761-3.761z\"\n            fill=\"#ccc\"\n          />\n          <path\n            data-name=\"Path 63\"\n            d=\"M358.618 264.288v-36.035a3.765 3.765 0 013.761-3.761h30.537a3.765 3.765 0 013.761 3.761v36.036a3.765 3.765 0 01-3.761 3.761h-30.538a3.765 3.765 0 01-3.761-3.761z\"\n            fill=\"#ff6584\"\n          />\n        </g>\n        <g data-name=\"scrum board\">\n          <path\n            data-name=\"Path 90\"\n            d=\"M1077.08 61.005h-334.4a10.477 10.477 0 00-10.465 10.465v176.412a10.477 10.477 0 0010.465 10.465h334.4a10.477 10.477 0 0010.465-10.465V71.466a10.477 10.477 0 00-10.465-10.461zm9.469 186.881a9.477 9.477 0 01-9.469 9.469h-334.4a9.477 9.477 0 01-9.469-9.469V71.466a9.477 9.477 0 019.469-9.469h334.4a9.477 9.477 0 019.469 9.469z\"\n            fill=\"#3f3d56\"\n          />\n          <path\n            data-name=\"Path 91\"\n            d=\"M1060.631 89.591h-301.5a.5.5 0 110-1h301.5a.5.5 0 110 1z\"\n            fill=\"#3f3d56\"\n          />\n          <path\n            data-name=\"Path 92\"\n            d=\"M844.347 236.917a.5.5 0 01-.5-.5V72.462a.5.5 0 111 0v163.957a.5.5 0 01-.5.5z\"\n            fill=\"#3f3d56\"\n          />\n          <path\n            data-name=\"Path 93\"\n            d=\"M919.598 236.917a.5.5 0 01-.5-.5V72.462a.5.5 0 111 0v163.957a.5.5 0 01-.5.498z\"\n            fill=\"#3f3d56\"\n          />\n          <path\n            data-name=\"Path 94\"\n            d=\"M994.849 236.917a.5.5 0 01-.5-.5V72.462a.5.5 0 111 0v163.957a.5.5 0 01-.5.498z\"\n            fill=\"#3f3d56\"\n          />\n          <path\n            data-name=\"Path 95\"\n            d=\"M795.965 141.029h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#6c63ff\"\n          />\n          <path\n            data-name=\"Path 96\"\n            d=\"M821.879 202.326h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#6c63ff\"\n          />\n          <path\n            data-name=\"Path 97\"\n            d=\"M880.684 153.986h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#6c63ff\"\n          />\n          <path\n            data-name=\"Path 98\"\n            d=\"M956.932 130.564h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#6c63ff\"\n          />\n          <path\n            data-name=\"Path 99\"\n            d=\"M1027.199 130.564h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.242 2.243v21.489a2.245 2.245 0 01-2.242 2.242z\"\n            fill=\"#6c63ff\"\n          />\n          <path\n            data-name=\"Path 100\"\n            d=\"M1059.592 136.544h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#e6e6e6\"\n          />\n          <path\n            data-name=\"Path 101\"\n            d=\"M1045.14 174.917h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#e6e6e6\"\n          />\n          <path\n            data-name=\"Path 102\"\n            d=\"M983.345 166.943h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#ff6584\"\n          />\n          <path\n            data-name=\"Path 103\"\n            d=\"M947.962 174.917h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#e6e6e6\"\n          />\n          <path\n            data-name=\"Path 104\"\n            d=\"M871.714 208.804h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#e6e6e6\"\n          />\n          <path\n            data-name=\"Path 105\"\n            d=\"M779.519 180.399h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#ff6584\"\n          />\n          <path\n            data-name=\"Path 106\"\n            d=\"M830.849 141.029h-18.21a2.245 2.245 0 01-2.243-2.243v-21.488a2.245 2.245 0 012.243-2.243h18.21a2.245 2.245 0 012.243 2.243v21.489a2.245 2.245 0 01-2.243 2.242z\"\n            fill=\"#e6e6e6\"\n          />\n          <path\n            data-name=\"Path 107\"\n            d=\"M815.942 81.432h-28.406a1.994 1.994 0 010-3.987h28.406a1.994 1.994 0 010 3.987z\"\n            fill=\"#ccc\"\n          />\n          <path\n            data-name=\"Path 108\"\n            d=\"M896.175 81.432H867.77a1.994 1.994 0 010-3.987h28.406a1.994 1.994 0 110 3.987z\"\n            fill=\"#ccc\"\n          />\n          <path\n            data-name=\"Path 109\"\n            d=\"M971.426 81.432h-28.405a1.994 1.994 0 010-3.987h28.406a1.994 1.994 0 010 3.987z\"\n            fill=\"#ccc\"\n          />\n          <path\n            data-name=\"Path 110\"\n            d=\"M1041.693 81.432h-28.405a1.994 1.994 0 010-3.987h28.406a1.994 1.994 0 110 3.987z\"\n            fill=\"#ccc\"\n          />\n        </g>\n        <path\n          d=\"M703.822 479.293H656a30.626 30.626 0 002.377-11.5c0-6.325-2.377-13.8-2.377-13.8h47.822s-2.464 7.474-2.464 13.8a29.738 29.738 0 002.464 11.5z\"\n          fill=\"#3f3d56\"\n        />\n        <path\n          d=\"M516.365 477.289v-42.784h-19.766l-1.226 42.784-25.274 1.186s22.949.319 23.162.319h26.568c.219 0 19.762.189 19.806-.562z\"\n          fill=\"#ccc\"\n        />\n        <path\n          data-name=\"Path 152\"\n          d=\"M588.935 435.295H419.947c-1.846 0-3.34-.363-3.34-.808v-5.753h175.664v5.753c0 .446-1.494.807-3.34.808z\"\n          fill=\"#ccc\"\n        />\n        <path\n          id=\"left-monitor\"\n          className=\"transition-all\"\n          data-name=\"Path 153\"\n          d=\"M592.447 430.38h-176V328.421a4.04 4.04 0 014.036-4.036h167.928a4.04 4.04 0 014.036 4.036z\"\n          fill=\"#3f3d56\"\n        />\n        <path\n          d=\"M581.478 478.98H431.414a.394.394 0 010-.788h150.064a.394.394 0 010 .788z\"\n          fill=\"#ccc\"\n        />\n        <g data-name=\"monitor\">\n          <path\n            data-name=\"stand\"\n            d=\"M866.365 477.289v-42.784h-19.766l-1.226 42.784-25.274 1.186s22.949.319 23.162.319h26.568c.219 0 19.762.189 19.806-.562z\"\n            fill=\"#ccc\"\n          />\n          <g data-name=\"screen\">\n            <path\n              data-name=\"Path 152\"\n              d=\"M938.935 435.295H769.947c-1.846 0-3.34-.363-3.34-.808v-5.753h175.664v5.753c0 .446-1.494.807-3.34.808z\"\n              fill=\"#ccc\"\n            />\n            <path\n              id=\"right-monitor\"\n              className=\"transition-all\"\n              data-name=\"Path 153\"\n              d=\"M942.447 430.38h-176V328.421a4.04 4.04 0 014.036-4.036h167.928a4.04 4.04 0 014.036 4.036z\"\n              fill=\"#3f3d56\"\n            />\n          </g>\n          <path\n            data-name=\"shadow\"\n            d=\"M931.478 478.98H781.414a.394.394 0 010-.788h150.064a.394.394 0 010 .788z\"\n            fill=\"#ccc\"\n          />\n        </g>\n        <path\n          d=\"M251.614 515.996a39.063 39.063 0 01-37.721-6.645c-13.212-11.089-17.351-29.358-20.725-46.275l-9.969-50.04 20.872 14.371c15.01 10.335 30.357 21 40.75 35.971s14.929 35.405 6.579 51.6\"\n          fill=\"#739e65\"\n        />\n        <path\n          d=\"M249.83 576.575c2.112-15.387 4.285-30.973 2.8-46.525-1.316-13.812-5.53-27.3-14.109-38.364a63.821 63.821 0 00-16.374-14.837c-1.637-1.034-3.144 1.561-1.514 2.59a60.672 60.672 0 0124 28.956c5.225 13.29 6.064 27.776 5.164 41.893-.544 8.537-1.7 17.018-2.861 25.489a1.554 1.554 0 001.048 1.845 1.509 1.509 0 001.845-1.048z\"\n          fill=\"#f2f2f2\"\n        />\n        <path\n          data-name=\"leaf\"\n          d=\"M229.483 549.346a28.755 28.755 0 01-25.055 12.931c-12.683-.6-23.257-9.454-32.775-17.858L143.5 519.562l18.633-.892c13.4-.641 27.145-1.239 39.908 2.893s24.533 14.077 26.867 27.287\"\n          fill=\"#739e65\"\n        />\n        <path\n          data-name=\"stem\"\n          d=\"M255.8 585.42c-10.168-17.991-21.958-37.984-43.035-44.377a48.02 48.02 0 00-18.1-1.869c-1.922.166-1.442 3.128.476 2.963a44.614 44.614 0 0128.887 7.642c8.145 5.544 14.487 13.252 19.854 21.425 3.288 5.007 6.233 10.226 9.178 15.438.941 1.666 3.693.463 2.74-1.222z\"\n          fill=\"#f2f2f2\"\n        />\n        <path\n          d=\"M272.092 604.357a21.774 21.774 0 00-13.343-18.237v-10.4h-17.445v10.729a21.763 21.763 0 00-12.616 17.909l-4.1 47.684h51.608z\"\n          fill=\"#e7eeeb\"\n        />\n        <g transform=\"translate(-502 -134.002)\">\n          <path\n            data-name=\"Path 32\"\n            d=\"M1335.442 788.038H576.1a1 1 0 110-2h759.341a1 1 0 110 2z\"\n            fill=\"#ccc\"\n          />\n          <path\n            data-name=\"Rectangle 4\"\n            d=\"M1451 620.002h11v170a1 1 0 01-1 1h-9a1 1 0 01-1-1v-170z\"\n            fill=\"#ccc\"\n          />\n          <path\n            data-name=\"Rectangle 6\"\n            d=\"M801 615.002h11v170a1 1 0 01-1 1h-9a1 1 0 01-1-1v-170z\"\n            fill=\"#ccc\"\n          />\n          <rect\n            data-name=\"Rectangle 5\"\n            width={13}\n            height={705}\n            rx={6.5}\n            transform=\"rotate(-90 702.501 -76.499)\"\n            fill=\"#653c03\"\n          />\n          <path\n            data-name=\"Rectangle 3\"\n            fill=\"#ccc\"\n            d=\"M1014.542 721h443v5h-443z\"\n          />\n          <path\n            data-name=\"Path 32\"\n            d=\"M1335.442 788.038H576.1a1 1 0 110-2h759.341a1 1 0 110 2z\"\n            fill=\"#ccc\"\n          />\n          <g transform=\"translate(843.845 694.543)\">\n            <path\n              data-name=\"Path 52\"\n              d=\"M98.997 27.995v-24a4 4 0 00-4-4h-91a4 4 0 00-4 4v24z\"\n              fill=\"#ccc\"\n            />\n            <circle\n              data-name=\"Ellipse 9\"\n              cx={3}\n              cy={3}\n              r={3}\n              transform=\"translate(46 12)\"\n              fill=\"#fff\"\n            />\n          </g>\n          <g transform=\"translate(843.845 725.293)\">\n            <path data-name=\"Rectangle 1\" fill=\"#ccc\" d=\"M0 0h99v31H0z\" />\n            <circle\n              data-name=\"Ellipse 10\"\n              cx={3}\n              cy={3}\n              r={3}\n              transform=\"translate(46 15)\"\n              fill=\"#fff\"\n            />\n          </g>\n          <g transform=\"translate(843.845 759.043)\">\n            <path\n              data-name=\"Path 53\"\n              d=\"M-.003-.005v24a4 4 0 004 4h91a4 4 0 004-4v-24z\"\n              fill=\"#ccc\"\n            />\n            <circle\n              data-name=\"Ellipse 11\"\n              cx={3}\n              cy={3}\n              r={3}\n              transform=\"translate(46.161 14.153)\"\n              fill=\"#fff\"\n            />\n          </g>\n          <g>\n            <path\n              data-name=\"Path 54\"\n              d=\"M931.621 667.178v27.526h-68.962a13.771 13.771 0 110-27.526z\"\n              fill=\"#f2f2f2\"\n            />\n            <path\n              data-name=\"Path 55\"\n              d=\"M933.315 694.492a1.059 1.059 0 01-1.059 1.059h-70.825a14.504 14.504 0 110-29.008h70.826a1.059 1.059 0 010 2.117h-70.826a12.387 12.387 0 100 24.773h70.826a1.059 1.059 0 011.058 1.059z\"\n              fill=\"#3f3d56\"\n            />\n            <path\n              data-name=\"Path 56\"\n              d=\"M931.621 673.53h-74.108a.212.212 0 010-.423h74.108a.212.212 0 010 .423z\"\n              fill=\"#ccc\"\n            />\n            <path\n              data-name=\"Path 57\"\n              d=\"M931.621 678.612h-74.108a.212.212 0 010-.423h74.108a.212.212 0 010 .423z\"\n              fill=\"#ccc\"\n            />\n            <path\n              data-name=\"Path 58\"\n              d=\"M931.621 683.693h-74.108a.212.212 0 010-.423h74.108a.212.212 0 010 .423z\"\n              fill=\"#ccc\"\n            />\n            <path\n              data-name=\"Path 59\"\n              d=\"M931.621 688.775h-74.108a.212.212 0 010-.423h74.108a.212.212 0 010 .423z\"\n              fill=\"#ccc\"\n            />\n          </g>\n        </g>\n        <g fill=\"#fff\">\n          <path\n            id=\"orange-ring\"\n            className=\"transition-all\"\n            data-name=\"Path 134\"\n            d=\"M48 96a48 48 0 1148-48 48 48 0 01-48 48zm0-94a46 46 0 1046 46A46 46 0 0048 2z\"\n            />\n          <path\n            id=\"green-ring\"\n            className=\"transition-all\"\n            data-name=\"Path 135\"\n            d=\"M374 68a24 24 0 1124-24 24 24 0 01-24 24zm0-46a22 22 0 1022 22 22 22 0 00-22-22z\"\n            />\n          <path\n            id=\"blue-ring\"\n            className=\"transition-all\"\n            data-name=\"Path 136\"\n            d=\"M543 185a27 27 0 1127-27 27 27 0 01-27 27zm0-52a25 25 0 1025 25 25 25 0 00-25-25z\"\n          />\n        </g>\n        <g transform=\"translate(409 293.258)\">\n          <path\n            data-name=\"Path 155\"\n            d=\"M336.345 160.436s-94.6.671-129.17 0c0 0-9.113.044-9.113-2.682s101.885-6.2 146.621 0c0 2.726-5.711 2.682-8.338 2.682z\"\n            fill=\"#2f2e41\"\n          />\n          <path\n            data-name=\"Path 156\"\n            d=\"M344.461 157.995l-146.4-.325 14.839-28.463.086-.135V66.066a5.985 5.985 0 016.135-5.823h105.343a5.985 5.985 0 016.136 5.823v63.439z\"\n            fill=\"#65737e\"\n          />\n          <path\n            id=\"laptop-screen\"\n            className=\"transition-all\"\n            data-name=\"Path 157\"\n            d=\"M218.98 64.597a2.018 2.018 0 00-2 2.032v61.546a2.018 2.018 0 002 2.032h106.481a2.018 2.018 0 002-2.032V66.629a2.018 2.018 0 00-2-2.032z\"\n            fill=\"#3f3d56\"\n          />\n          <ellipse\n            data-name=\"Ellipse 17\"\n            cx={1.285}\n            cy={1.306}\n            rx={1.285}\n            ry={1.306}\n            transform=\"translate(270.507 60.968)\"\n            fill=\"#2f2e41\"\n          />\n          <path\n            data-name=\"Path 159\"\n            d=\"M253.933 151.103a1.45 1.45 0 00-1.265.512l-1.116 4.149c-.106.208-.023.43.225.6a1.9 1.9 0 001.04.271h40.245a1.861 1.861 0 001.067-.29.441.441 0 00.171-.627l-.721-4.149a1.531 1.531 0 00-1.238-.465z\"\n            fill=\"#2f2e41\"\n          />\n          <path\n            data-name=\"Path 160\"\n            d=\"M330.599 132.965v1.165h-117.7l.089-.145v-1.016z\"\n            fill=\"#2f2e41\"\n          />\n          <g data-name=\"Group 105\">\n            <path\n              className=\"keyboard transition-all\"\n              data-name=\"Path 158\"\n              d=\"M230.14 136.335a.7.7 0 00-.628.507l-4.449 12.193a1.07 1.07 0 00.046.834.671.671 0 00.582.4h93.557a.674.674 0 00.588-.413 1.071 1.071 0 00.03-.847l-3.836-12.192a.691.691 0 00-.618-.481z\"\n              fill=\"#2f2e41\"\n              />\n            <g transform=\"translate(-409.004 -293.26)\" filter=\"url(#prefix__a)\">\n              <path\n              className=\"keyboard transition-all\"\n                data-name=\"Path 195\"\n                d=\"M721.693 431.5H640.45\"\n                fill=\"none\"\n                stroke=\"#f6fef7\"\n                strokeWidth={0.5}\n              />\n            </g>\n          </g>\n        </g>\n        <g\n          style={{\n            isolation: \"isolate\",\n          }}\n          fill=\"#3f3d56\"\n        >\n          <path\n            data-name=\"Path 67\"\n            d=\"M668.383 542.789h-48.01c0 1.38-49.48 2.5-49.48 2.5a12.854 12.854 0 00-2.11 2 12.41 12.41 0 00-2.9 8v2a12.5 12.5 0 0012.5 12.5h90a12.511 12.511 0 0012.5-12.5v-2a12.517 12.517 0 00-12.5-12.5z\"\n          />\n          <path data-name=\"Rectangle 2\" d=\"M629.159 653.293h-13v-84h13z\" />\n          <path\n            data-name=\"Path 68\"\n            d=\"M579.159 652.836c0 1.4 19.7.543 44 .543s44 .861 44-.543-19.7-12.543-44-12.543-44 11.143-44 12.543z\"\n          />\n        </g>\n        <path\n          d=\"M0 0h38v4H0z\"\n          transform=\"translate(879 475)\"\n          fill=\"url(#prefix__b)\"\n        />\n        <g>\n          <path\n            d=\"M888.987 411.031a1.689 1.689 0 00-1.343.912c-.4.968.324 2.059.984 2.724a15.617 15.617 0 013.333 4.149 6.7 6.7 0 01.183 5.75c-1.183 2.146-4 2.607-4.278 5.248a4.658 4.658 0 002.031 3.992c2.74 2.1 6.273 2.66 8.258 5.945a6.743 6.743 0 014.488-4.121c1.831-.557 3.733-.516 5.589-.894a1.866 1.866 0 001.542-1.094c.519-1.408-.96-3.1-.45-4.512.388-1.076 1.53-.993 2.363-1.424 1.357-.7 1.916-3.037 1.531-4.914a9.4 9.4 0 00-2.617-4.545 26.719 26.719 0 00-10.539-6.516c-1.744-.637-3.791-1.637-5.6-1.734-1.75-.092-3.744.638-5.475 1.034z\"\n            fill=\"rgba(238,238,238,0.47)\"\n          />\n          <path\n            className=\"cup transition-all\"\n            d=\"M913.406 447.044a7.91 7.91 0 107.91 7.91 7.91 7.91 0 00-7.91-7.91zm0 12.777a4.867 4.867 0 114.868-4.867 4.867 4.867 0 01-4.868 4.867z\"\n            fill=\"#5f57de\"\n          />\n          <path\n            className=\"cup transition-all\"\n            d=\"M882.984 440.96h30.422v30.109a3.963 3.963 0 01-3.963 3.963h-22.5a3.963 3.963 0 01-3.963-3.963z\"\n            fill=\"#6c63ff\"\n          />\n        </g>\n        <g>\n          <g data-name=\"Group 101\">\n            <g data-name=\"Group 100\">\n              <path\n                data-name=\"Path 40\"\n                d=\"M386.621 463.417v15.164h-67.906c-2.289.045-10.811.606-10.9-7.331s8.235-7.887 10.9-7.835z\"\n                fill=\"#f2f2f2\"\n              />\n              <path\n                data-name=\"Path 41\"\n                d=\"M388.315 478.462c0 .322-.474.583-1.059.583h-70.825c-8.01 0-10.2-3.064-10.2-7.477s2.188-8.5 10.2-8.5h70.826c.585 0 1.059.261 1.059.583s-.474.583-1.059.583h-70.826c-6.841 0-8.471 3.926-8.471 7.338s1.63 6.311 8.471 6.311h70.826c.585-.001 1.058.26 1.058.579z\"\n                fill=\"#6c63ff\"\n              />\n              <path\n                data-name=\"Path 42\"\n                d=\"M386.627 466.915h-72.016c-.114 0-.206-.052-.206-.117s.092-.117.206-.117h72.016c.114 0 .206.052.206.117s-.092.117-.206.117z\"\n                fill=\"#ccc\"\n              />\n              <path\n                data-name=\"Path 43\"\n                d=\"M386.627 469.717h-72.016c-.114 0-.206-.052-.206-.117s.092-.117.206-.117h72.016c.114 0 .206.052.206.117s-.092.117-.206.117z\"\n                fill=\"#ccc\"\n              />\n              <path\n                data-name=\"Path 44\"\n                d=\"M386.627 472.516h-72.016c-.114 0-.206-.052-.206-.117s.092-.117.206-.117h72.016c.114 0 .206.052.206.117s-.092.117-.206.117z\"\n                fill=\"#ccc\"\n              />\n              <path\n                data-name=\"Path 45\"\n                d=\"M386.627 475.316h-72.016c-.114 0-.206-.052-.206-.117s.092-.117.206-.117h72.016c.114 0 .206.052.206.117s-.092.117-.206.117z\"\n                fill=\"#ccc\"\n              />\n            </g>\n          </g>\n          <g data-name=\"Group 104\">\n            <path\n              data-name=\"Path 46\"\n              d=\"M387.017 451.808v11.685h-66.5c-4.851.074-9.408-1.023-11.884-2.861s-2.476-4.125 0-5.963 7.033-2.935 11.884-2.861z\"\n              fill=\"#f2f2f2\"\n            />\n            <path\n              data-name=\"Path 47\"\n              d=\"M387.833 463.39c0 .248-.469.448-1.048.449h-70.123c-7.931 0-10.36-2.751-10.36-6.145s2.429-6.146 10.36-6.146h70.123c.579 0 1.048.2 1.048.449s-.469.449-1.048.449h-70.123c-6.773 0-9.264 2.35-9.264 5.248s2.491 5.248 9.264 5.248h70.123c.578.001 1.048.201 1.048.448z\"\n              fill=\"#3f3d56\"\n            />\n          </g>\n          <path\n            data-name=\"Path 51\"\n            d=\"M386.63 460.223h-71.255c-.112 0-.2-.033-.2-.073s.091-.073.2-.073h71.255c.112 0 .2.033.2.073s-.088.073-.2.073z\"\n            fill=\"#ccc\"\n          />\n          <path\n            data-name=\"Path 50\"\n            d=\"M386.63 457.312h-71.255c-.112 0-.2-.033-.2-.073s.091-.073.2-.073h71.255c.112 0 .2.033.2.073s-.088.073-.2.073z\"\n            fill=\"#ccc\"\n          />\n          <path\n            data-name=\"Path 48\"\n            d=\"M386.63 454.402h-71.255c-.112 0-.2-.033-.2-.073s.091-.073.2-.073h71.255c.112 0 .2.033.2.073s-.088.073-.2.073z\"\n            fill=\"#ccc\"\n          />\n          <g data-name=\"Group 102\">\n            <path\n              data-name=\"Path 64\"\n              d=\"M374.105 441.036h-31.42a1.942 1.942 0 00-.86.2l-7.93 3.97a1.445 1.445 0 000 2.66l7.93 3.97a1.941 1.941 0 00.86.2h31.42a1.649 1.649 0 001.74-1.53v-7.94a1.649 1.649 0 00-1.74-1.53z\"\n              fill=\"#3f3d56\"\n            />\n            <path\n              data-name=\"Path 65\"\n              d=\"M375.842 442.571v7.94a1.649 1.649 0 01-1.74 1.53h-6.26v-11h6.26a1.649 1.649 0 011.74 1.53z\"\n              fill=\"#6c63ff\"\n            />\n          </g>\n        </g>\n        <path\n          d=\"M733.823 479.221c.069-.179 1.849-4.543 10.194-4.576s10.161 4.142 9.849 4.576-20.113.179-20.043 0z\"\n          fill=\"#e7eeeb\"\n        />\n        <path\n          d=\"M537.324 475.186h-2.212v-.726h-.853v-.47h.853v-1.031h-4.621v1.031h.75v.47h-.75v.726h-2.773v-.726h-.788v-.47h.788v-1.031h-4.621v1.031h.765v.47h-.765v.726h-2.773v-.726h-.828v-.47h.828v-1.031h-4.621v1.031h.924v.47h-.924v.726h-2.779v-.726h-.859v-.47h.859v-1.031h-4.621v1.031h.8v.47h-.8v.726h-2.769v-.726h-.81v-.47h.806v-1.031h-4.621v1.031h.871v.47h-.871v.726h-2.773v-.726h-.844v-.47h.844v-1.031h-4.621v1.031h.924v.47h-.924v.726h-2.773v-.726h-.869v-.47h.869v-1.031h-4.618v1.031h.857v.47h-.857v.726h-2.773v-.726h-.934v-.47h.934v-1.031h-4.621v1.031h.873v.47h-.873v.726h-2.839v-.726h-.95v-.47h.95v-1.031h-4.812v1.031h.881v.47h-.881v.726h-2.791v-.726h-.811v-.47h.811v-1.031h-4.347v1.031h.8v.47h-.8v.726h-2.912v-.726h-.81v-.47h.81v-1.031h-5v1.031h.811v.47h-.811v.726h-1.273c-1.531 0-1.529-.157-1.529 1.454v2.39l85.618-.04v-2.35c0-1.612.009-1.454-1.521-1.454z\"\n          fill=\"#3f3d56\"\n        />\n        <path\n          d=\"M709.58 475.903h-.654c0-.3-.455-1.347-1.016-1.347h-3.049c-.561 0-1.016 1.043-1.016 1.347h-3.049c0-.3-.455-1.347-1.016-1.347h-3.048c-.561 0-1.016 1.043-1.016 1.347h-3.049c0-.3-.455-1.347-1.016-1.347h-3.049c-.561 0-1.016 1.043-1.016 1.347h-3.044c0-.3-.455-1.347-1.016-1.347h-3.054c-.561 0-1.016 1.043-1.016 1.347h-3.049c0-.3-.455-1.347-1.016-1.347h-3.049c-.561 0-1.016 1.043-1.016 1.347h-3.049c0-.3-.455-1.347-1.016-1.347h-3.049c-.561 0-1.016 1.043-1.016 1.347h-3.049c0-.3-.455-1.347-1.016-1.347h-3.049c-.561 0-1.016 1.043-1.016 1.347h-3.049c0-.3-.455-1.347-1.016-1.347h-3.049c-.561 0-1.016 1.043-1.016 1.347h-3.049c0-.3-.455-1.347-1.016-1.347h-3.049c-.561 0-1.016 1.043-1.016 1.347h-3.049c0-.3-.455-1.347-1.016-1.347h-3.049c-.561 0-1.016 1.043-1.016 1.347h-3.049c0-.3-.455-1.347-1.016-1.347h-3.049c-.561 0-1.016 1.043-1.016 1.347h1.346c-1.684 0-3.049.739-3.049 1.651s1.365 1.651 3.049 1.651h85.687c1.684 0 3.049-.739 3.049-1.651s-1.364-1.651-3.048-1.651z\"\n          fill=\"#e7eeeb\"\n        />\n      </g>\n    </svg>\n  )\n}\n\nexport default HeroSVG\n","import Header from 'components/header'\nimport getSiteMetadata from 'query/getSiteMetadata'\nimport * as React from 'react'\nimport HeroSVG from './art'\nimport \"./index.css\"\n\nconst HeroAnimation = () => {\n    return <div className=\"bg-brand dark:bg-slate-900 flex flex-col justify-center items-center w-full px-4 hero-main-height md:h-screen\">\n        <HeroSVG />\n    </div>\n}\n\nexport default HeroAnimation\n","import { graphql, useStaticQuery } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { onClickProfileUrl } from \"utils/onclick\"\nimport React from 'react'\n\nconst Gallery = () => {\n  // Keep potato quality image and redirect to instagram for full quality.\n  // Makes sure nobody wants to download images from my website.\n  // Also improves page load time.\n  const data = useStaticQuery(graphql`\nquery GalleryQuery {\n  allInstaNode(\n    limit: 12\n    filter: {mediaType: {eq: \"GraphImage\"}, fields: {visibility: {eq: true}}}\n    sort: {order: DESC, fields: timestamp}\n  ) {\n    edges {\n      node {\n        id\n        caption\n        localFile {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, quality: 2)\n          }\n        }\n      }\n    }\n  }\n}\n`)\n\n  return (\n    <div className=\"flex flex-col max-w-screen-2xl mx-auto px-4 w-full mb-28 justify-between\">\n      <div className=\"flex flex-row justify-between pb-6\">\n        <h2 className=\"italic antialiased\">Gallery</h2>\n        <a href=\"https://www.instagram.com/rishiikc/\" target=\"_blank\" className=\"text-brand dark:text-gray-400 text-xl italic antialiased\">View all photos</a>\n      </div>\n      <div className=\"overflow-hidden flex mx-auto w-full px-6 py-6 border-4 border-dashed bg-slate-400 border-gray-500 bg-opacity-20 border-opacity-40 rounded-lg\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 lg:grid-cols-4 xl:grid-cols-6 grid-flow-row gap-2 auto-cols-min\">\n          {data.allInstaNode.edges.map((item, i) => {\n            const image = getImage(item.node.localFile)\n            return (\n              <div onClick={() => onClickProfileUrl(\"https://www.instagram.com/rishiikc/\")} className=\"inline-flex w-full items-stretch cursor-pointer aspect-square\" key={item.node.id}>\n                <GatsbyImage className='w-full' alt={item.node.id} image={image} />\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Gallery","import React from 'react'\n\n// TODO: Content is ready, just need to fetch and display.\n// Why haven't I done this yet?\nconst RandomQuote = () => {\n  return (\n    <div className=\"flex flex-col max-w-3xl mx-auto px-4 m:px-0 m:w-2/3 mb-28 justify-between\">\n      <p className=\"text-xl antialiased italic text-center mb-10 leading-loose\">“The happiness of those who want to be popular depends on others;\n        the happiness of those who seek pleasure fluctuates with moods outside their control;\n        but the happiness of the wise grows out of their own free acts.”</p>\n      <p className=\"text-xl antialiased text-center\">Marcus Aurelius</p>\n    </div>\n  )\n}\n\nexport default RandomQuote","import React from 'react'\n\nfunction Card({ repository }) {\n  return (\n    <a className=\"inline-flex w-full items-stretch\" href={repository.url} target=\"_blank\">\n      <div className=\"relative w-full bg-white dark:bg-gray-700 py-4 px-5 shadow-md ring-1 ring-gray-900/5 sm:mx-auto sm:max-w-lg rounded-lg overflow-hidden\">\n        <div className=\"w-full h-1 flex absolute top-0 left-0\">\n          {repository.languages.edges.map((node) => {\n            let percentage = `${Math.round((node.size / repository.languages.totalSize) * 100)}%`\n            return (\n              <dfn key={node.node.name} className=\"h-full\" title={`${node.node.name}, ${percentage}`} style={{ backgroundColor: node.node.color, minWidth: percentage }}>\n                <div className=\"h-full w-full\" style={{ backgroundColor: node.node.color }}></div>\n              </dfn>\n            )\n          })}\n        </div>\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-lg\">\n            {repository.name}\n          </h2>\n          <p className=\"ml-2\">\n            &#9733;&nbsp;&nbsp;{repository.stargazerCount}</p>\n        </div>\n        <div className=\"repo-description opacity-70\" dangerouslySetInnerHTML={{ __html: repository.descriptionHTML }}></div>\n      </div>\n    </a>\n  )\n}\n\nexport default Card","import RepoCard from 'components/github/card'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport React from 'react'\n\nconst Github = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      github {\n    viewer {\n      repositories(\n        orderBy: {field: STARGAZERS, direction: DESC}\n        first: 6\n        ownerAffiliations: OWNER\n      ) {\n        edges {\n          node {\n            id\n            name\n            url\n            descriptionHTML\n            stargazerCount\n            owner {\n              login\n            }\n            languages(orderBy: {field: SIZE, direction: DESC}, first: 10) {\n              edges {\n                node {\n                  color\n                  name\n                }\n                size\n              }\n              totalSize\n            }\n          }\n        }\n      }\n    }\n  }\n    }\n  `)\n  return (\n    <div className=\"flex flex-col max-w-screen-2xl mx-auto px-4 mb-28 justify-between\">\n      <h2 className=\"italic antialiased\">Open source</h2>\n      <div className=\"mx-auto py-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 grid-flow-row gap-4 auto-cols-min gap-y-5\">\n          {data.github.viewer.repositories.edges.map((repository, _) => (\n            <div className=\"flex items-stretch w-full\" key={repository.node.name}>\n              <RepoCard repository={repository.node} />\n            </div>\n          ))}\n        </div>\n      </div>\n      <a href=\"https://github.com/rishichawda\" target=\"_blank\" className=\"text-brand dark:text-gray-400 text-xl italic antialiased\">See more projects on GitHub</a>\n    </div>\n  )\n}\n\nexport default Github\n","import { graphql, useStaticQuery } from 'gatsby'\nimport GatsbyLink from 'gatsby-link'\nimport React from 'react'\n\nconst ArticlePreview = () => {\n  const data = useStaticQuery(graphql`\n  query ArticlePreviewData {\n  allMdx: allMdx(limit: 2, sort: {fields: frontmatter___date, order: DESC}) {\n    nodes {\n      slug\n      id\n      excerpt(pruneLength: 340)\n      frontmatter {\n        subtitle\n        date(formatString: \"Do MMMM, YYYY\")\n        title\n      }\n    }\n  }\n}\n  `)\n  return (\n    <div className=\"flex flex-col max-w-screen-2xl mx-auto px-4 mb-28 justify-between\">\n      <h2 className=\"italic antialiased\">Some of my writings</h2>\n      <div className=\"mx-auto py-4\">\n        <div className=\"flex flex-col justify-between\">\n          {\n            data.allMdx.nodes.map(node => (\n              <article className=\"my-2\" key={node.id}>\n                <div className=\"p-2 px-0 flex flex-col justify-between leading-normal\">\n                  <GatsbyLink to={`/${node.slug}`}>\n                    <div className=\"mb-2\">\n                      <div className=\"flex flex-col md:flex-row md:justify-between md:items-center mb-4\">\n                        <h2 className=\"text-brand dark:text-gray-300 font-semibold text-2xl mb-2 md:mb-0\">{node.frontmatter.title}</h2>\n                        <div className=\"flex items-center text-sm text-gray-400\">\n                          <p>{node.frontmatter.date}</p>\n                        </div>\n                      </div>\n                      <p className=\"article-preview font-normal leading-7 tracking-wide text-gray-500 dark:text-gray-400\">{node.excerpt}</p>\n                    </div>\n                  </GatsbyLink>\n                </div>\n              </article>\n            ))\n          }\n        </div>\n      </div>\n      <GatsbyLink to=\"articles\" className=\"text-brand dark:text-gray-400 text-xl italic antialiased\">Browse the complete list</GatsbyLink>\n    </div>\n  )\n}\n\nexport default ArticlePreview\n","import * as React from \"react\"\nimport HeroAnimation from \"components/hero\"\nimport Layout from \"components/layout\"\nimport SEO from \"components/seo\"\nimport './index.css'\nimport HandsomeGuySVG from \"assets/handsome-guy.svg\"\nimport Gallery from \"components/gallery\"\nimport RandomQuote from \"components/quote\"\nimport Github from \"components/github\"\nimport ArticlePreview from \"components/articlePreview\"\n\nconst IndexPage = () => (\n  <>\n    <Layout>\n      <SEO title=\"Home\" />\n      <HeroAnimation />\n      <div className=\"flex flex-col w-full py-44\">\n        {/* intro section */}\n        <div className=\"flex md:flex-row flex-col-reverse max-w-screen-2xl mx-auto px-4 mb-28 justify-between\">\n          <div className=\"flex flex-col lg:w-8/12 justify-around\">\n            <h1 className=\"text-4xl md:text-right italic antialiased\">Hi, I'm Rishi.</h1>\n            {/* <p className=\"text-right italic font-light antialiased\">..and that above is my desk setup when I designed this page</p> */}\n            <p className=\"font-normal leading-7 tracking-wide antialiased text-lg my-7\">Currently, I am a software engineer by profession and building\n              awesome tools with the Chef team at Progress.<br /><br />\n              Apart from my work, I spend time reading books, painting or\n              just doodling, designing solutions to random ideas, learning\n              new things and occasionally indulging in photography.<br /><br />\n              Curious about science and mathematics, I spend an awful\n              lot of time gathering knowledge that I don’t generally\n              use in day to day life. It’s good for geeking out though. :) </p>\n            {/* <a className=\"text-brand dark:text-gray-400 text-xl italic antialiased\">Read more about me</a> */}\n          </div>\n          <div className=\"flex md:w-3/12 my-7\">\n            <HandsomeGuySVG className=\"w-full h-auto\" />\n          </div>\n        </div>\n        {/* blog preview section */}\n        <ArticlePreview />\n        {/* popular repo preview section */}\n        <Github />\n        {/* gallery preview section */}\n        <Gallery />\n        {/* random quote section */}\n        <RandomQuote />\n      </div>\n    </Layout>\n  </>\n)\n\nexport default IndexPage"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","N","HTMLImageElement","prototype","W","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","j","r","u","loading","shouldLoad","style","opacity","O","n","s","o","l","backgroundColor","width","height","position","top","left","bottom","right","objectFit","objectPosition","d","transition","V","z","D","_ref5","layout","paddingTop","maxWidth","display","alt","role","A","children","c","q","P","H","srcSet","_t$alt","decoding","G","_t$sources","sources","_t$shouldLoad","sizes","_ref6","media","type","key","propTypes","displayName","B","F","Error","U","Q","ee","Y","_len","arguments","_key","h","concat","X","image","J","Z","K","Set","te","_e$as","as","className","g","class","p","onStartLoad","onLoad","f","onError","w","y","b","v","E","M","k","S","$","I","JSON","stringify","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ae","ie","re","_len2","_key2","ne","se","oe","__imageData","__error","console","warn","props","React","id","xmlns","viewBox","x1","x2","y2","gradientUnits","offset","stopColor","filterUnits","dx","dy","stdDeviation","result","floodColor","operator","in2","in","fill","transform","rx","cx","cy","ry","stroke","strokeWidth","isolation","HeroSVG","data","useStaticQuery","href","target","allInstaNode","edges","item","getImage","node","localFile","onClick","onClickProfileUrl","GatsbyImage","_ref","repository","url","languages","percentage","Math","round","size","totalSize","name","title","color","minWidth","stargazerCount","descriptionHTML","github","viewer","repositories","RepoCard","allMdx","nodes","GatsbyLink","to","slug","frontmatter","date","excerpt","Layout","SEO","HeroAnimation","HandsomeGuySVG","ArticlePreview","Github","Gallery","RandomQuote"],"sourceRoot":""}
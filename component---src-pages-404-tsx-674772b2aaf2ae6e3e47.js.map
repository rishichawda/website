{"version":3,"file":"component---src-pages-404-tsx-674772b2aaf2ae6e3e47.js","mappings":"gJA4FA,IArFYA,IAOK,IAPJ,MACXC,EAAK,YACLC,EAAW,SACXC,EAAQ,MACRC,EAAK,KACLC,EAAI,SACJC,GACSN,EACT,MAAMO,GAAsBC,EAAAA,EAAAA,KAEtBC,EAAM,CACVR,MAAOA,GAASM,EAAoBN,MACpCC,YAAaA,GAAeK,EAAoBL,YAChDE,MAAM,GAAIG,EAAoBG,QAAUN,EACxCC,KAAMA,GAAQ,UACdM,IAAI,GAAIJ,EAAoBG,QAAUE,EAAAA,cAAAA,SAAAA,UAGxC,OACEC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMC,KAAK,OACXD,EAAAA,cAAA,aAAQJ,EAAIR,OACZY,EAAAA,cAAA,QAAME,KAAK,cAAcC,QAASP,EAAIP,cACtCW,EAAAA,cAAA,QAAME,KAAK,QAAQC,QAASP,EAAIL,QAC/BD,EAAWU,EAAAA,cAAA,QAAME,KAAK,WAAWC,QAASb,IAAe,KAE1DU,EAAAA,cAAA,QAAME,KAAK,WAAWC,QAASP,EAAIR,QACnCY,EAAAA,cAAA,QAAME,KAAK,eAAeC,QAASP,EAAIR,QACvCY,EAAAA,cAAA,QAAME,KAAK,UAAUC,QAAST,EAAoBU,GAAGZ,OACrDQ,EAAAA,cAAA,QAAME,KAAK,iBAAiBC,QAASP,EAAIP,cACzCW,EAAAA,cAAA,QAAME,KAAK,WAAWC,QAASP,EAAIL,QACnCS,EAAAA,cAAA,QAAME,KAAK,SAASC,QAASP,EAAIE,MAEjCE,EAAAA,cAAA,QAAME,KAAK,gBAAgBC,QAASP,EAAIR,QACxCY,EAAAA,cAAA,QAAME,KAAK,sBAAsBC,QAASP,EAAIP,cAC9CW,EAAAA,cAAA,QAAME,KAAK,eAAeC,QAAST,EAAoBW,QAAQC,OAC/DN,EAAAA,cAAA,QACEE,KAAK,kBACLC,QAAST,EAAoBW,QAAQE,UAEvCP,EAAAA,cAAA,QAAME,KAAK,gBAAgBC,QAASP,EAAIL,QAExCS,EAAAA,cAAA,UAAQR,KAAK,uBAAqB,wEAGlBI,EAAIJ,KAAI,yBACVI,EAAIE,IAAG,8BACFF,EAAIR,MAAK,iCACNQ,EAAIP,YAAW,kBAE/BC,EAAQ,eACWkB,KAAKC,UAAUnB,EAASoB,MAAM,MAAK,IAClD,IAAE,6HAQXjB,EACDO,EAAAA,cAAA,QACEE,KAAK,cACLC,QAAQ,UACRQ,MAAM,kCAERX,EAAAA,cAAA,QACEE,KAAK,cACLC,QAAQ,UACRQ,MAAM,iCAEP,C,6GCtEP,MA+BaC,EAAOA,IAAMZ,EAAAA,cAACa,EAAAA,EAAG,CAACzB,MAAM,mBAErC,UAjC0C0B,IACxCd,EAAAA,cAACe,EAAAA,EAAM,KACLf,EAAAA,cAAA,OAAKgB,UAAU,kBACbhB,EAAAA,cAAA,QAAMgB,UAAU,yGACdhB,EAAAA,cAAA,OAAKgB,UAAU,eACbhB,EAAAA,cAAA,MAAIgB,UAAU,4CAA2C,kBAGzDhB,EAAAA,cAAA,KAAGgB,UAAU,6DAA4D,wDAGzEhB,EAAAA,cAAA,OAAKgB,UAAU,kDACbhB,EAAAA,cAACiB,EAAAA,KAAI,CACHC,GAAG,IACHF,UAAU,0EACX,gBAGDhB,EAAAA,cAACiB,EAAAA,KAAI,CACHC,GAAG,WACHF,UAAU,0DACX,cACYhB,EAAAA,cAAA,QAAM,cAAY,QAAO,U","sources":["webpack://rishikc.com/./src/components/seo.tsx","webpack://rishikc.com/./src/pages/404.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { globalHistory } from \"@reach/router\";\n\nimport { SiteMetadata } from \"../../static/metadata\";\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\n\nconst SEO = ({\n  title,\n  description,\n  keywords,\n  image,\n  type,\n  children,\n}: SeoProps) => {\n  const defaultSiteMetadata = useSiteMetadata() as SiteMetadata;\n\n  const seo = {\n    title: title || defaultSiteMetadata.title,\n    description: description || defaultSiteMetadata.description,\n    image: `${defaultSiteMetadata.siteUrl}${image}`,\n    type: type || \"WebSite\",\n    url: `${defaultSiteMetadata.siteUrl}${globalHistory.location.pathname}`,\n  };\n\n  return (\n    <>\n      <html lang=\"en\" />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      {keywords ? <meta name=\"keywords\" content={keywords} /> : null}\n      {/* Open graph / Facebook */}\n      <meta name=\"og:title\" content={seo.title} />\n      <meta name=\"og:site_name\" content={seo.title} />\n      <meta name=\"og:type\" content={defaultSiteMetadata.og.type} />\n      <meta name=\"og:description\" content={seo.description} />\n      <meta name=\"og:image\" content={seo.image} />\n      <meta name=\"og:url\" content={seo.url} />\n      {/* Twitter */}\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:card\" content={defaultSiteMetadata.twitter.card} />\n      <meta\n        name=\"twitter:creator\"\n        content={defaultSiteMetadata.twitter.creator}\n      />\n      <meta name=\"twitter:image\" content={seo.image} />\n      {/* Structured Data */}\n      <script type=\"application/ld+json\">\n        {`{\n          \"@context\": \"https://schema.org/\",\n          \"@type\": \"${seo.type}\",\n          \"@id\": \"${seo.url}\",\n          \"headline\": \"${seo.title}\",\n          \"description\": \"${seo.description}\",\n          ${\n            keywords\n              ? `\"keywords\": ${JSON.stringify(keywords.split(\",\"))},`\n              : \"\"\n          }\n          \"author\": {\n            \"@type\": \"Person\",\n            \"name\": \"Rishi Kumar Chawda\"\n          }\n        }`}\n      </script>\n      {children}\n      <meta\n        name=\"theme-color\"\n        content=\"#f9fafb\"\n        media=\"(prefers-color-scheme: light)\"\n      />\n      <meta\n        name=\"theme-color\"\n        content=\"#1e293b\"\n        media=\"(prefers-color-scheme: dark)\"\n      />\n    </>\n  );\n};\n\ntype SeoProps = {\n  title?: string;\n  description?: string;\n  keywords?: string;\n  pathname?: string;\n  image?: string;\n  type?: string;\n  children?: React.ReactNode;\n};\n\nexport default SEO;\n","import \"../stylesheets/404.scss\";\n\nimport { Link, PageProps } from \"gatsby\";\nimport * as React from \"react\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nconst NotFoundPage: React.FC<PageProps> = () => (\n  <Layout>\n    <div className=\"root-container\">\n      <main className=\"not-found-container dark:text-gray-200 grid min-h-full place-items-center px-6 py-24 sm:py-32 lg:px-8\">\n        <div className=\"text-center\">\n          <h1 className=\"mt-4 text-3xl tracking-tight sm:text-5xl\">\n            Page not found\n          </h1>\n          <p className=\"mt-6 text-base leading-7 text-gray-600 dark:text-gray-400\">\n            Sorry, we couldn’t find the page you’re looking for.\n          </p>\n          <div className=\"mt-10 flex items-center justify-center gap-x-6\">\n            <Link\n              to=\"/\"\n              className=\"rounded-md bg-brand-900 hover:bg-brand-800 text-gray-200 px-3.5 py-2.5\"\n            >\n              Go back home\n            </Link>\n            <Link\n              to=\"/contact\"\n              className=\"text-sm font-semibold text-gray-500 dark:text-gray-300\"\n            >\n              Contact me <span aria-hidden=\"true\">&rarr;</span>\n            </Link>\n          </div>\n        </div>\n      </main>\n    </div>\n  </Layout>\n);\n\nexport const Head = () => <SEO title=\"404: Not Found\" />;\n\nexport default NotFoundPage;\n"],"names":["_ref","title","description","keywords","image","type","children","defaultSiteMetadata","useSiteMetadata","seo","siteUrl","url","globalHistory","React","lang","name","content","og","twitter","card","creator","JSON","stringify","split","media","Head","SEO","NotFoundPage","Layout","className","Link","to"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-index-tsx-2ad2ca4de6112920a740.js","mappings":"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","sources":["webpack://rishikc.com/./src/components/articles/preview/card.tsx","webpack://rishikc.com/./src/components/articles/preview/index.tsx","webpack://rishikc.com/./src/hooks/use-insta-nodes.tsx","webpack://rishikc.com/./src/components/gallery/card.tsx","webpack://rishikc.com/./src/utils/open-link.ts","webpack://rishikc.com/./src/components/gallery/index.tsx","webpack://rishikc.com/./src/hooks/use-git-repositories.tsx","webpack://rishikc.com/./src/components/repository/languages.tsx","webpack://rishikc.com/./src/components/repository/card.tsx","webpack://rishikc.com/./src/components/repository/index.tsx","webpack://rishikc.com/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\n\ntype Props = {\n  data: Queries.Mdx;\n};\n\nconst ArticlePreviewCard = ({ data }: Props) => {\n  return (\n    <li\n      className=\"inline-flex w-full items-stretch article-preview-list-item\"\n      role=\"listitem\"\n      key={data.id}\n    >\n      <div className=\"h-full flex flex-col items-start justify-between p-6 bg-white  dark:bg-gray-800 dark:border-gray-700\">\n        <div className=\"h-2/3 flex flex-col justify-between\">\n          <a href={data.fields?.slug!}>\n            <h2 className=\"mb-2 text-gray-900 dark:text-white article-preview-list-item-title\">\n              {data.frontmatter?.title}\n            </h2>\n          </a>\n        </div>\n        <div>\n          <p className=\"mb-3 text-gray-700 dark:text-gray-400 article-preview-list-item-details\">\n            {data.excerpt}\n          </p>\n          <a\n            href={data.fields?.slug!}\n            className=\"inline-flex items-center text-center text-brand-600 rounded-lg hover:text-brand-800\"\n          >\n            Read more&nbsp;&nbsp;&#10140;\n          </a>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default ArticlePreviewCard;\n","import \"./index.scss\";\n\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\nimport React from \"react\";\n\nimport ArticlePreviewCard from \"./card\";\n\nconst ArticlePreview = () => {\n  const data = useStaticQuery(graphql`\n    query ArticlePreviewData {\n      allMdx: allMdx(limit: 3, sort: { frontmatter: { date: DESC } }) {\n        nodes {\n          fields {\n            slug\n            timeToRead {\n              text\n            }\n          }\n          id\n          excerpt\n          frontmatter {\n            subtitle\n            date(formatString: \"Do MMMM, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  `);\n  return (\n    <div className=\"flex flex-col mx-auto justify-between mb-28 article-preview\">\n      <h2 className=\"antialiased article-preview-header\">\n        Some of my writings&nbsp;.&nbsp;.\n      </h2>\n      <div className=\"mx-auto py-4\">\n        <ul className=\"grid grid-cols-1 sm:grid-rows-1 md:grid-cols-3 grid-flow-row article-preview-list\">\n          {data.allMdx.nodes.map((node: Queries.Mdx) => (\n            <ArticlePreviewCard key={data.id} data={node} />\n          ))}\n        </ul>\n      </div>\n      <Link\n        to=\"articles\"\n        className=\"text-brand-600 hover:text-brand-800 antialiased self-center all-articles-link\"\n      >\n        Browse the complete list\n      </Link>\n    </div>\n  );\n};\n\nexport default ArticlePreview;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useInstagramNodes = () => {\n  // Keep potato quality image and redirect to instagram for full quality.\n  // Makes sure nobody wants to download images from my website.\n  // Also improves page load time.\n  const data = useStaticQuery(graphql`\n    query GalleryQuery {\n      allInstaNode(\n        limit: 12\n        filter: {\n          mediaType: { eq: \"GraphImage\" }\n          fields: { visibility: { eq: true } }\n        }\n        sort: { order: DESC, fields: timestamp }\n      ) {\n        edges {\n          node {\n            id\n            caption\n            localFile {\n              childImageSharp {\n                gatsbyImageData(placeholder: BLURRED, quality: 2)\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data.allInstaNode.edges;\n};\n\nexport default useInstagramNodes;\n","import \"./index.scss\";\n\nimport { motion } from \"framer-motion\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\n\nimport { trackExternalUrlClick } from \"../../utils/open-link\";\n\ntype Props = {\n  data: any;\n};\n\nconst Card = ({ data }: Props) => {\n  const openInstagramProfile = () => {\n    trackExternalUrlClick(\"https://www.instagram.com/rishiikc/\");\n  };\n\n  const image = getImage(data.node.localFile);\n\n  return (\n    <motion.div\n      key={data.node.id}\n      initial={{ opacity: 0 }}\n      whileInView={{ opacity: 1 }}\n      onClick={openInstagramProfile}\n      className=\"inline-flex w-full items-stretch cursor-pointer aspect-square instagram-gallery-image-wrapper\"\n    >\n      <GatsbyImage className=\"w-full\" alt={data.node.id} image={image} />\n    </motion.div>\n  );\n};\n\nexport default Card;\n","// context: I didn't want google to rank my page lower\n// because of bad external to internal link ratio.\n// hence, this demon child.\nexport const trackExternalUrlClick = (url: string) => {\n  if (typeof window !== 'undefined' && url) {\n    if (window.gtag) {\n      window.gtag('event', url, { url })\n    }\n    window.open(url, '_newtab')\n  }\n}","import React from \"react\";\n\nimport useInstagramNodes from \"../../hooks/use-insta-nodes\";\nimport Card from \"./card\";\n\nconst Gallery = () => {\n  const data = useInstagramNodes();\n\n  return (\n    <div className=\"flex flex-col w-full mx-auto px-4 mb-28 justify-between gallery-preview-container\">\n      <div\n        id=\"gallery-preview\"\n        aria-label=\"gallery-preview\"\n        className=\"flex flex-row justify-between pb-6\"\n      >\n        <h2 className=\"antialiased\">Gallery</h2>\n        <a\n          href=\"https://www.instagram.com/rishiikc/\"\n          target=\"_blank\"\n          className=\"text-brand-600 hover:text-brand-800 antialiased\"\n        >\n          View all photos\n        </a>\n      </div>\n      <div className=\"flex mx-auto\">\n        <div className=\"grid grid-cols-3 sm:grid-cols-4 lg:grid-cols-6 grid-flow-row gap-2 auto-cols-min gallery-preview-list\">\n          {data.map((edge) => {\n            return <Card data={edge} />;\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Gallery;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useGitRepositoryInfo = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      github {\n        viewer {\n          repositories(\n            orderBy: { field: STARGAZERS, direction: DESC }\n            first: 6\n            ownerAffiliations: OWNER\n          ) {\n            edges {\n              node {\n                id\n                name\n                url\n                descriptionHTML\n                stargazerCount\n                owner {\n                  login\n                }\n                languages(\n                  orderBy: { field: SIZE, direction: DESC }\n                  first: 10\n                ) {\n                  edges {\n                    node {\n                      color\n                      name\n                    }\n                    size\n                  }\n                  totalSize\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data.github.viewer.repositories.edges;\n};\n\nexport default useGitRepositoryInfo;\n","import React from \"react\";\n\ntype Props = {\n  languages?: Queries.Maybe<Queries.GitHub_LanguageConnection>;\n};\n\nconst Languages = ({ languages }: Props) => {\n  return (\n    <div className=\"w-full flex github-repo-card-languages\">\n      {languages?.edges?.map(\n        (node: Queries.Maybe<Queries.GitHub_LanguageEdge>) => {\n          const n = node as Queries.GitHub_LanguageEdge;\n          let percentage = `${Math.ceil(\n            (n.size / languages!.totalSize) * 100\n          )}%`;\n          return (\n            <dfn\n              key={n.node.name}\n              className=\"h-full\"\n              title={`${n.node.name}, ${percentage}`}\n              style={{\n                backgroundColor: n.node.color!,\n                width: percentage,\n              }}\n            >\n              <div\n                className=\"h-full w-full\"\n                style={{ backgroundColor: n.node.color!, width: percentage }}\n              ></div>\n            </dfn>\n          );\n        }\n      )}\n    </div>\n  );\n};\n\nexport default Languages;\n","import \"./index.scss\";\n\nimport React from \"react\";\n\nimport Languages from \"./languages\";\n\ntype Props = {\n  repository: Queries.Maybe<Queries.GitHub_Repository>;\n};\n\nfunction Card({ repository }: Props) {\n  return (\n    <div\n      className=\"flex items-stretch max-w-md md:max-w-none w-full github-repositories-preview-list-item\"\n      key={repository?.name}\n    >\n      <a\n        className=\"inline-flex w-full items-stretch\"\n        href={repository?.url}\n        target=\"_blank\"\n      >\n        <div className=\"github-repo-card relative w-full bg-white  dark:bg-gray-800 sm:mx-auto overflow-hidden\">\n          <Languages languages={repository?.languages} />\n          <div className=\"flex justify-between items-start github-repositories-preview-list-item-title\">\n            <h2>{repository?.name}</h2>\n            <small>&#9733;&nbsp;&nbsp;{repository?.stargazerCount}</small>\n          </div>\n          <div\n            className=\"repo-description opacity-70\"\n            dangerouslySetInnerHTML={{ __html: repository?.descriptionHTML }}\n          ></div>\n        </div>\n      </a>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\n\nimport useGitRepositoryInfo from \"../../hooks/use-git-repositories\";\nimport RepoCard from \"./card\";\n\nconst Github = () => {\n  const data = useGitRepositoryInfo();\n\n  return (\n    <div\n      id=\"articles-preview\"\n      className=\"flex flex-col w-full mx-auto mb-28 justify-between items-start github-repositories-preview\"\n    >\n      <h2 className=\"antialiased github-repositories-preview-header\">\n        Popular OSS repositories\n      </h2>\n      <div className=\"mx-auto py-6\">\n        <div className=\"grid grid-cols-1 grid-rows-3 sm:grid-rows-2 sm:grid-cols-2 lg:grid-cols-3 grid-flow-row auto-cols-fr github-repositories-preview-list\">\n          {data.map((repository: Queries.GitHub_RepositoryEdge) => (\n            <RepoCard repository={repository.node} />\n          ))}\n        </div>\n      </div>\n      <a\n        href=\"https://github.com/rishichawda\"\n        target=\"_blank\"\n        className=\"text-brand-600 hover:text-brand-800 antialiased\"\n      >\n        See more projects on GitHub\n      </a>\n    </div>\n  );\n};\n\nexport default Github;\n","import \"../stylesheets/homepage.scss\";\n\nimport { PageProps } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\n\nimport ArticlePreview from \"../components/articles/preview\";\nimport Gallery from \"../components/gallery\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Github from \"../components/repository\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <Layout>\n      <div className=\"root-container\">\n        <main className=\"main-container\">\n          <div\n            id=\"about\"\n            className=\"flex lg:flex-row flex-col-reverse items-center max-w-screen-2xl mx-auto mb-28 justify-between about\"\n          >\n            <div className=\"flex flex-col lg:w-2/3 justify-around\">\n              <h1 className=\"lg:text-right antialiased\">Hi, I'm Rishi.</h1>\n              <p className=\"antialiased text-lg\">\n                Currently, I am a software engineer by profession and building\n                awesome tools with the Chef team at Progress.\n                <br />\n                <br />\n                Apart from my work, I spend time reading{\" \"}\n                <a href=\"/reads\">books</a>, painting or just doodling, designing\n                solutions to random ideas, learning new things and occasionally\n                indulging in <a href=\"#gallery-preview\">photography</a>.<br />\n                <br />\n                Curious about science and mathematics, I spend an awful lot of\n                time gathering knowledge that I don’t generally use in day to\n                day life. It’s good for geeking out though.{\" \"}\n              </p>\n            </div>\n            <div className=\"flex lg:w-3/12\">\n              <StaticImage\n                src=\"../../static/assets/handsome-guy.webp\"\n                alt=\"handsome\"\n                className=\"w-full max-w-xs h-auto\"\n              />\n            </div>\n          </div>\n          <ArticlePreview />\n          <Github />\n          <Gallery />\n        </main>\n      </div>\n    </Layout>\n  );\n};\n\nexport const Head = () => <SEO />;\n\nexport default IndexPage;\n"],"names":["_ref","_data$fields","_data$frontmatter","_data$fields2","data","React","className","role","key","id","href","fields","slug","frontmatter","title","excerpt","ArticlePreview","useStaticQuery","allMdx","nodes","map","node","ArticlePreviewCard","Link","to","useInstagramNodes","allInstaNode","edges","image","getImage","localFile","motion","initial","opacity","whileInView","onClick","openInstagramProfile","url","window","gtag","open","GatsbyImage","alt","Gallery","target","edge","Card","useGitRepositoryInfo","github","viewer","repositories","_languages$edges","languages","n","percentage","Math","ceil","size","totalSize","name","style","backgroundColor","color","width","repository","Languages","stargazerCount","dangerouslySetInnerHTML","__html","descriptionHTML","Github","RepoCard","Head","SEO","IndexPage","Layout","StaticImage","src","__imageData","require"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-reads-tsx-565799e860caca8fd74a.js","mappings":"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","sources":["webpack://rishikc.com/./src/components/seo.tsx","webpack://rishikc.com/./src/pages/reads.tsx","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/use-force-update.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import React from \"react\";\n\nimport { SiteMetadata } from \"../../static/metadata\";\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\";\n\nconst SEO = ({ title, description, pathname, children }: SeoProps) => {\n  const defaultSiteMetadata = useSiteMetadata() as SiteMetadata;\n\n  const seo = {\n    title: title || defaultSiteMetadata.title,\n    description: description || defaultSiteMetadata.description,\n    image: `${defaultSiteMetadata.siteUrl}${defaultSiteMetadata.image}`,\n    url: `${defaultSiteMetadata.siteUrl}${pathname || ``}`,\n  };\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"og:title\" content={seo.title} />\n      <meta name=\"og:type\" content={defaultSiteMetadata.og.type} />\n      <meta name=\"og:description\" content={seo.description} />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:card\" content={defaultSiteMetadata.twitter.card} />\n      <meta\n        name=\"twitter:creator\"\n        content={defaultSiteMetadata.twitter.creator}\n      />\n      <meta name=\"twitter:image\" content={seo.image} />\n      {children}\n    </>\n  );\n};\n\ntype SeoProps = {\n  title?: string;\n  description?: string;\n  pathname?: string;\n  children?: React.ReactNode;\n};\n\nexport default SEO;\n","import \"../stylesheets/reads.scss\";\n\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React from \"react\";\n\nimport reads from \"../../static/reads.json\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\ntype Props = {};\n\ntype ReadInfo = {\n  quote: string;\n  info: string;\n};\n\nconst Reads = (props: Props) => {\n  const [shuffledData, setShuffledData] = React.useState(reads);\n  const shuffleArray = () => {\n    const data = [...shuffledData];\n    for (var i = data.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n    }\n\n    setShuffledData(data);\n  };\n  return (\n    <Layout>\n      <div className=\"root-container\">\n        <main className=\"flex flex-col items-start reads-page-container\">\n          <h2 className=\"antialiased dark:text-gray-200\">\n            Some lines I loved reading&nbsp;.&nbsp;.\n          </h2>\n          <AnimatePresence>\n            <motion.ul className=\"grid grid-cols-2 gap-7 reads-list\">\n              {shuffledData.map((r: ReadInfo, index: number) => (\n                <motion.li\n                  layout={index == 0 ? false : \"preserve-aspect\"}\n                  key={r.quote}\n                  className=\"flex flex-col items-center justify-around reads-list-item\"\n                >\n                  <figure\n                    key={index}\n                    className=\"flex flex-col items-stretch justify-around text-center\"\n                  >\n                    <blockquote className=\"max-w-2xl mx-auto self-start reads-list-item-quote\">\n                      <p>{r.quote}</p>\n                    </blockquote>\n                    <figcaption className=\"flex items-center justify-center text-gray-500 dark:text-gray-400 reads-list-item-info\">\n                      {r.info}\n                    </figcaption>\n                  </figure>\n                  {index == 0 ? (\n                    <div\n                      className=\"flex flex-row items-center cursor-pointer shuffle-button\"\n                      onClick={shuffleArray}\n                    >\n                      <span>\n                        <svg\n                          version=\"1.0\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          viewBox=\"0 0 512.000000 512.000000\"\n                          preserveAspectRatio=\"xMidYMid meet\"\n                        >\n                          <g\n                            transform=\"translate(0.000000,512.000000) scale(0.100000,-0.100000)\"\n                            stroke=\"none\"\n                          >\n                            <path d=\"M2760 4542 c-21 -17 -23 -29 -28 -139 l-5 -121 27 -17 c22 -14 32 -16 51 -7 29 13 33 28 38 156 4 94 3 101 -19 123 -28 28 -35 28 -64 5z\" />\n                            <path d=\"M3083 4303 c-97 -104 -126 -146 -118 -172 8 -27 40 -44 65 -36 28 9 200 203 200 226 0 24 -34 59 -57 59 -9 0 -50 -35 -90 -77z\" />\n                            <path d=\"M1377 4360 c-51 -13 -98 -38 -230 -122 -61 -40 -281 -175 -487 -301 -206 -126 -390 -240 -408 -254 -31 -23 -33 -29 -29 -67 2 -22 35 -106 72 -186 37 -80 159 -350 272 -600 112 -250 214 -465 226 -477 20 -20 44 -24 257 -43 129 -11 323 -29 430 -40 326 -33 327 -33 428 64 28 28 52 47 52 43 0 -4 -27 -74 -60 -155 -38 -95 -60 -163 -60 -188 0 -42 49 -170 98 -257 16 -29 144 -225 285 -437 229 -346 274 -408 327 -447 9 -7 331 -75 715 -152 775 -155 920 -182 944 -174 39 12 64 29 76 53 15 29 89 235 365 1015 109 308 210 590 224 628 37 97 35 145 -10 199 -20 24 -157 225 -305 448 -212 319 -275 408 -302 421 -39 21 -140 42 -319 69 -159 23 -361 61 -885 166 -356 71 -395 77 -435 67 -23 -6 -44 -10 -46 -8 -2 2 -69 149 -148 326 -79 177 -151 333 -160 346 -8 14 -34 33 -57 43 -37 17 -83 19 -417 24 -226 3 -390 2 -413 -4z m510 -108 c11 -7 -4 -17 -512 -325 -154 -93 -291 -180 -305 -192 -24 -22 -32 -23 -303 -28 -153 -3 -277 -4 -275 -2 2 1 127 78 278 171 151 92 343 210 425 262 83 52 166 100 185 108 38 14 485 20 507 6z m285 -19 c9 -10 66 -130 126 -268 61 -137 131 -297 157 -356 l47 -105 -54 -124 -53 -124 -6 44 c-4 33 -15 51 -42 76 -42 39 -73 49 -122 40 -104 -20 -149 -152 -79 -235 46 -55 132 -64 188 -20 14 11 26 19 26 16 0 -10 -172 -424 -183 -439 -23 -33 -419 -318 -442 -318 -12 0 -29 8 -37 18 -9 9 -120 231 -248 492 -128 261 -255 521 -282 577 -34 69 -48 108 -43 122 4 13 65 56 163 115 86 52 308 187 492 300 184 113 344 206 355 206 12 0 29 -8 37 -17z m-1150 -668 c5 -16 129 -275 277 -575 147 -300 267 -546 266 -548 -2 -2 -669 68 -671 71 -9 15 -494 1066 -494 1070 0 8 174 13 419 12 l195 0 8 -30z m2128 -130 c261 -52 558 -109 660 -125 343 -56 370 -61 370 -75 0 -8 -22 -78 -50 -157 -27 -79 -149 -438 -271 -798 -122 -360 -224 -658 -228 -662 -3 -4 -229 49 -501 118 -483 121 -878 215 -1050 249 -47 9 -86 19 -88 20 -2 2 30 79 71 172 87 196 132 301 312 743 148 360 241 578 257 598 6 6 18 12 27 12 9 0 230 -43 491 -95z m1346 -615 c120 -176 227 -333 237 -349 18 -30 18 -30 -36 -188 -30 -87 -155 -452 -278 -810 -123 -359 -226 -653 -229 -653 -3 0 -32 44 -64 98 -33 53 -135 219 -228 369 l-169 271 44 124 c25 68 95 278 157 468 138 425 333 990 341 990 3 0 104 -144 225 -320z m-2106 -1015 c58 -14 363 -89 677 -167 l573 -142 158 -256 c224 -360 296 -480 291 -483 -2 -2 -103 15 -224 39 -121 24 -453 88 -738 142 -285 55 -519 101 -521 103 -5 8 -533 814 -539 825 -6 11 100 -9 323 -61z\" />\n                            <path d=\"M1449 4177 c-70 -29 -128 -73 -135 -103 -10 -38 4 -47 57 -41 76 9 192 76 209 121 19 50 -40 60 -131 23z\" />\n                            <path d=\"M982 3924 c-62 -31 -144 -118 -140 -148 11 -80 248 57 248 144 0 26 -3 30 -28 30 -15 0 -51 -12 -80 -26z\" />\n                            <path d=\"M2000 3923 c-127 -66 -94 -252 47 -269 77 -10 153 60 153 140 0 105 -110 176 -200 129z\" />\n                            <path d=\"M1483 3580 c-18 -10 -40 -34 -49 -52 -34 -66 -12 -150 49 -189 48 -30 127 -22 167 16 65 62 62 155 -5 214 -29 25 -44 31 -83 31 -29 0 -59 -8 -79 -20z\" />\n                            <path d=\"M1753 3089 c-104 -51 -104 -203 0 -252 90 -43 184 8 203 110 10 51 -29 121 -80 144 -53 24 -72 24 -123 -2z\" />\n                            <path d=\"M900 3123 c-8 -3 -25 -14 -37 -25 -58 -53 -55 -144 6 -208 33 -35 43 -40 83 -40 80 0 128 64 113 151 -14 80 -102 145 -165 122z\" />\n                            <path d=\"M2785 3276 c-42 -18 -92 -73 -106 -114 -6 -19 -9 -58 -7 -88 18 -217 325 -236 378 -23 38 150 -124 287 -265 225z\" />\n                            <path d=\"M3026 2775 c-57 -20 -87 -46 -113 -95 -57 -107 1 -248 115 -280 57 -15 83 -12 140 16 115 57 144 204 60 300 -55 62 -132 85 -202 59z\" />\n                            <path d=\"M3285 2292 c-78 -38 -115 -96 -115 -183 0 -110 79 -189 190 -189 193 0 267 246 107 357 -51 35 -126 41 -182 15z\" />\n                            <path d=\"M4218 2164 c-89 -48 -105 -280 -26 -370 81 -92 174 7 172 181 -1 92 -18 140 -64 179 -36 30 -45 31 -82 10z\" />\n                            <path d=\"M3170 1395 c-27 -33 23 -88 124 -136 163 -77 279 -48 176 44 -87 80 -265 134 -300 92z\" />\n                            <path d=\"M2624 1206 c-29 -76 229 -209 330 -170 47 18 -22 95 -127 145 -84 39 -193 52 -203 25z\" />\n                            <path d=\"M3326 3950 c-99 -14 -133 -22 -143 -36 -30 -41 -3 -84 52 -84 66 0 271 32 293 46 45 29 15 95 -44 93 -16 -1 -87 -9 -158 -19z\" />\n                          </g>\n                        </svg>\n                      </span>\n                      <p>Shuffle</p>\n                    </div>\n                  ) : null}\n                </motion.li>\n              ))}\n            </motion.ul>\n          </AnimatePresence>\n        </main>\n      </div>\n    </Layout>\n  );\n};\n\nexport const Head = () => <SEO />;\n\nexport default Reads;\n","import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { frame } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["_ref","title","description","pathname","children","defaultSiteMetadata","useSiteMetadata","seo","image","siteUrl","url","React","name","content","og","type","twitter","card","creator","Head","SEO","props","shuffledData","setShuffledData","reads","shuffleArray","data","_toConsumableArray","i","length","j","Math","floor","random","temp","Layout","className","AnimatePresence","motion","map","r","index","layout","key","quote","info","onClick","version","xmlns","viewBox","preserveAspectRatio","transform","stroke","d","useIsMounted","isMounted","useRef","current","PopChildMeasure","getSnapshotBeforeUpdate","prevProps","element","this","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","PresenceContext","value","Map","getChildKey","child","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useState","useCallback","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","presentKeys","targetKeys","numPresent","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement"],"sourceRoot":""}
{"version":3,"file":"component---src-pages-index-tsx-86fbb69702c43077954f.js","mappings":"6HA8CA,IA5C6BA,KACdC,EAAAA,EAAAA,gBAAe,cAwChBC,OAAOC,OAAOC,aAAaC,K,qCCTzC,IAhC0BC,KAIXL,EAAAA,EAAAA,gBAAe,cAyBhBM,aAAaF,K,qJCnB3B,MA0CaG,EAAOA,IAAMC,EAAAA,cAACC,EAAAA,EAAG,MAE9B,UA5CuCC,IAEnCF,EAAAA,cAACG,EAAAA,EAAM,KACLH,EAAAA,cAAA,OAAKI,UAAU,kBACbJ,EAAAA,cAAA,QAAMI,UAAU,kBACdJ,EAAAA,cAAA,OACEK,GAAG,QACHD,UAAU,uGAEVJ,EAAAA,cAAA,OAAKI,UAAU,yCACbJ,EAAAA,cAAA,MAAII,UAAU,6BAA4B,kBAC1CJ,EAAAA,cAAA,KAAGI,UAAU,uBAAsB,oPAKjCJ,EAAAA,cAAA,WACAA,EAAAA,cAAA,WAAM,2CACmC,IACzCA,EAAAA,cAACM,EAAAA,KAAI,CAACC,GAAG,UAAS,SAAc,sHAEN,IAC1BP,EAAAA,cAAA,KAAGQ,KAAK,oBAAmB,eAAe,IAACR,EAAAA,cAAA,aAG/CA,EAAAA,cAAA,OAAKI,UAAU,kBACbJ,EAAAA,cAACS,EAAAA,EAAW,CACVC,IAAI,wCACJC,IAAI,WACJP,UAAU,yBAAwBQ,YAAAC,EAAA,UAIxCb,EAAAA,cAACc,EAAAA,EAAc,MACfd,EAAAA,cAACe,EAAAA,EAAM,MACPf,EAAAA,cAACgB,EAAAA,EAAO,Q,uDC5CX,MAAMC,EAAyBC,IACd,oBAAXC,QAA0BD,IAC/BC,OAAOC,MACTD,OAAOC,KAAK,QAASF,EAAK,CAAEA,QAE9BC,OAAOE,KAAKH,EAAK,SAAU,uBAC7B,C","sources":["webpack://rishikc.com/./src/hooks/use-git-repositories.tsx","webpack://rishikc.com/./src/hooks/use-insta-nodes.tsx","webpack://rishikc.com/./src/pages/index.tsx","webpack://rishikc.com/./src/utils/open-link.ts"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useGitRepositoryInfo = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      github {\n        viewer {\n          repositories(\n            orderBy: { field: STARGAZERS, direction: DESC }\n            first: 6\n            ownerAffiliations: OWNER\n          ) {\n            edges {\n              node {\n                id\n                name\n                url\n                descriptionHTML\n                stargazerCount\n                owner {\n                  login\n                }\n                languages(\n                  orderBy: { field: SIZE, direction: DESC }\n                  first: 10\n                ) {\n                  edges {\n                    node {\n                      color\n                      name\n                    }\n                    size\n                  }\n                  totalSize\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data.github.viewer.repositories.edges;\n};\n\nexport default useGitRepositoryInfo;\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst useInstagramNodes = () => {\n  // Keep potato quality image and redirect to instagram for full quality.\n  // Makes sure nobody wants to download images from my website.\n  // Also improves page load time.\n  const data = useStaticQuery(graphql`\n    query GalleryQuery {\n      allInstaNode(\n        limit: 12\n        filter: {\n          mediaType: { eq: \"GraphImage\" }\n          fields: { visibility: { eq: true } }\n        }\n        sort: { timestamp: DESC }\n      ) {\n        edges {\n          node {\n            id\n            caption\n            localFile {\n              childImageSharp {\n                gatsbyImageData(placeholder: BLURRED, quality: 2)\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return data.allInstaNode.edges;\n};\n\nexport default useInstagramNodes;\n","import \"../stylesheets/homepage.scss\";\n\nimport { Link, PageProps } from \"gatsby\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport * as React from \"react\";\n\nimport ArticlePreview from \"../components/articles/preview\";\nimport Gallery from \"../components/gallery\";\nimport Layout from \"../components/layout\";\nimport Github from \"../components/repository\";\nimport SEO from \"../components/seo\";\n\nconst IndexPage: React.FC<PageProps> = () => {\n  return (\n    <Layout>\n      <div className=\"root-container\">\n        <main className=\"main-container\">\n          <div\n            id=\"about\"\n            className=\"flex lg:flex-row flex-col-reverse items-center max-w-screen-2xl mx-auto mb-28 justify-between about\"\n          >\n            <div className=\"flex flex-col lg:w-2/3 justify-around\">\n              <h1 className=\"lg:text-right antialiased\">Hi, I'm Rishi.</h1>\n              <p className=\"antialiased text-lg\">\n                Currently, I am a software engineer by profession. I started out\n                building websites as a freelancer, then built fullstack web and\n                mobile applications as a professional. Now, I'm building awesome\n                DevSecOps tools with the Chef team at Progress.\n                <br />\n                <br />\n                Apart from my work, I spend time reading{\" \"}\n                <Link to=\"/reads\">books</Link>, painting or just doodling,\n                designing solutions to random ideas, learning new things and\n                occasionally indulging in{\" \"}\n                <a href=\"#gallery-preview\">photography</a>.<br />\n              </p>\n            </div>\n            <div className=\"flex lg:w-3/12\">\n              <StaticImage\n                src=\"../../static/assets/handsome-guy.webp\"\n                alt=\"handsome\"\n                className=\"w-full max-w-xs h-auto\"\n              />\n            </div>\n          </div>\n          <ArticlePreview />\n          <Github />\n          <Gallery />\n        </main>\n      </div>\n    </Layout>\n  );\n};\n\nexport const Head = () => <SEO />;\n\nexport default IndexPage;\n","// context: I didn't want google to rank my page lower\n// because of bad external to internal link ratio.\n// hence, this demon child.\nexport const trackExternalUrlClick = (url: string) => {\n  if (typeof window !== 'undefined' && url) {\n    if (window.gtag) {\n      window.gtag('event', url, { url })\n    }\n    window.open(url, '_blank', 'noopener,noreferrer')\n  }\n}"],"names":["useGitRepositoryInfo","useStaticQuery","github","viewer","repositories","edges","useInstagramNodes","allInstaNode","Head","React","SEO","IndexPage","Layout","className","id","Link","to","href","StaticImage","src","alt","__imageData","require","ArticlePreview","Github","Gallery","trackExternalUrlClick","url","window","gtag","open"],"sourceRoot":""}
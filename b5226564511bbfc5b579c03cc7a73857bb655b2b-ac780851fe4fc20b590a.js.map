{"version":3,"file":"b5226564511bbfc5b579c03cc7a73857bb655b2b-ac780851fe4fc20b590a.js","mappings":"qKAAA,MAAMA,GACO,E,cCDb,MAAMC,EAAsBC,GAAWC,MAAMC,QAAQF,IAAgC,iBAAdA,EAAO,GCE9E,SAASG,EAAuBH,GAC5B,OAAOI,SAASJ,GACO,iBAAXA,GAAuBK,EAAqBL,IACpDD,EAAmBC,IAClBC,MAAMC,QAAQF,IAAWA,EAAOM,MAAMH,GAC/C,CACA,MAAMI,EAAsB,EAAEC,EAAGC,EAAGC,EAAGC,KAAO,gBAAgBH,MAAMC,MAAMC,MAAMC,KAC1EN,EAAuB,CACzBO,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQV,EAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CW,QAASX,EAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CY,OAAQZ,EAAoB,CAAC,IAAM,IAAM,KAAO,MAChDa,QAASb,EAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASc,EAAwBrB,GAC7B,GAAKA,EAEL,OAAOD,EAAmBC,GACpBO,EAAoBP,GACpBC,MAAMC,QAAQF,GACVA,EAAOsB,IAAID,GACXhB,EAAqBL,EACnC,CC5BA,MAAMuB,EAAe,CACjBC,MAAO,IAAMC,OAAOC,eAAeC,KAAKC,QAAQC,UAAW,YAEzDC,EAAU,CAAC,EACXC,EAAW,CAAC,EAIlB,IAAK,MAAMC,MAAOT,EACdQ,EAASC,IAAO,UACSC,IAAjBH,EAAQE,MACRF,EAAQE,IAAOT,EAAaS,OACzBF,EAAQE,K,cCQvB,MAAME,EAAa,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EACEG,EAAuB,KACvBC,EAA2B,GAkBjC,SAASC,EAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOC,EAAA,EACX,MAAMC,EAAYC,GArBtB,SAAyBC,EAAGC,EAAYC,EAAYT,EAAKE,GACrD,IAAIQ,EACAC,EACAC,EAAI,EACR,GACID,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWjB,EAAWkB,EAAUX,EAAKE,GAAOK,EACxCG,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZE,KAAKC,IAAIJ,GAAYb,KACxBe,EAAId,GACV,OAAOa,CACX,CAK6BI,CAAgBT,EAAI,EAAG,EAAGN,EAAKE,GAExD,OAAQR,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,EAAWY,EAASX,GAAIO,EAAKE,EACxE,CC9CA,MAAM9B,EAAS0B,EAAY,IAAM,EAAG,EAAG,GACjCzB,EAAUyB,EAAY,EAAG,EAAG,IAAM,GAClCxB,EAAYwB,EAAY,IAAM,EAAG,IAAM,GCJvCiB,EAAiB5C,GACZZ,MAAMC,QAAQW,IAA4B,iBAAZA,EAAK,G,iCCG9C,MAAMO,EAAUoB,EAAY,IAAM,KAAM,IAAM,KACxCrB,GAAS,EAAAuC,EAAA,GAActC,GACvBuC,GAAY,EAAAC,EAAA,GAAazC,GCEzB0C,EAAe,CACjBjD,OAAQiC,EAAA,EACR/B,OAAM,EACNE,UAAS,EACTD,QAAO,EACPE,OAAM,KACN6C,UAAS,KACT5C,QAAO,KACPC,OAAM,EACNwC,UAAS,EACTvC,QAAO,EACP2C,WCjBgBC,IAAOA,GAAK,GAAK,EAAI,GAAM7C,EAAO6C,GAAK,IAAO,EAAIV,KAAKW,IAAI,GAAI,IAAMD,EAAI,MDmBvFE,EAA8BC,IAChC,GAAIlE,MAAMC,QAAQiE,GAAa,EAE3B,OAAgC,IAAtBA,EAAWC,OAAc,2DACnC,MAAOC,EAAIC,EAAIC,EAAIC,GAAML,EACzB,OAAO3B,EAAY6B,EAAIC,EAAIC,EAAIC,EACnC,CACK,MAA0B,iBAAfL,IAEZ,YAAuClC,IAA7B4B,EAAaM,GAA2B,wBAAwBA,MACnEN,EAAaM,IAEjBA,CAAU,E,wBEvBrB,SAASM,GAAU,SAAEC,EAAW,IAAKD,UAAWE,EAAc,MAAEC,EAAK,KAAE/D,EAAO,cAK1E,MAAMgE,EAAkBpB,EAAc5C,GAChCA,EAAKS,IAAI4C,GACTA,EAA2BrD,GAK3BiE,EAAQ,CACVC,MAAM,EACNC,MAAOL,EAAe,IAKpBM,EC7BV,SAA8BC,EAAQR,GAClC,OAAOQ,EAAO5D,KAAK6D,GAAMA,EAAIT,GACjC,CD2B0BU,CAGtBR,GAASA,EAAMR,SAAWO,EAAeP,OACnCQ,GACA,OAAcD,GAAiBD,GAC/BW,GAAoB,EAAAC,EAAA,GAAYL,EAAeN,EAAgB,CACjE9D,KAAMZ,MAAMC,QAAQ2E,GACdA,GA9BSU,EA+BKZ,EA/BG3E,EA+Ba6E,EA9BjCU,EAAOjE,KAAI,IAAMtB,GAAUgB,IAAWwE,OAAO,EAAGD,EAAOnB,OAAS,MAD3E,IAAuBmB,EAAQvF,EAiC3B,MAAO,CACHyF,mBAAoBf,EACpBgB,KAAOvD,IACH2C,EAAME,MAAQK,EAAkBlD,GAChC2C,EAAMC,KAAO5C,GAAKuC,EACXI,GAGnB,C,cE9CA,MAAMa,EAAyB,EAC/B,SAASC,EAAsBC,EAAc1D,EAAG2D,GAC5C,MAAMC,EAAQzC,KAAK0C,IAAI7D,EAAIwD,EAAwB,GACnD,OAAO,OAAkBG,EAAUD,EAAaE,GAAQ5D,EAAI4D,EAChE,C,cCFA,MAAME,EAAU,KACVC,EAAc,IACdC,EAAc,GACdC,EAAa,IACbC,EAAa,EACnB,SAASC,GAAW,SAAE5B,EAAW,IAAG,OAAE6B,EAAS,IAAI,SAAEC,EAAW,EAAC,KAAEC,EAAO,IACtE,IAAIC,EACAC,GACJ,OAAQjC,IAAY,OAAsByB,GAAc,8CACxD,IAAIS,EAAe,EAAIL,EAIvBK,GAAe,EAAAC,EAAA,GAAMT,EAAYC,EAAYO,GAC7ClC,GAAW,EAAAmC,EAAA,GAAMX,EAAaC,GAAa,OAAsBzB,IAC7DkC,EAAe,GAIfF,EAAYI,IACR,MAAMC,EAAmBD,EAAeF,EAClCI,EAAQD,EAAmBrC,EAC3BlE,EAAIuG,EAAmBP,EACvB/F,EAAIwG,EAAgBH,EAAcF,GAClClG,EAAI4C,KAAK4D,KAAKF,GACpB,OAAOf,EAAWzF,EAAIC,EAAKC,CAAC,EAEhCiG,EAAcG,IACV,MACME,EADmBF,EAAeF,EACPlC,EAC3B/D,EAAIqG,EAAQR,EAAWA,EACvBW,EAAI7D,KAAKW,IAAI2C,EAAc,GAAKtD,KAAKW,IAAI6C,EAAc,GAAKpC,EAC5D0C,EAAI9D,KAAK4D,KAAKF,GACdK,EAAIJ,EAAgB3D,KAAKW,IAAI6C,EAAc,GAAIF,GAErD,QADgBF,EAASI,GAAgBb,EAAU,GAAK,EAAI,KACzCtF,EAAIwG,GAAKC,GAAMC,CAAC,IAOvCX,EAAYI,GACExD,KAAK4D,KAAKJ,EAAepC,KACxBoC,EAAeN,GAAY9B,EAAW,GACzCuB,EAEZU,EAAcG,GACAxD,KAAK4D,KAAKJ,EAAepC,IACIA,EAAWA,GAAvC8B,EAAWM,KAI9B,MACMA,EAmBV,SAAyBJ,EAAUC,EAAYW,GAC3C,IAAIC,EAASD,EACb,IAAK,IAAIjE,EAAI,EAAGA,EAAImE,EAAgBnE,IAChCkE,GAAkBb,EAASa,GAAUZ,EAAWY,GAEpD,OAAOA,CACX,CAzByBE,CAAgBf,EAAUC,EAD1B,EAAIjC,GAGzB,GADAA,GAAW,OAAsBA,GAC7BgD,MAAMZ,GACN,MAAO,CACHa,UAAW,IACXC,QAAS,GACTlD,YAGH,CACD,MAAMiD,EAAYrE,KAAKW,IAAI6C,EAAc,GAAKL,EAC9C,MAAO,CACHkB,YACAC,QAAwB,EAAfhB,EAAmBtD,KAAKuE,KAAKpB,EAAOkB,GAC7CjD,WAER,CACJ,CACA,MAAM8C,EAAiB,GAQvB,SAASP,EAAgBH,EAAcF,GACnC,OAAOE,EAAexD,KAAKuE,KAAK,EAAIjB,EAAeA,EACvD,CClFA,MAAMkB,EAAe,CAAC,WAAY,UAC5BC,EAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,EAAaC,EAASC,GAC3B,OAAOA,EAAKC,MAAMnG,QAAyBC,IAAjBgG,EAAQjG,IACtC,CAwBA,SAASoG,GAAO,UAAE3D,EAAS,UAAE4D,EAAS,UAAEC,KAAcL,IAClD,MAAMM,EAAS9D,EAAU,GACnB+D,EAAS/D,EAAUA,EAAUL,OAAS,GAKtCU,EAAQ,CAAEC,MAAM,EAAOC,MAAOuD,IAC9B,UAAEZ,EAAS,QAAEC,EAAO,KAAEnB,EAAI,SAAED,EAAQ,SAAE9B,EAAQ,uBAAE+D,GA/B1D,SAA0BR,GACtB,IAAIS,EAAgB,CAChBlC,SAAU,EACVmB,UAAW,IACXC,QAAS,GACTnB,KAAM,EACNgC,wBAAwB,KACrBR,GAGP,IAAKD,EAAaC,EAASF,IACvBC,EAAaC,EAASH,GAAe,CACrC,MAAMa,EAAUrC,EAAW2B,GAC3BS,EAAgB,IACTA,KACAC,EACHnC,SAAU,EACVC,KAAM,GAEViC,EAAcD,wBAAyB,CAC3C,CACA,OAAOC,CACX,CASsFE,CAAiBX,GAC7FY,EAAkBrC,IAAY,OAAsBA,GAAY,EAChEI,EAAegB,GAAW,EAAItE,KAAKuE,KAAKF,EAAYlB,IACpDqC,EAAeN,EAASD,EACxBQ,GAAsB,OAAsBzF,KAAKuE,KAAKF,EAAYlB,IAQlEuC,EAAkB1F,KAAKC,IAAIuF,GAAgB,EAGjD,IAAIG,EACJ,GAHAX,IAAcA,EAAYU,EAAkB,IAAO,GACnDX,IAAcA,EAAYW,EAAkB,KAAQ,IAEhDpC,EAAe,EAAG,CAClB,MAAMsC,EAAcjC,EAAgB8B,EAAqBnC,GAEzDqC,EAAiB9G,IACb,MAAMuE,EAAWpD,KAAK4D,KAAKN,EAAemC,EAAsB5G,GAChE,OAAQqG,EACJ9B,IACOmC,EACCjC,EAAemC,EAAsBD,GACrCI,EACA5F,KAAK6F,IAAID,EAAc/G,GACvB2G,EAAexF,KAAK8F,IAAIF,EAAc/G,GAAI,CAE9D,MACK,GAAqB,IAAjByE,EAELqC,EAAiB9G,GAAMqG,EACnBlF,KAAK4D,KAAK6B,EAAsB5G,IAC3B2G,GACID,EAAkBE,EAAsBD,GAAgB3G,OAEpE,CAED,MAAMkH,EAAoBN,EAAsBzF,KAAKuE,KAAKjB,EAAeA,EAAe,GACxFqC,EAAiB9G,IACb,MAAMuE,EAAWpD,KAAK4D,KAAKN,EAAemC,EAAsB5G,GAE1DmH,EAAWhG,KAAKiG,IAAIF,EAAoBlH,EAAG,KACjD,OAAQqG,EACH9B,IACKmC,EACEjC,EAAemC,EAAsBD,GACrCxF,KAAKkG,KAAKF,GACVD,EACIP,EACAxF,KAAKmG,KAAKH,IAClBD,CAAkB,CAElC,CACA,MAAO,CACH5D,mBAAoBgD,GAAyB/D,GAAmB,KAChEgB,KAAOvD,IACH,MAAM2D,EAAUmD,EAAc9G,GAC9B,GAAKsG,EAqBD3D,EAAMC,KAAO5C,GAAKuC,MArBO,CACzB,IAAIgF,EAAkBb,EACZ,IAAN1G,IAOIuH,EADA9C,EAAe,EACGhB,EAAsBqD,EAAe9G,EAAG2D,GAGxC,GAG1B,MAAM6D,EAA2BrG,KAAKC,IAAImG,IAAoBpB,EACxDsB,EAA+BtG,KAAKC,IAAIiF,EAAS1C,IAAYuC,EACnEvD,EAAMC,KACF4E,GAA4BC,CACpC,CAKA,OADA9E,EAAME,MAAQF,EAAMC,KAAOyD,EAAS1C,EAC7BhB,CAAK,EAGxB,CC3HA,SAAS+E,GAAQ,UAAEpF,EAAS,SAAE+B,EAAW,EAAG,MAAEsD,EAAQ,GAAG,aAAEC,EAAe,IAAG,cAAEC,EAAgB,GAAE,gBAAEC,EAAkB,IAAG,aAAEC,EAAY,IAAEX,EAAG,IAAEvD,EAAG,UAAEqC,EAAY,GAAG,UAAEC,IAC/J,MAAMC,EAAS9D,EAAU,GACnBK,EAAQ,CACVC,MAAM,EACNC,MAAOuD,GAGL4B,EAAmBC,QACTnI,IAARsH,EACOvD,OACC/D,IAAR+D,GAEG1C,KAAKC,IAAIgG,EAAMa,GAAK9G,KAAKC,IAAIyC,EAAMoE,GAD/Bb,EAC0CvD,EAEzD,IAAIqE,EAAYP,EAAQtD,EACxB,MAAM8D,EAAQ/B,EAAS8B,EACjB7B,OAA0BvG,IAAjBiI,EAA6BI,EAAQJ,EAAaI,GAK7D9B,IAAW8B,IACXD,EAAY7B,EAASD,GACzB,MAAMgC,EAAapI,IAAOkI,EAAY/G,KAAK4D,KAAK/E,EAAI4H,GAC9CS,EAAcrI,GAAMqG,EAAS+B,EAAUpI,GACvCsI,EAAiBtI,IACnB,MAAM6E,EAAQuD,EAAUpI,GAClBuI,EAASF,EAAWrI,GAC1B2C,EAAMC,KAAOzB,KAAKC,IAAIyD,IAAUqB,EAChCvD,EAAME,MAAQF,EAAMC,KAAOyD,EAASkC,CAAM,EAQ9C,IAAIC,EACAC,EACJ,MAAMC,EAAsB1I,IAjCN,IAACiI,KAkCAtF,EAAME,WAlCS/C,IAARsH,GAAqBa,EAAIb,QAAiBtH,IAAR+D,GAAqBoE,EAAIpE,KAoCrF2E,EAAsBxI,EACtByI,EAAWxC,EAAO,CACd3D,UAAW,CAACK,EAAME,MAAOmF,EAAgBrF,EAAME,QAC/CwB,SAAUZ,EAAsB4E,EAAYrI,EAAG2C,EAAME,OACrD4C,QAASoC,EACTrC,UAAWsC,EACX5B,YACAC,cACF,EAGN,OADAuC,EAAmB,GACZ,CACHpF,mBAAoB,KACpBC,KAAOvD,IAOH,IAAI2I,GAAkB,EAUtB,OATKF,QAAoC3I,IAAxB0I,IACbG,GAAkB,EAClBL,EAActI,GACd0I,EAAmB1I,SAMKF,IAAxB0I,GAAqCxI,EAAIwI,EAClCC,EAASlF,KAAKvD,EAAIwI,KAGxBG,GAAmBL,EAActI,GAC3B2C,EACX,EAGZ,C,cCjFA,MAAMiG,EAAmBC,IACrB,MAAMC,EAAgB,EAAGC,eAAgBF,EAAOE,GAChD,MAAO,CACHC,MAAO,IAAM,YAAaF,GAAe,GACzCG,KAAM,KAAM,QAAYH,GAKxBI,IAAK,IAAM,iBAAyB,cAAsBC,YAAYD,MACzE,ECTCE,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAI/G,EAAW,EAEf,IAAII,EAAQ2G,EAAU/F,KAAKhB,GAC3B,MAAQI,EAAMC,MAAQL,EAAW6G,IAC7B7G,GAHa,GAIbI,EAAQ2G,EAAU/F,KAAKhB,GAE3B,OAAOA,GAAY6G,GAAuBG,IAAWhH,CACzD,CCLA,MAAMiH,GAAQ,CACVC,MAAO/B,EACPA,QAAO,EACPgC,MAAOpH,EACPA,UAAWA,EACX2D,OAAM,GASV,SAAS0D,IAAa,SAAEC,GAAW,EAAI,MAAEC,EAAQ,EAAC,OAAEC,EAASlB,EAAiBtG,UAAWyH,EAAW,KAAEC,EAAO,YAAW,OAAEC,EAAS,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAa,OAAM,OAAEC,EAAM,OAAEC,EAAM,WAAEC,EAAU,SAAEC,KAAazE,IACjN,IAEI0E,EACAC,EAHAC,EAAQ,EACRC,GAAa,EAQjB,MAAMC,EAAwB,KAC1BJ,GAA0BA,IAC1BC,EAAyB,IAAII,SAASC,IAClCN,EAAyBM,CAAO,GAClC,EAIN,IAAIC,EADJH,IAEA,MAAMI,EAAmBxB,GAAMQ,IAAS1H,EAMxC,IAAI2I,EACAD,IAAqB1I,GACK,iBAAnByH,EAAY,KACnBkB,GAAwB,EAAA9H,EAAA,GAAY,CAAC,EAAG,KAAM4G,EAAa,CACvDrF,OAAO,IAEXqF,EAAc,CAAC,EAAG,MAEtB,MAAMT,EAAY0B,EAAiB,IAAKlF,EAASxD,UAAWyH,IAC5D,IAAImB,EACe,WAAff,IACAe,EAAoBF,EAAiB,IAC9BlF,EACHxD,UAAW,IAAIyH,GAAaxI,UAC5B8C,WAAYyB,EAAQzB,UAAY,MAGxC,IAAI8G,EAAY,OACZC,EAAW,KACXC,EAAY,KACZC,EAAa,KASoB,OAAjChC,EAAUhG,oBAA+B2G,IACzCX,EAAUhG,mBAAqB+F,GAAsBC,IAEzD,MAAM,mBAAEhG,GAAuBgG,EAC/B,IAAIiC,EAAmBhC,IACnBiC,EAAgBjC,IACO,OAAvBjG,IACAiI,EAAmBjI,EAAqB4G,EACxCsB,EAAgBD,GAAoBtB,EAAS,GAAKC,GAEtD,IAAIuB,EAAc,EAClB,MAAMC,EAAQ3C,IACV,GAAkB,OAAdsC,EACA,OAOAX,EAAQ,IACRW,EAAYlK,KAAKiG,IAAIiE,EAAWtC,IAEhC0C,EADa,OAAbL,EACcA,GAGCrC,EAAYsC,GAAaX,EAG5C,MAAMiB,EAAmBF,EAAc5B,EACjC+B,EAAiBD,EAAmB,EAC1CF,EAActK,KAAK0C,IAAI8H,EAAkB,GAKvB,aAAdR,GAAyC,OAAbC,IAC5BK,EAAcD,GAElB,IAAIK,EAAUJ,EACVK,EAAiBxC,EACrB,GAAIW,EAAQ,CAMR,MAAM8B,EAAWN,EAAcF,EAK/B,IAAIS,EAAmB7K,KAAK8K,MAAMF,GAK9BG,EAAoBH,EAAW,GAK9BG,GAAqBH,GAAY,IAClCG,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmB7K,KAAKiG,IAAI4E,EAAkB/B,EAAS,GAIvD,MAAMkC,EAAiBlO,QAAQ+N,EAAmB,GAC9CG,IACmB,YAAfhC,GACA+B,EAAoB,EAAIA,EACpBhC,IACAgC,GAAqBhC,EAAcqB,IAGnB,WAAfpB,IACL2B,EAAiBZ,IAGzB,IAAIrJ,GAAI,EAAA6C,EAAA,GAAM,EAAG,EAAGwH,GAChBT,EAAcD,IACd3J,EAAmB,YAAfsI,GAA4BgC,EAAiB,EAAI,GAEzDN,EAAUhK,EAAI0J,CAClB,CAMA,MAAM5I,EAAQiJ,EACR,CAAEhJ,MAAM,EAAOC,MAAOkH,EAAY,IAClC+B,EAAevI,KAAKsI,GACtBZ,IACAtI,EAAME,MAAQoI,EAAsBtI,EAAME,QAE9C,IAAI,KAAED,GAASD,EACViJ,GAAyC,OAAvBtI,IACnBV,EAAO6I,GAAeD,GAE1B,MAAMY,EAAmC,OAAbhB,IACT,aAAdD,GACkB,YAAdA,GAA2BvI,GAC3B8H,EAAQ,GAAKe,GAAe,GAOrC,OANIlB,GACAA,EAAS5H,EAAME,OAEfuJ,GACAC,IAEG1J,CAAK,EAEV2J,EAAsB,KACxBvB,GAAmBA,EAAgB9B,OACnC8B,OAAkBjL,CAAS,EAEzByM,EAAS,KACXpB,EAAY,OACZmB,IACA1B,IACAS,EAAYC,EAAa,IAAI,EAE3Be,EAAS,KACXlB,EAAY,WACZb,GAAcA,IACdgC,IACA1B,GAAuB,EAErB4B,EAAO,KACT,GAAI7B,EACA,OACCI,IACDA,EAAkBjB,EAAO4B,IAC7B,MAAMxC,EAAM6B,EAAgB7B,MAC5BkB,GAAUA,IACO,OAAbgB,EACAC,EAAYnC,EAAMkC,EAEZC,GAA2B,aAAdF,IACnBE,EAAYnC,GAEhBoC,EAAaD,EACbD,EAAW,KAKXD,EAAY,UACZJ,EAAgB/B,OAAO,EAEvBY,GACA4C,IAEJ,MAAMC,EAAW,CACbC,KAAK5B,EAAS6B,GACV,OAAOlC,EAAuBiC,KAAK5B,EAAS6B,EAChD,EACIC,WACA,OAAO,OAAsBnB,EACjC,EACImB,SAAKC,GACLA,GAAU,OAAsBA,GAChCpB,EAAcoB,EACG,OAAbzB,GAAsBL,GAA6B,IAAVL,EAIzCW,EAAYN,EAAgB7B,MAAQ2D,EAAUnC,EAH9CU,EAAWyB,CAKnB,EACItK,eACA,MAAMA,EAA4C,OAAjC+G,EAAUhG,mBACrB+F,GAAsBC,GACtBA,EAAUhG,mBAChB,OAAO,OAAsBf,EACjC,EACImI,YACA,OAAOA,CACX,EACIA,UAAMoC,GACFA,IAAapC,GAAUK,IAE3BL,EAAQoC,EACRL,EAASG,MAAO,OAAsBnB,GAC1C,EACI9I,YACA,OAAOwI,CACX,EACAqB,OACAO,MAAO,KACH5B,EAAY,SACZC,EAAWK,CAAW,EAE1BxC,KAAM,KACF0B,GAAa,EACK,SAAdQ,IAEJA,EAAY,OACZd,GAAUA,IACVkC,IAAQ,EAEZA,OAAQ,KACe,OAAfjB,GACAI,EAAKJ,GACTiB,GAAQ,EAEZS,SAAU,KACN7B,EAAY,UAAU,EAE1B8B,OAASpB,IACLR,EAAY,EACLK,EAAKG,KAGpB,OAAOY,CACX,CC5RA,MAAMS,GAAoB,IAAIC,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAgBJ,SAASC,GAA2BvK,EAAOwK,GAAW,SAAE9C,EAAQ,WAAED,KAAexE,IAO7E,KAN+BlG,EAASP,SACpC6N,GAAkBI,IAAID,KACrBvH,EAAQoE,aACc,WAAvBpE,EAAQqE,YACY,IAApBrE,EAAQL,SACS,YAAjBK,EAAQkE,MAER,OAAO,EAIX,IACIQ,EACAC,EAFAE,GAAa,EAQjB,MAAMC,EAAwB,KAC1BH,EAAyB,IAAII,SAASC,IAClCN,EAAyBM,CAAO,GAClC,EAGNF,IACA,IAAI,UAAEtI,EAAS,SAAEC,EAAW,IAAG,KAAE7D,EAAI,MAAE+D,GAAUqD,EAIjD,GAlCkC,EAACuH,EAAWvH,IAA6B,WAAjBA,EAAQkE,MACpD,oBAAdqD,IACCrP,EAAuB8H,EAAQpH,MAgC5B6O,CAA8BF,EAAWvH,GAAU,CACnD,MAAM0H,EAAkB7D,GAAa,IAC9B7D,EACHmE,OAAQ,EACRJ,MAAO,IAEX,IAAIlH,EAAQ,CAAEC,MAAM,EAAOC,MAAOP,EAAU,IAC5C,MAAMmL,EAAwB,GAK9B,IAAIzN,EAAI,EACR,MAAQ2C,EAAMC,MAAQ5C,EAhDV,KAiDR2C,EAAQ6K,EAAgBP,OAAOjN,GAC/ByN,EAAsBC,KAAK/K,EAAME,OACjC7C,GAxDQ,GA0DZyC,OAAQ3C,EACRwC,EAAYmL,EACZlL,EAAWvC,EA5DC,GA6DZtB,EAAO,QACX,CACA,MAAMiP,ECpFV,SAAsBC,EAASP,EAAW/K,GAAW,MAAEuH,EAAQ,EAAC,SAAEtH,EAAQ,OAAE0H,EAAS,EAAC,WAAEE,EAAa,OAAM,KAAEzL,EAAI,MAAE+D,GAAW,CAAC,GAC3H,MAAMoL,EAAkB,CAAE,CAACR,GAAY/K,GACnCG,IACAoL,EAAgB9K,OAASN,GAC7B,MAAM5E,EAASqB,EAAwBR,GAMvC,OAFIZ,MAAMC,QAAQF,KACdgQ,EAAgBhQ,OAASA,GACtB+P,EAAQE,QAAQD,EAAiB,CACpChE,QACAtH,WACA1E,OAASC,MAAMC,QAAQF,GAAmB,SAATA,EACjCkQ,KAAM,OACNC,WAAY/D,EAAS,EACrBgE,UAA0B,YAAf9D,EAA2B,YAAc,UAE5D,CDkEsB+D,CAAarL,EAAMsL,MAAMxK,QAAS0J,EAAW/K,EAAW,IACnEwD,EACHvD,WASA7D,KAAMA,EACN+D,UAEE2L,EAAkB,IAAMT,EAAUpB,SAClC8B,EAAa,KACf,YAAaD,GACb5D,IACAI,GAAuB,EAkB3B,OARA+C,EAAUW,SAAW,KACjBzL,EAAM0L,IEnHd,SAA0BjM,GAAW,OAAE2H,EAAM,WAAEE,EAAa,SAIxD,OAAO7H,EAHO2H,GAAyB,SAAfE,GAAyBF,EAAS,GAAM,EAC1D,EACA3H,EAAUL,OAAS,EAE7B,CF8GkBuM,CAAiBlM,EAAWwD,IACtCwE,GAAcA,IACd+D,GAAY,EAKT,CACH3B,KAAK5B,EAAS6B,GACV,OAAOlC,EAAuBiC,KAAK5B,EAAS6B,EAChD,EACIC,WACA,OAAO,OAAsBe,EAAUlC,aAAe,EAC1D,EACImB,SAAKC,GACLc,EAAUlC,aAAc,OAAsBoB,EAClD,EACInC,YACA,OAAOiD,EAAUc,YACrB,EACI/D,UAAMoC,GACNa,EAAUc,aAAe3B,CAC7B,EACIvK,eACA,OAAO,OAAsBA,EACjC,EACAiK,KAAM,KACE7B,IAEJgD,EAAUnB,QAIV,QAAY4B,GAAgB,EAEhCrB,MAAO,IAAMY,EAAUZ,QACvB9D,KAAM,KAEF,GADA0B,GAAa,EACe,SAAxBgD,EAAUxC,UACV,OASJ,MAAM,YAAEM,GAAgBkC,EACxB,GAAIlC,EAAa,CACb,MAAM+B,EAAkB7D,GAAa,IAC9B7D,EACH8D,UAAU,IAEd/G,EAAM6L,gBAAgBlB,EAAgBP,OAAOxB,EAlJzC,IAkJoE5I,MAAO2K,EAAgBP,OAAOxB,GAAa5I,MAlJ/G,GAmJR,CACAwL,GAAY,EAEhBrB,SAAU,IAAMW,EAAUtB,SAC1BE,OAAQ8B,EAEhB,C,eG9KA,MAAMM,GAAoB,CACtB3E,KAAM,SACNxE,UAAW,IACXC,QAAS,GACTU,UAAW,IAQTyI,GAAsB,CACxB5E,KAAM,YACNzH,SAAU,IAMR7D,GAAO,CACTsL,KAAM,YACNtL,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB6D,SAAU,IAERsM,GAAuB,CAACC,GAAYxM,eAClCA,EAAUL,OAAS,EACZ2M,GAEFG,GAAA,MAAmBD,GACjBA,EAASE,WAAW,SAxBQ,CACvChF,KAAM,SACNxE,UAAW,IACXC,QAAoB,IAsBanD,EAAU,GAtBnB,EAAInB,KAAKuE,KAAK,KAAO,GAC7CS,UAAW,IAsBDwI,GAEHjQ,G,eCzBX,MAAMuQ,GAAe,CAACpP,EAAKgD,IAEX,WAARhD,MAKiB,iBAAVgD,IAAsB/E,MAAMC,QAAQ8E,OAE1B,iBAAVA,IACNqM,GAAA,OAAarM,IAAoB,MAAVA,GACvBA,EAAMmM,WAAW,U,yBCpB1B,SAASG,GAAOtM,GACZ,MAAqB,iBAAVA,EACU,IAAVA,EAEQ,OAAVA,EACY,SAAVA,GAA8B,MAAVA,IAAiB,QAAkBA,QAD7D,CAGT,C,eCEA,MAAMuM,GAAqB,CAAC/B,EAAWxK,EAAOwD,EAAQgJ,EAAa,CAAC,IACxD/E,IACJ,MAAMgF,GAAkB,QAAmBD,EAAYhC,IAAc,CAAC,EAMhExD,EAAQyF,EAAgBzF,OAASwF,EAAWxF,OAAS,EAK3D,IAAI,QAAEgC,EAAU,GAAMwD,EACtBxD,IAAoB,OAAsBhC,GAC1C,MAAMvH,ECtBd,SAAsBO,EAAOwK,EAAWhH,EAAQgJ,GAC5C,MAAME,EAAqBN,GAAa5B,EAAWhH,GACnD,IAAI/D,EAEAA,EADAxE,MAAMC,QAAQsI,GACF,IAAIA,GAGJ,CAAC,KAAMA,GAEvB,MAAMmJ,OAAoC1P,IAApBuP,EAAWI,KAAqBJ,EAAWI,KAAO5M,EAAM6M,MAC9E,IAAIC,EACJ,MAAMC,EAAsB,GAC5B,IAAK,IAAI1O,EAAI,EAAGA,EAAIoB,EAAUL,OAAQf,IAIb,OAAjBoB,EAAUpB,KACVoB,EAAUpB,GAAW,IAANA,EAAUsO,EAAgBlN,EAAUpB,EAAI,IAEvDiO,GAAO7M,EAAUpB,IACjB0O,EAAoBlC,KAAKxM,GAEI,iBAAjBoB,EAAUpB,KACtByO,EAA0BrN,EAAUpB,IAG5C,GAAIqO,GACAK,EAAoB3N,QACpB0N,EACA,IAAK,IAAIzO,EAAI,EAAGA,EAAI0O,EAAoB3N,OAAQf,IAE5CoB,EADcsN,EAAoB1O,KACf,QAAkBmM,EAAWsC,GAGxD,OAAOrN,CACX,CDb0BuN,CAAahN,EAAOwK,EAAWhH,EAAQiJ,GAMnDQ,EAAiBxN,EAAU,GAC3ByN,EAAiBzN,EAAUA,EAAUL,OAAS,GAC9C+N,EAAqBf,GAAa5B,EAAWyC,GAC7CP,EAAqBN,GAAa5B,EAAW0C,IACnD,OAAQC,IAAuBT,EAAoB,6BAA6BlC,WAAmByC,UAAuBC,OAAoBD,+DAA4EA,8BAA2CC,iCACrQ,IAAIjK,EAAU,CACVxD,YACA+B,SAAUxB,EAAMoN,cAChBvR,KAAM,aACH4Q,EACHzF,OAAQgC,EACRtB,SAAWtC,IACPpF,EAAM0L,IAAItG,GACVqH,EAAgB/E,UAAY+E,EAAgB/E,SAAStC,EAAE,EAE3DqC,WAAY,KACRA,IACAgF,EAAgBhF,YAAcgF,EAAgBhF,YAAY,GAwBlE,IAjBK,QAAoBgF,KACrBxJ,EAAU,IACHA,KACA+I,GAAqBxB,EAAWvH,KAQvCA,EAAQvD,WACRuD,EAAQvD,UAAW,OAAsBuD,EAAQvD,WAEjDuD,EAAQoE,cACRpE,EAAQoE,aAAc,OAAsBpE,EAAQoE,eAEnD8F,IACAT,GACD5R,IACyB,IAAzB2R,EAAgBtF,KAKhB,OE9EZ,UAAgC,UAAE1H,EAAS,MAAEuH,EAAK,SAAEU,EAAQ,WAAED,IAC1D,MAAM4F,EAAW,KACb3F,GAAYA,EAASjI,EAAUA,EAAUL,OAAS,IAClDqI,GAAcA,IAQP,CACHsC,KAAM,EACNlC,MAAO,EACPnI,SAAU,EACViK,KAAO9L,EAAI,EACXqM,MAAQrM,EAAI,EACZuI,KAAOvI,EAAI,EACXgM,KAAO5B,IACHA,IACOD,QAAQC,WAEnByB,OAAS7L,EAAI,EACbsM,SAAWtM,EAAI,IAGvB,OAAOmJ,EACDF,GAAa,CACXrH,UAAW,CAAC,EAAG,GACfC,SAAU,EACVsH,QACAS,WAAY4F,IAEdA,GACV,CF4CmBC,CAAuBrK,GAKlC,GAAIjD,EAAMsL,OACNtL,EAAMsL,MAAMxK,mBAAmByM,cAC9BvN,EAAMsL,MAAMkC,WAAW9F,SAAU,CAClC,MAAM+F,EAAuBlD,GAA2BvK,EAAOwK,EAAWvH,GAC1E,GAAIwK,EACA,OAAOA,CACf,CAIA,OAAO3G,GAAa7D,EAAQ,C,uBG3FpC,SAASyK,GAAoB,KAAEC,EAAM3G,MAAO4G,EAAM,cAAEC,EAAa,gBAAEC,EAAe,iBAAEC,EAAgB,OAAE3G,EAAM,WAAEE,EAAU,YAAED,EAAW,KAAEuF,EAAI,QAAE5D,KAAYwD,IACrJ,QAAS/P,OAAOyG,KAAKsJ,GAAYpN,MACrC,CACA,SAAS4O,EAAmBxB,EAAYxP,GACpC,OAAOwP,EAAWxP,IAAQwP,EAAoB,SAAKA,CACvD,C,8IC8BA,SAASyB,GAAW,SAAEC,EAAQ,SAAEC,EAAQ,OAAEC,GAAS,IAC/C,MAAO,CAAEC,IAAe,IAAAC,WAAUC,EAAaJ,IACzCK,GAAiB,IAAAC,aAAOxR,GAI9B,IAAKsR,EAAaJ,GAAW,CACzB,MAAM,SAAEO,KAAaC,GAAmBR,EACxCK,EAAe1N,QAAU4N,GACzB,OAAaC,EACjB,CAUA,OATA,IAAAC,YAAU,KACFL,EAAaJ,IACbA,IAAWtE,MAAK,EAAG6E,cAAaC,OAC5B,OAAaA,GACbH,EAAe1N,QAAU4N,EACzBL,GAAY,EAAK,GAEzB,GACD,IACK,gBAAoB,aAAsB,CAAErO,MAAO,CAAE0O,SAAUF,EAAe1N,QAASsN,WAAYF,EAC/G,CACA,SAASK,EAAaJ,GAClB,MAA2B,mBAAbA,CAClB,C,+HC7DA,MAAMlS,EAAU+C,GAAM,EAAIV,KAAK6F,IAAI7F,KAAKuQ,KAAK7P,IACvC9C,GAAU,OAAcD,GACxB6C,GAAY,OAAa5C,E,sDCH/B,MAAM4S,EAAgB9T,GAAYgE,GAAMA,GAAK,GAAMhE,EAAO,EAAIgE,GAAK,GAAK,EAAIhE,EAAO,GAAK,EAAIgE,KAAO,C,uDCAnG,MAAM+P,EAAiB/T,GAAYgE,GAAM,EAAIhE,EAAO,EAAIgE,E,uBCFxD,SAASgQ,EAAYxL,EAAQyL,EAAWC,EAASjM,EAAU,CAAEkM,SAAS,IAElE,OADA3L,EAAO4L,iBAAiBH,EAAWC,EAASjM,GACrC,IAAMO,EAAO6L,oBAAoBJ,EAAWC,EACvD,C,6GCAA,SAASI,EAAgB9L,EAAQyL,EAAWC,EAASjM,GACjD,OAAO,OAAYO,EAAQyL,GAAW,OAAeC,GAAUjM,EACnE,C,4FCHA,SAASsM,EAAiBC,EAAOC,EAAY,QACzC,MAAO,CACHC,MAAO,CACH1R,EAAGwR,EAAMC,EAAY,KACrBE,EAAGH,EAAMC,EAAY,MAGjC,CACA,MAAMG,EAAkBV,GACZM,IAAU,OAAiBA,IAAUN,EAAQM,EAAOD,EAAiBC,G,uDCXjF,MAAMK,EAAoBL,GACI,UAAtBA,EAAMM,YACyB,iBAAjBN,EAAMO,QAAuBP,EAAMO,QAAU,GAWhC,IAApBP,EAAMQ,S,uBCbrB,SAASC,EAAWC,GAChB,IAAIC,EAAO,KACX,MAAO,KACH,MAAMC,EAAW,KACbD,EAAO,IAAI,EAEf,OAAa,OAATA,IACAA,EAAOD,EACAE,EAEC,CAEpB,C,yDACA,MAAMC,EAAuBJ,EAAW,kBAClCK,EAAqBL,EAAW,gBACtC,SAASM,EAAcC,GACnB,IAAIL,GAAO,EACX,GAAa,MAATK,EACAL,EAAOG,SAEN,GAAa,MAATE,EACLL,EAAOE,QAEN,CACD,MAAMI,EAAiBJ,IACjBK,EAAeJ,IACjBG,GAAkBC,EAClBP,EAAO,KACHM,IACAC,GAAc,GAKdD,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOP,CACX,CACA,SAASQ,IAGL,MAAMC,EAAkBL,GAAc,GACtC,OAAKK,IAELA,KACO,EACX,C,sDClDA,MAAMC,EACFC,YAAYC,GACRC,KAAKC,WAAY,EACjBD,KAAKD,KAAOA,CAChB,CACA/K,SAAW,E,uBCAf,SAASkL,GAAwB,IAAEC,EAAG,KAAEC,EAAI,MAAEC,EAAK,OAAEC,IACjD,MAAO,CACHtT,EAAG,CAAEuG,IAAK6M,EAAMpQ,IAAKqQ,GACrB1B,EAAG,CAAEpL,IAAK4M,EAAKnQ,IAAKsQ,GAE5B,CACA,SAASC,GAAwB,EAAEvT,EAAC,EAAE2R,IAClC,MAAO,CAAEwB,IAAKxB,EAAEpL,IAAK8M,MAAOrT,EAAEgD,IAAKsQ,OAAQ3B,EAAE3O,IAAKoQ,KAAMpT,EAAEuG,IAC9D,CAMA,SAASiN,EAAmB9B,EAAO+B,GAC/B,IAAKA,EACD,OAAO/B,EACX,MAAMgC,EAAUD,EAAe,CAAEzT,EAAG0R,EAAM0B,KAAMzB,EAAGD,EAAMyB,MACnDQ,EAAcF,EAAe,CAAEzT,EAAG0R,EAAM2B,MAAO1B,EAAGD,EAAM4B,SAC9D,MAAO,CACHH,IAAKO,EAAQ/B,EACbyB,KAAMM,EAAQ1T,EACdsT,OAAQK,EAAYhC,EACpB0B,MAAOM,EAAY3T,EAE3B,C,6PCxBA,SAAS4T,EAAWlC,EAAOmC,EAAOC,GAG9B,OAAOA,EADQD,GADYnC,EAAQoC,EAGvC,CAIA,SAASC,EAAgBrC,EAAOsC,EAAWH,EAAOC,EAAaG,GAI3D,YAHiBhV,IAAbgV,IACAvC,EAAQkC,EAAWlC,EAAOuC,EAAUH,IAEjCF,EAAWlC,EAAOmC,EAAOC,GAAeE,CACnD,CAIA,SAASE,EAAeC,EAAMH,EAAY,EAAGH,EAAQ,EAAGC,EAAaG,GACjEE,EAAK5N,IAAMwN,EAAgBI,EAAK5N,IAAKyN,EAAWH,EAAOC,EAAaG,GACpEE,EAAKnR,IAAM+Q,EAAgBI,EAAKnR,IAAKgR,EAAWH,EAAOC,EAAaG,EACxE,CAIA,SAASG,EAAcC,GAAK,EAAErU,EAAC,EAAE2R,IAC7BuC,EAAeG,EAAIrU,EAAGA,EAAEgU,UAAWhU,EAAE6T,MAAO7T,EAAE8T,aAC9CI,EAAeG,EAAI1C,EAAGA,EAAEqC,UAAWrC,EAAEkC,MAAOlC,EAAEmC,YAClD,CAOA,SAASQ,EAAgBD,EAAKE,EAAWC,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASpT,OAC5B,IAAKsT,EACD,OAGJ,IAAI3B,EACA/O,EAFJuQ,EAAUvU,EAAIuU,EAAU5C,EAAI,EAG5B,IAAK,IAAItR,EAAI,EAAGA,EAAIqU,EAAYrU,IAAK,CACjC0S,EAAOyB,EAASnU,GAChB2D,EAAQ+O,EAAK4B,gBAKb,MAAMC,EAAW7B,EAAK6B,SAClBA,GACAA,EAASC,OACkB,aAA3BD,EAASC,MAAMC,UAGfL,GACA1B,EAAK9N,QAAQ8P,cACbhC,EAAKiC,QACLjC,IAASA,EAAKkC,MACdC,EAAab,EAAK,CACdrU,GAAI+S,EAAKiC,OAAO9S,OAAOlC,EACvB2R,GAAIoB,EAAKiC,OAAO9S,OAAOyP,IAG3B3N,IAEAuQ,EAAUvU,GAAKgE,EAAMhE,EAAE6T,MACvBU,EAAU5C,GAAK3N,EAAM2N,EAAEkC,MAEvBO,EAAcC,EAAKrQ,IAEnByQ,IAAsB,QAAa1B,EAAKoC,eACxCD,EAAab,EAAKtB,EAAKoC,cAE/B,CAKAZ,EAAUvU,EAAIoV,EAAcb,EAAUvU,GACtCuU,EAAU5C,EAAIyD,EAAcb,EAAU5C,EAC1C,CACA,SAASyD,EAAcvB,GACnB,OAAIwB,OAAOC,UAAUzB,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS0B,EAAcpB,EAAMqB,GACzBrB,EAAK5N,IAAM4N,EAAK5N,IAAMiP,EACtBrB,EAAKnR,IAAMmR,EAAKnR,IAAMwS,CAC1B,CAMA,SAASC,EAActB,EAAMuB,GAAa1W,EAAK2W,EAAUC,IACrD,MAAMC,OAAuC5W,IAA1ByW,EAAWE,GAA2BF,EAAWE,GAAa,GAC3E9B,GAAc,OAAIK,EAAK5N,IAAK4N,EAAKnR,IAAK6S,GAE5C3B,EAAeC,EAAMuB,EAAW1W,GAAM0W,EAAWC,GAAW7B,EAAa4B,EAAW7B,MACxF,CAIA,MAAMiC,EAAQ,CAAC,IAAK,SAAU,WACxBC,EAAQ,CAAC,IAAK,SAAU,WAI9B,SAASb,EAAab,EAAKnG,GACvBuH,EAAcpB,EAAIrU,EAAGkO,EAAW4H,GAChCL,EAAcpB,EAAI1C,EAAGzD,EAAW6H,EACpC,C,gFCvHA,MAMMC,EAAc,KAAM,CACtBhW,EAP0B,CAC1BgU,UAAW,EACXH,MAAO,EACPtO,OAAQ,EACRuO,YAAa,GAIbnC,EAR0B,CAC1BqC,UAAW,EACXH,MAAO,EACPtO,OAAQ,EACRuO,YAAa,KAOXmC,EAAY,KAAM,CACpBjW,EAFqB,CAAGuG,IAAK,EAAGvD,IAAK,GAGrC2O,EAHqB,CAAGpL,IAAK,EAAGvD,IAAK,I,uBCVzC,SAASkT,EAAgBrC,GACrB,YAAiB5U,IAAV4U,GAAiC,IAAVA,CAClC,CACA,SAASsC,GAAS,MAAEtC,EAAK,OAAEuC,EAAM,OAAEC,IAC/B,OAASH,EAAgBrC,KACpBqC,EAAgBE,KAChBF,EAAgBG,EACzB,CACA,SAASC,EAAa/T,GAClB,OAAQ4T,EAAS5T,IACbgU,EAAehU,IACfA,EAAOiU,GACPjU,EAAOkU,QACPlU,EAAOmU,SACPnU,EAAOoU,OACf,CACA,SAASJ,EAAehU,GACpB,OAAOqU,EAAcrU,EAAOvC,IAAM4W,EAAcrU,EAAOoP,EAC3D,CACA,SAASiF,EAAc5U,GACnB,OAAOA,GAAmB,OAAVA,CACpB,C,qLClBA,SAAS6U,EAAmBjC,EAAUnB,GAClC,OAAO,SAAwB,QAAmBmB,EAASkC,wBAAyBrD,GACxF,CACA,SAASsD,EAAehK,EAASiK,EAAoBC,GACjD,MAAMC,EAAcL,EAAmB9J,EAASkK,IAC1C,OAAEjC,GAAWgC,EAKnB,OAJIhC,KACA,QAAckC,EAAYlX,EAAGgV,EAAO9S,OAAOlC,IAC3C,QAAckX,EAAYvF,EAAGqD,EAAO9S,OAAOyP,IAExCuF,CACX,C,gFCdA,SAASC,EAAezU,EAAM0U,GAC1B,IAAKna,MAAMC,QAAQka,GACf,OAAO,EACX,MAAMC,EAAaD,EAAKhW,OACxB,GAAIiW,IAAe3U,EAAKtB,OACpB,OAAO,EACX,IAAK,IAAIf,EAAI,EAAGA,EAAIgX,EAAYhX,IAC5B,GAAI+W,EAAK/W,KAAOqC,EAAKrC,GACjB,OAAO,EAEf,OAAO,CACX,C,wBCOA,SAASiX,EAAeC,EAAepW,EAAYqW,GAC/C,MAAMC,EAAQF,EAAc/H,WAC5B,OAAO,OAAwBiI,EAAOtW,OAAuBlC,IAAXuY,EAAuBA,EAASC,EAAMD,OAf5F,SAAoBD,GAChB,MAAMzU,EAAU,CAAC,EAEjB,OADAyU,EAAchV,OAAOmV,SAAQ,CAAC1V,EAAOhD,IAAS8D,EAAQ9D,GAAOgD,EAAM6M,QAC5D/L,CACX,CAWoG6U,CAAWJ,GAP/G,SAAqBA,GACjB,MAAM/T,EAAW,CAAC,EAElB,OADA+T,EAAchV,OAAOmV,SAAQ,CAAC1V,EAAOhD,IAASwE,EAASxE,GAAOgD,EAAMoN,gBAC7D5L,CACX,CAG+H4L,CAAYmI,GAC3I,C,4CCnBA,MACMK,EAA+B,SAAU,OADjB,kB,qBCA9B,SAASC,EAAwB7V,GAC7B,OAAO5E,SAAQ,IAAAiD,GAAc2B,IAAUA,EAAM8V,IACjD,C,mFCDA,MAAMC,EAAiB3Q,GAAO+B,GAASA,EAAK6O,KAAK5Q,GCK3C6Q,EAAsB,CAAC,KAAQ,EAAAC,GAAI,KAAS,KAAS,EAAAC,GAAI,EAAAC,GCLlD,CACTJ,KAAO5Q,GAAY,SAANA,EACbiR,MAAQjR,GAAMA,IDOZkR,EAA0BlR,GAAM6Q,EAAoBM,KAAKR,EAAc3Q,IEJvEoR,EAAa,IAAIP,EAAqBQ,EAAA,EAAOpK,EAAA,GAI7CqK,EAAiBtR,GAAMoR,EAAWD,KAAKR,EAAc3Q,ICC3D,SAASuR,EAAepB,EAAevY,EAAKgD,GACpCuV,EAAcqB,SAAS5Z,GACvBuY,EAAcsB,SAAS7Z,GAAK0O,IAAI1L,GAGhCuV,EAAcuB,SAAS9Z,GAAK,OAAYgD,GAEhD,CACA,SAAS+W,EAAUxB,EAAepW,GAC9B,MAAM6X,EAAW1B,EAAeC,EAAepW,GAC/C,IAAI,cAAE8X,EAAgB,CAAC,EAAC,WAAEzK,EAAa,CAAC,KAAMhJ,GAAWwT,EAAWzB,EAAc2B,qBAAqBF,GAAU,GAAS,CAAC,EAC3HxT,EAAS,IAAKA,KAAWyT,GACzB,IAAK,MAAMja,KAAOwG,EAAQ,CAEtBmT,EAAepB,EAAevY,GADhB,OAA6BwG,EAAOxG,IAEtD,CACJ,CAuEA,SAASma,EAAwBna,EAAKwP,GAClC,IAAKA,EACD,OAEJ,OADwBA,EAAWxP,IAAQwP,EAAoB,SAAKA,GAC7CI,IAC3B,CC5FA,SAASwK,GAAqB,cAAEC,EAAa,eAAEC,GAAkBta,GAC7D,MAAMua,EAAcF,EAAc3a,eAAeM,KAAgC,IAAxBsa,EAAeta,GAExE,OADAsa,EAAeta,IAAO,EACfua,CACX,CACA,SAASC,EAAcjC,EAAepW,GAAY,MAAE6H,EAAQ,EAAC,mBAAEyQ,EAAkB,KAAEtQ,GAAS,CAAC,GACzF,IAAI,WAAEqF,EAAa+I,EAAcvJ,uBAAsB,cAAEiL,KAAkBzT,GAAW+R,EAAc2B,qBAAqB/X,GACzH,MAAMuY,EAAanC,EAAcsB,SAAS,cACtCY,IACAjL,EAAaiL,GACjB,MAAME,EAAa,GACbC,EAAqBzQ,GACvBoO,EAAcsC,gBACdtC,EAAcsC,eAAeC,WAAW3Q,GAC5C,IAAK,MAAMnK,KAAOwG,EAAQ,CACtB,MAAMxD,EAAQuV,EAAcsB,SAAS7Z,GAC/B+a,EAAcvU,EAAOxG,GAC3B,IAAKgD,QACe/C,IAAhB8a,GACCH,GACGR,EAAqBQ,EAAoB5a,GAC7C,SAEJ,MAAMyP,EAAkB,CAAEzF,QAAOgC,QAAS,KAAMwD,GAKhD,GAAIwL,OAAOC,0BAA4BjY,EAAMkY,YAAa,CACtD,MAAMC,EAAW5C,EAAc/H,WAAWoI,GACtCuC,IACA1L,EAAgBzD,QAAUgP,OAAOC,wBAAwBE,EAAUnb,EAAKgD,EAAO,MAEvF,CACAA,EAAMmG,OAAM,OAAmBnJ,EAAKgD,EAAO+X,EAAaxC,EAAc6C,oBAAsBlM,EAAA,MAAmBlP,GACzG,CAAEmK,MAAM,GACRsF,IACN,MAAM3B,EAAY9K,EAAM8K,UACpB+K,EAAwB6B,KACxBA,EAAW5B,IAAI9Y,GACf8N,EAAUjB,MAAK,IAAM6N,EAAWW,OAAOrb,MAE3C2a,EAAW9M,KAAKC,EACpB,CAMA,OALImM,GACAjP,QAAQsQ,IAAIX,GAAY9N,MAAK,KACzBoN,GAAiBF,EAAUxB,EAAe0B,EAAc,IAGzDU,CACX,CC5DA,SAASY,EAAehD,EAAeiD,EAASvV,EAAU,CAAC,GACvD,MAAM+T,EAAW1B,EAAeC,EAAeiD,EAASvV,EAAQuS,QAChE,IAAI,WAAEhJ,EAAa+I,EAAcvJ,wBAA0B,CAAC,GAAMgL,GAAY,CAAC,EAC3E/T,EAAQwU,qBACRjL,EAAavJ,EAAQwU,oBAMzB,MAAMgB,EAAezB,EACf,IAAMhP,QAAQsQ,IAAId,EAAcjC,EAAeyB,EAAU/T,IACzD,IAAM+E,QAAQC,UAKdyQ,EAAqBnD,EAAcoD,iBAAmBpD,EAAcoD,gBAAgBC,KACpF,CAACC,EAAe,KACd,MAAM,cAAEhL,EAAgB,EAAC,gBAAEC,EAAe,iBAAEC,GAAsBvB,EAClE,OAkBZ,SAAyB+I,EAAeiD,EAAS3K,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAG9K,GAC3G,MAAM0U,EAAa,GACbmB,GAAsBvD,EAAcoD,gBAAgBC,KAAO,GAAK9K,EAChEiL,EAA+C,IAArBhL,EAC1B,CAAC1P,EAAI,IAAMA,EAAIyP,EACf,CAACzP,EAAI,IAAMya,EAAqBza,EAAIyP,EAU1C,OATA7S,MAAM2R,KAAK2I,EAAcoD,iBACpBK,KAAKC,GACLvD,SAAQ,CAACwD,EAAO7a,KACjB6a,EAAMC,OAAO,iBAAkBX,GAC/Bb,EAAW9M,KAAK0N,EAAeW,EAAOV,EAAS,IACxCvV,EACH+D,MAAO6G,EAAgBkL,EAAwB1a,KAChDwL,MAAK,IAAMqP,EAAMC,OAAO,oBAAqBX,KAAU,IAEvDxQ,QAAQsQ,IAAIX,EACvB,CAlCmByB,CAAgB7D,EAAeiD,EAAS3K,EAAgBgL,EAAc/K,EAAiBC,EAAkB9K,EAAQ,EAE1H,IAAM+E,QAAQC,WAKd,KAAE0F,GAASnB,EACjB,GAAImB,EAAM,CACN,MAAO0L,EAAOC,GAAiB,mBAAT3L,EAChB,CAAC8K,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOY,IAAQxP,MAAK,IAAMyP,KAC9B,CAEI,OAAOtR,QAAQsQ,IAAI,CAACG,IAAgBC,EAAmBzV,EAAQ+D,QAEvE,CAkBA,SAASiS,EAAgBzd,EAAGC,GACxB,OAAOD,EAAE+d,iBAAiB9d,EAC9B,CCpDA,MAAM+d,EAAuB,IAAI,KAAsB9a,UACjD+a,EAAoB,WAC1B,SAASC,EAAYnE,GACjB,OAAQoC,GAAe3P,QAAQsQ,IAAIX,EAAWrb,KAAI,EAAGwO,YAAW7H,aCPpE,SAA8BsS,EAAepW,EAAY8D,EAAU,CAAC,GAEhE,IAAI6H,EACJ,GAFAyK,EAAc4D,OAAO,iBAAkBha,GAEnClE,MAAMC,QAAQiE,GAAa,CAC3B,MAAMwY,EAAaxY,EAAW7C,KAAKkc,GAAYD,EAAehD,EAAeiD,EAASvV,KACtF6H,EAAY9C,QAAQsQ,IAAIX,EAC5B,MACK,GAA0B,iBAAfxY,EACZ2L,EAAYyN,EAAehD,EAAepW,EAAY8D,OAErD,CACD,MAAM0W,EAA2C,mBAAfxa,EAC5BmW,EAAeC,EAAepW,EAAY8D,EAAQuS,QAClDrW,EACN2L,EAAY9C,QAAQsQ,IAAId,EAAcjC,EAAeoE,EAAoB1W,GAC7E,CACA,OAAO6H,EAAUjB,MAAK,IAAM0L,EAAc4D,OAAO,oBAAqBha,IAC1E,CDVkFya,CAAqBrE,EAAezK,EAAW7H,KACjI,CACA,SAAS4W,EAAqBtE,GAC1B,IAAItK,EAAUyO,EAAYnE,GAC1B,MAAMzV,EAoSC,CACHmL,QAAS6O,GAAgB,GACzBC,YAAaD,IACbE,WAAYF,IACZG,SAAUH,IACVI,UAAWJ,IACXK,WAAYL,IACZM,KAAMN,KA1SV,IAAIO,GAAkB,EAKtB,MAAMC,EAA0B,CAACC,EAAKpb,KAClC,MAAM6X,EAAW1B,EAAeC,EAAepW,GAC/C,GAAI6X,EAAU,CACV,MAAM,WAAExK,EAAU,cAAEyK,KAAkBzT,GAAWwT,EACjDuD,EAAM,IAAKA,KAAQ/W,KAAWyT,EAClC,CACA,OAAOsD,CAAG,EAmBd,SAASC,EAAevX,EAASwX,GAC7B,MAAMhF,EAAQF,EAAc/H,WACtBkN,EAAUnF,EAAcoF,mBAAkB,IAAS,CAAC,EAKpDhD,EAAa,GAKbiD,EAAc,IAAItQ,IAMxB,IAAIuQ,EAAkB,CAAC,EAKnBC,EAAsBpU,IAO1B,IAAK,IAAIrI,EAAI,EAAGA,EAAIob,EAAmBpb,IAAK,CACxC,MAAM8I,EAAOqS,EAAqBnb,GAC5B0c,EAAYjb,EAAMqH,GAClB6T,OAAuB/d,IAAhBwY,EAAMtO,GAAsBsO,EAAMtO,GAAQuT,EAAQvT,GACzD8T,GAAgB,OAAeD,GAK/BE,EAAc/T,IAASsT,EAAoBM,EAAUI,SAAW,MAClD,IAAhBD,IACAJ,EAAsBzc,GAO1B,IAAI+c,EAAcJ,IAASN,EAAQvT,IAAS6T,IAASvF,EAAMtO,IAAS8T,EAepE,GAXIG,GACAf,GACA9E,EAAc8F,yBACdD,GAAc,GAMlBL,EAAU1D,cAAgB,IAAKwD,IAI7BE,EAAUI,UAA4B,OAAhBD,IAElBF,IAASD,EAAUO,WAErB,OAAoBN,IACJ,kBAATA,EACP,SAOJ,MAAMO,EAAmBC,EAAuBT,EAAUO,SAAUN,GACpE,IAAIS,EAAoBF,GAEnBpU,IAASsT,GACNM,EAAUI,WACTC,GACDH,GAEH5c,EAAIyc,GAAuBG,EAKhC,MAAMS,EAAiBzgB,MAAMC,QAAQ8f,GAAQA,EAAO,CAACA,GAKrD,IAAIW,EAAiBD,EAAeE,OAAOtB,EAAyB,CAAC,IACjD,IAAhBY,IACAS,EAAiB,CAAC,GAUtB,MAAM,mBAAEE,EAAqB,CAAC,GAAMd,EAC9Be,EAAU,IACTD,KACAF,GAEDI,EAAiB/e,IACnBye,GAAoB,EACpBb,EAAYoB,OAAOhf,GACnB+d,EAAUzD,eAAeta,IAAO,CAAI,EAExC,IAAK,MAAMA,KAAO8e,EAAS,CACvB,MAAMpb,EAAOib,EAAe3e,GACtBoY,EAAOyG,EAAmB7e,GAE5B6d,EAAgBne,eAAeM,KAK/B0D,IAAS0U,GAKL,OAAkB1U,KAAS,OAAkB0U,IACxCD,EAAezU,EAAM0U,IAASmG,EAC/BQ,EAAc/e,GAOd+d,EAAU1D,cAAcra,IAAO,OAGrBC,IAATyD,EAELqb,EAAc/e,GAId4d,EAAY9E,IAAI9Y,QAGNC,IAATyD,GAAsBka,EAAYnQ,IAAIzN,GAK3C+e,EAAc/e,GAOd+d,EAAU1D,cAAcra,IAAO,EAEvC,CAKA+d,EAAUO,SAAWN,EACrBD,EAAUc,mBAAqBF,EAI3BZ,EAAUI,WACVN,EAAkB,IAAKA,KAAoBc,IAE3CtB,GAAmB9E,EAAc0G,wBACjCR,GAAoB,GAOpBA,IAAsBL,GACtBzD,EAAW9M,QAAQ6Q,EAAepf,KAAKwO,IAAc,CACjDA,UAAWA,EACX7H,QAAS,CAAEkE,UAASlE,OAGhC,CAMA,GAAI2X,EAAYhC,KAAM,CAClB,MAAMsD,EAAoB,CAAC,EAC3BtB,EAAYlF,SAAS1Y,IACjB,MAAMmf,EAAiB5G,EAAc6G,cAAcpf,QAC5BC,IAAnBkf,IACAD,EAAkBlf,GAAOmf,EAC7B,IAEJxE,EAAW9M,KAAK,CAAEC,UAAWoR,GACjC,CACA,IAAIG,EAAgBjhB,QAAQuc,EAAWvY,QAOvC,OANIib,IACkB,IAAlB5E,EAAM6G,UACL/G,EAAc8F,yBACfgB,GAAgB,GAEpBhC,GAAkB,EACXgC,EAAgBpR,EAAQ0M,GAAc3P,QAAQC,SACzD,CAkBA,MAAO,CACHuS,iBACA+B,UAhBJ,SAAmBpV,EAAMgU,EAAUlY,GAC/B,IAAIuZ,EAEJ,GAAI1c,EAAMqH,GAAMgU,WAAaA,EACzB,OAAOnT,QAAQC,UAEsB,QAAxCuU,EAAKjH,EAAcoD,uBAAoC,IAAP6D,GAAyBA,EAAG9G,SAASwD,IAAY,IAAIsD,EAAI,OAAuC,QAA/BA,EAAKtD,EAAMrB,sBAAmC,IAAP2E,OAAgB,EAASA,EAAGD,UAAUpV,EAAMgU,EAAS,IAC9Mrb,EAAMqH,GAAMgU,SAAWA,EACvB,MAAMxD,EAAa6C,EAAevX,EAASkE,GAC3C,IAAK,MAAMnK,KAAO8C,EACdA,EAAM9C,GAAKqa,cAAgB,CAAC,EAEhC,OAAOM,CACX,EAII8E,mBA5PJ,SAA4BC,GACxBzR,EAAUyR,EAAanH,EAC3B,EA2PIuC,SAAU,IAAMhY,EAExB,CACA,SAAS0b,EAAuBpG,EAAM1U,GAClC,MAAoB,iBAATA,EACAA,IAAS0U,IAEXna,MAAMC,QAAQwF,KACXyU,EAAezU,EAAM0U,EAGrC,CACA,SAAS0E,EAAgBqB,GAAW,GAChC,MAAO,CACHA,WACA9D,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBuE,mBAAoB,CAAC,EAE7B,C,aE7SA,MAAMc,UAAyB9L,EAAA,EAM3BC,YAAYC,GACR6L,MAAM7L,GACNA,EAAK8G,iBAAmB9G,EAAK8G,eAAiBgC,EAAqB9I,GACvE,CACA8L,sCACI,MAAM,QAAE5R,GAAY+F,KAAKD,KAAKvD,WAC9BwD,KAAK8L,WACD,OAAoB7R,KACpB+F,KAAK8L,QAAU7R,EAAQ8R,UAAU/L,KAAKD,MAE9C,CAIAiM,QACIhM,KAAK6L,qCACT,CACA7W,SACI,MAAM,QAAEiF,GAAY+F,KAAKD,KAAKvD,YACtBvC,QAASgS,GAAgBjM,KAAKD,KAAKmM,WAAa,CAAC,EACrDjS,IAAYgS,GACZjM,KAAK6L,qCAEb,CACAC,UAAY,EChChB,IAAIK,EAAK,EACT,MAAMC,UAA6BvM,EAAA,EAC/BC,cACI8L,SAASS,WACTrM,KAAKmM,GAAKA,GACd,CACAnX,SACI,IAAKgL,KAAKD,KAAKuM,gBACX,OACJ,MAAM,UAAEC,EAAS,eAAEC,EAAc,OAAEhI,GAAWxE,KAAKD,KAAKuM,iBAChDC,UAAWE,GAAkBzM,KAAKD,KAAK2M,qBAAuB,CAAC,EACvE,IAAK1M,KAAKD,KAAK8G,gBAAkB0F,IAAcE,EAC3C,OAEJ,MAAME,EAAgB3M,KAAKD,KAAK8G,eAAe0E,UAAU,QAASgB,EAAW,CAAE/H,OAAQA,QAAuCA,EAASxE,KAAKD,KAAKvD,WAAWgI,SACxJgI,IAAmBD,GACnBI,EAAc9T,MAAK,IAAM2T,EAAexM,KAAKmM,KAErD,CACAH,QACI,MAAM,SAAEY,GAAa5M,KAAKD,KAAKuM,iBAAmB,CAAC,EAC/CM,IACA5M,KAAK8L,QAAUc,EAAS5M,KAAKmM,IAErC,CACAL,UAAY,ECxBhB,MAAMnF,EAAa,CACf7M,UAAW,CACP+F,QAAS8L,GAEbvC,KAAM,CACFvJ,QAASuM,I,iCCFjB,SAASS,EAAc9M,EAAMoK,GACzB,MAAMlM,EAAY,WAAakM,EAAW,QAAU,SAC9C2C,EAAe,WAAa3C,EAAW,QAAU,OAYvD,OAAO,IAAA3f,GAAgBuV,EAAKjQ,QAASmO,GAXjB,CAACO,EAAOuO,KACxB,GAAmB,UAAfvO,EAAMrI,OAAoB,UAC1B,OACJ,MAAMsO,EAAQ1E,EAAKvD,WACfuD,EAAK8G,gBAAkBpC,EAAMuE,YAC7BjJ,EAAK8G,eAAe0E,UAAU,aAAcpB,GAE5C1F,EAAMqI,IACN,aAAa,IAAMrI,EAAMqI,GAActO,EAAOuO,IAClD,GAEyD,CACzD5O,SAAU4B,EAAKvD,WAAWsQ,IAElC,CACA,MAAME,UAAqBnN,EAAA,EACvBmM,QACIhM,KAAK8L,SAAU,EAAAmB,EAAA,GAAKJ,EAAc7M,KAAKD,MAAM,GAAO8M,EAAc7M,KAAKD,MAAM,GACjF,CACA+L,UAAY,E,cCxBhB,MAAMoB,WAAqBrN,EAAA,EACvBC,cACI8L,SAASS,WACTrM,KAAKmK,UAAW,CACpB,CACAgD,UACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBpN,KAAKD,KAAKjQ,QAAQud,QAAQ,iBAC/C,CACA,MAAOlc,GACHic,GAAiB,CACrB,CACKA,GAAmBpN,KAAKD,KAAK8G,iBAElC7G,KAAKD,KAAK8G,eAAe0E,UAAU,cAAc,GACjDvL,KAAKmK,UAAW,EACpB,CACAmD,SACStN,KAAKmK,UAAanK,KAAKD,KAAK8G,iBAEjC7G,KAAKD,KAAK8G,eAAe0E,UAAU,cAAc,GACjDvL,KAAKmK,UAAW,EACpB,CACA6B,QACIhM,KAAK8L,SAAU,EAAAmB,EAAA,IAAK,OAAYjN,KAAKD,KAAKjQ,QAAS,SAAS,IAAMkQ,KAAKmN,aAAY,OAAYnN,KAAKD,KAAKjQ,QAAS,QAAQ,IAAMkQ,KAAKsN,WACzI,CACAxB,UAAY,E,eC9BhB,MAAMyB,GAAgB,CAACC,EAAQtF,MACtBA,IAGIsF,IAAWtF,GAITqF,GAAcC,EAAQtF,EAAMuF,gB,eCL3C,SAASC,GAA0BxO,EAAMhB,GACrC,IAAKA,EACD,OACJ,MAAMyP,EAAwB,IAAIC,aAAa,UAAY1O,GAC3DhB,EAAQyP,GAAuB,QAAiBA,GACpD,CACA,MAAME,WAAqBhO,EAAA,EACvBC,cACI8L,SAASS,WACTrM,KAAK8N,qBAAuBjhB,GAAA,EAC5BmT,KAAK+N,mBAAqBlhB,GAAA,EAC1BmT,KAAKgO,0BAA4BnhB,GAAA,EACjCmT,KAAKiO,kBAAoB,CAACC,EAAYC,KAElC,GADAnO,KAAK+N,qBACD/N,KAAKoO,WACL,OACJ,MAAM3J,EAAQzE,KAAKD,KAAKvD,WAelB6R,GAA0B,IAAA7jB,GAAgBwc,OAAQ,aAdhC,CAACsH,EAAUC,KAC/B,IAAKvO,KAAKwO,gBACN,OACJ,MAAM,MAAEC,EAAK,YAAEC,GAAgB1O,KAAKD,KAAKvD,WACzC,aAAa,KAKR+Q,GAAcvN,KAAKD,KAAKjQ,QAASwe,EAAS9b,QAErCic,GAASA,EAAMH,EAAUC,GADzBG,GAAeA,EAAYJ,EAAUC,EACJ,GACzC,GAEgF,CAAEpQ,UAAWsG,EAAMgK,OAAShK,EAAmB,eAC/HkK,GAA8B,IAAAnkB,GAAgBwc,OAAQ,iBAAiB,CAAC4H,EAAaC,IAAe7O,KAAK8O,YAAYF,EAAaC,IAAa,CAAE1Q,UAAWsG,EAAMiK,aAAejK,EAAuB,mBAC9MzE,KAAK+N,oBAAqB,EAAAd,EAAA,GAAKoB,EAAyBM,GACxD3O,KAAK+O,WAAWb,EAAYC,EAAU,EAE1CnO,KAAKgP,qBAAuB,KACxB,MAmBMC,GAAwB,OAAYjP,KAAKD,KAAKjQ,QAAS,WAnBtCof,IACnB,GAAyB,UAArBA,EAAaljB,KAAmBgU,KAAKoO,WACrC,OAWJpO,KAAK+N,qBACL/N,KAAK+N,oBAAqB,OAAY/N,KAAKD,KAAKjQ,QAAS,SAXpCqf,IACM,UAAnBA,EAAWnjB,KAAoBgU,KAAKwO,iBAExCd,GAA0B,MAAM,CAAClP,EAAOuO,KACpC,MAAM,MAAE0B,GAAUzO,KAAKD,KAAKvD,WACxBiS,GACA,aAAa,IAAMA,EAAMjQ,EAAOuO,IACpC,GACF,IAINW,GAA0B,QAAQ,CAAClP,EAAOuO,KACtC/M,KAAK+O,WAAWvQ,EAAOuO,EAAK,GAC9B,IAQAqC,GAAqB,OAAYpP,KAAKD,KAAKjQ,QAAS,QALvC,KACVkQ,KAAKoO,YAEVV,GAA0B,UAAU,CAACkB,EAAaC,IAAe7O,KAAK8O,YAAYF,EAAaC,IAAY,IAG/G7O,KAAKgO,2BAA4B,EAAAf,EAAA,GAAKgC,EAAuBG,EAAmB,CAExF,CACAL,WAAWvQ,EAAOuO,GACd/M,KAAKoO,YAAa,EAClB,MAAM,WAAEiB,EAAU,SAAEpG,GAAajJ,KAAKD,KAAKvD,WAIvCyM,GAAYjJ,KAAKD,KAAK8G,gBACtB7G,KAAKD,KAAK8G,eAAe0E,UAAU,YAAY,GAE/C8D,GACA,aAAa,IAAMA,EAAW7Q,EAAOuO,IAE7C,CACAyB,gBACIxO,KAAK+N,qBACL/N,KAAKoO,YAAa,EAKlB,OAJcpO,KAAKD,KAAKvD,WACdyM,UAAYjJ,KAAKD,KAAK8G,gBAC5B7G,KAAKD,KAAK8G,eAAe0E,UAAU,YAAY,KAE3C,SACZ,CACAuD,YAAYtQ,EAAOuO,GACf,IAAK/M,KAAKwO,gBACN,OACJ,MAAM,YAAEE,GAAgB1O,KAAKD,KAAKvD,WAC9BkS,GACA,aAAa,IAAMA,EAAYlQ,EAAOuO,IAE9C,CACAf,QACI,MAAMvH,EAAQzE,KAAKD,KAAKvD,WAClB8S,GAAwB,IAAA9kB,GAAgBwV,KAAKD,KAAKjQ,QAAS,cAAekQ,KAAKiO,kBAAmB,CAAE9P,UAAWsG,EAAM4K,YAAc5K,EAAsB,kBACzJ8K,GAAsB,OAAYvP,KAAKD,KAAKjQ,QAAS,QAASkQ,KAAKgP,sBACzEhP,KAAK8N,sBAAuB,EAAAb,EAAA,GAAKqC,EAAuBC,EAC5D,CACAzD,UACI9L,KAAK8N,uBACL9N,KAAK+N,qBACL/N,KAAKgO,2BACT,EC/GJ,MAAMwB,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAwBC,IAC1B,MAAMC,EAAWL,GAAkB3T,IAAI+T,EAAMpd,QAC7Cqd,GAAYA,EAASD,EAAM,EAEzBE,GAA4BC,IAC9BA,EAAQrL,QAAQiL,GAAqB,EAqBzC,SAASK,GAAoBjW,EAAS9H,EAAS4d,GAC3C,MAAMI,EApBV,UAAkC,KAAEhO,KAAShQ,IACzC,MAAMie,EAAajO,GAAQkO,SAItBT,GAAUjW,IAAIyW,IACfR,GAAUhV,IAAIwV,EAAY,CAAC,GAE/B,MAAME,EAAgBV,GAAU7T,IAAIqU,GAC9BlkB,EAAMqkB,KAAKC,UAAUre,GAQ3B,OAHKme,EAAcpkB,KACfokB,EAAcpkB,GAAO,IAAIukB,qBAAqBT,GAA0B,CAAE7N,UAAShQ,KAEhFme,EAAcpkB,EACzB,CAEsCwkB,CAAyBve,GAG3D,OAFAud,GAAkB9U,IAAIX,EAAS8V,GAC/BI,EAA0BQ,QAAQ1W,GAC3B,KACHyV,GAAkBxE,OAAOjR,GACzBkW,EAA0BS,UAAU3W,EAAQ,CAEpD,CC3CA,MAAM4W,GAAiB,CACnBxe,KAAM,EACNmV,IAAK,GAET,MAAMsJ,WAAsB/Q,EAAA,EACxBC,cACI8L,SAASS,WACTrM,KAAK6Q,gBAAiB,EACtB7Q,KAAK8Q,UAAW,CACpB,CACAC,gBACI/Q,KAAK8L,UACL,MAAM,SAAEkF,EAAW,CAAC,GAAMhR,KAAKD,KAAKvD,YAC9B,KAAEyF,EAAMgP,OAAQC,EAAU,OAAEC,EAAS,OAAM,KAAEC,GAASJ,EACtD/e,EAAU,CACZgQ,KAAMA,EAAOA,EAAKnS,aAAU7D,EAC5BilB,aACAG,UAA6B,iBAAXF,EAAsBA,EAASR,GAAeQ,IA+BpE,OAAOnB,GAAoBhQ,KAAKD,KAAKjQ,QAASmC,GA7BhB2d,IAC1B,MAAM,eAAE0B,GAAmB1B,EAI3B,GAAI5P,KAAK8Q,WAAaQ,EAClB,OAMJ,GALAtR,KAAK8Q,SAAWQ,EAKZF,IAASE,GAAkBtR,KAAK6Q,eAChC,OAEKS,IACLtR,KAAK6Q,gBAAiB,GAEtB7Q,KAAKD,KAAK8G,gBACV7G,KAAKD,KAAK8G,eAAe0E,UAAU,cAAe+F,GAMtD,MAAM,gBAAEC,EAAe,gBAAEC,GAAoBxR,KAAKD,KAAKvD,WACjDqT,EAAWyB,EAAiBC,EAAkBC,EACpD3B,GAAYA,EAASD,EAAM,GAGnC,CACA5D,QACIhM,KAAK+Q,eACT,CACA/b,SACI,GAAoC,oBAAzBub,qBACP,OACJ,MAAM,MAAE9L,EAAK,UAAEyH,GAAclM,KAAKD,KACR,CAAC,SAAU,SAAU,QAAQ5N,KAO/D,UAAkC,SAAE6e,EAAW,CAAC,IAAOA,SAAUS,EAAe,CAAC,GAAM,CAAC,GACpF,OAAQvS,GAAS8R,EAAS9R,KAAUuS,EAAavS,EACrD,CAToEwS,CAAyBjN,EAAOyH,KAExFlM,KAAK+Q,eAEb,CACAjF,UAAY,EC5DhB,MAAM6F,GAAoB,CACtBC,OAAQ,CACJ/R,QAAS+Q,IAEbiB,IAAK,CACDhS,QAASgO,IAEbiE,MAAO,CACHjS,QAASqN,IAEb6E,MAAO,CACHlS,QAASmN,I,+ECJjB,MAAMgF,GAAwB,uDAQ9B,MAAMC,GAAW,EACjB,SAASC,GAAiBpiB,EAASiK,EAASoY,EAAQ,IAChD,QAAUA,GAASF,GAAU,yDAAyDniB,yDACtF,MAAOsiB,EAAOC,GAVlB,SAA0BviB,GACtB,MAAMwiB,EAAQN,GAAsBO,KAAKziB,GACzC,IAAKwiB,EACD,MAAO,CAAC,GACZ,MAAO,CAAEF,EAAOC,GAAYC,EAC5B,MAAO,CAACF,EAAOC,EACnB,CAI8BG,CAAiB1iB,GAE3C,IAAKsiB,EACD,OAEJ,MAAMpM,EAAWgB,OAAOyL,iBAAiB1Y,GAAS2Y,iBAAiBN,GACnE,OAAIpM,EACOA,EAAS2M,QAEX,SAAmBN,GAEjBH,GAAiBG,EAAUtY,EAASoY,EAAQ,GAG5CE,CAEf,C,eC/BA,MAAMO,GAAiB,IAAItZ,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEEuZ,GAAmB7mB,GAAQ4mB,GAAenZ,IAAIzN,GAI9C8mB,GAAiB1e,GAAMA,IAAM,MAAUA,IAAM,EAAA8Q,GAC7C6N,GAAmB,CAACC,EAAQC,IAAQC,WAAWF,EAAOG,MAAM,MAAMF,IAClEG,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAASrY,gBACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAMsY,EAAWtY,EAAUoX,MAAM,sBACjC,GAAIkB,EACA,OAAOT,GAAiBS,EAAS,GAAIF,GAEpC,CACD,MAAMN,EAAS9X,EAAUoX,MAAM,oBAC/B,OAAIU,EACOD,GAAiBC,EAAO,GAAIK,GAG5B,CAEf,GAEEI,GAAgB,IAAIna,IAAI,CAAC,IAAK,IAAK,MACnCoa,GAAgCxY,EAAA,UAA2BlP,IAASynB,GAAcha,IAAIzN,KAe5F,MAAM2nB,GAAmB,CAErBC,MAAO,EAAG5mB,MAAO6mB,cAAc,IAAKC,eAAe,OAAU9mB,EAAEgD,IAAMhD,EAAEuG,IAAM2f,WAAWW,GAAeX,WAAWY,GAClHC,OAAQ,EAAGpV,MAAOqV,aAAa,IAAKC,gBAAgB,OAAUtV,EAAE3O,IAAM2O,EAAEpL,IAAM2f,WAAWc,GAAcd,WAAWe,GAClH9T,IAAK,CAACoT,GAASpT,SAAU+S,WAAW/S,GACpCC,KAAM,CAACmT,GAASnT,UAAW8S,WAAW9S,GACtCE,OAAQ,EAAG3B,MAAOwB,SAAU+S,WAAW/S,IAAQxB,EAAE3O,IAAM2O,EAAEpL,KACzD8M,MAAO,EAAGrT,MAAOoT,UAAW8S,WAAW9S,IAASpT,EAAEgD,IAAMhD,EAAEuG,KAE1DvG,EAAGomB,GAAuB,EAAG,IAC7BzU,EAAGyU,GAAuB,EAAG,KA+B3Bc,GAAmC,CAAC3P,EAAe/R,EAAQD,EAAS,CAAC,EAAG0T,EAAgB,CAAC,KAC3FzT,EAAS,IAAKA,GACdyT,EAAgB,IAAKA,GACrB,MAAMkO,EAAuB1oB,OAAOyG,KAAKM,GAAQ4hB,OAAOvB,IAGxD,IAAIwB,EAAyB,GACzBC,GAAsC,EAC1C,MAAMC,EAAuB,GAkF7B,GAjFAJ,EAAqBzP,SAAS1Y,IAC1B,MAAMgD,EAAQuV,EAAcsB,SAAS7Z,GACrC,IAAKuY,EAAcqB,SAAS5Z,GACxB,OACJ,IAAI4P,EAAOrJ,EAAOvG,GACdwoB,EAAWlP,EAAuB1J,GACtC,MAAM6Y,EAAKjiB,EAAOxG,GAClB,IAAI0oB,EAKJ,IAAI,OAAkBD,GAAK,CACvB,MAAME,EAAeF,EAAGrmB,OAClBwmB,EAAsB,OAAVH,EAAG,GAAc,EAAI,EACvC7Y,EAAO6Y,EAAGG,GACVJ,EAAWlP,EAAuB1J,GAClC,IAAK,IAAIvO,EAAIunB,EAAWvnB,EAAIsnB,GAKV,OAAVF,EAAGpnB,GAL+BA,IAOjCqnB,GAMD,QAAUpP,EAAuBmP,EAAGpnB,MAAQqnB,EAAQ,2CALpDA,EAASpP,EAAuBmP,EAAGpnB,KACnC,QAAUqnB,IAAWF,GAChB1B,GAAc0B,IAAa1B,GAAc4B,GAAU,gEAMpE,MAEIA,EAASpP,EAAuBmP,GAEpC,GAAID,IAAaE,EAGb,GAAI5B,GAAc0B,IAAa1B,GAAc4B,GAAS,CAClD,MAAM5kB,EAAUd,EAAM6M,MACC,iBAAZ/L,GACPd,EAAM0L,IAAIwY,WAAWpjB,IAEP,iBAAP2kB,EACPjiB,EAAOxG,GAAOknB,WAAWuB,GAEpBxqB,MAAMC,QAAQuqB,IAAOC,IAAW,EAAAxP,KACrC1S,EAAOxG,GAAOyoB,EAAGnpB,IAAI4nB,YAE7B,MACUsB,aAA2C,EAASA,EAAStZ,aAClEwZ,aAAuC,EAASA,EAAOxZ,aAC9C,IAATU,GAAqB,IAAP6Y,GAGF,IAAT7Y,EACA5M,EAAM0L,IAAIga,EAAOxZ,UAAUU,IAG3BpJ,EAAOxG,GAAOwoB,EAAStZ,UAAUuZ,IAMhCH,IACDD,EApIpB,SAAyC9P,GACrC,MAAMsQ,EAAoB,GAW1B,OAVAnB,GAA8BhP,SAAS1Y,IACnC,MAAMgD,EAAQuV,EAAcsB,SAAS7Z,QACvBC,IAAV+C,IACA6lB,EAAkBhb,KAAK,CAAC7N,EAAKgD,EAAM6M,QACnC7M,EAAM0L,IAAI1O,EAAImP,WAAW,SAAW,EAAI,GAC5C,IAGA0Z,EAAkBzmB,QAClBmW,EAAcuQ,SACXD,CACX,CAwHwBE,CAAgCxQ,GACpC+P,GAAsC,GAE1CC,EAAqB1a,KAAK7N,GAC1Bia,EAAcja,QACaC,IAAvBga,EAAcja,GACRia,EAAcja,GACdwG,EAAOxG,GACjBgD,EAAMgmB,KAAKP,GAEnB,IAEAF,EAAqBnmB,OAAQ,CAC7B,MAAM6mB,EAAUV,EAAqBW,QAAQ,WAAa,EACpDlO,OAAOmO,YACP,KACAC,EA3HmB,EAAC5iB,EAAQ+R,EAAe8Q,KACrD,MAAMC,EAAa/Q,EAAcV,qBAC3B9J,EAAUwK,EAAczU,QACxBylB,EAAuB9C,iBAAiB1Y,IACxC,QAAE+H,GAAYyT,EACdhjB,EAAS,CAAC,EAGA,SAAZuP,GACAyC,EAAciR,eAAe,UAAWhjB,EAAOsP,SAAW,SAK9DuT,EAAY3Q,SAAS1Y,IACjBuG,EAAOvG,GAAO2nB,GAAiB3nB,GAAKspB,EAAYC,EAAqB,IAGzEhR,EAAcuQ,SACd,MAAMW,EAAalR,EAAcV,qBAQjC,OAPAwR,EAAY3Q,SAAS1Y,IAGjB,MAAMgD,EAAQuV,EAAcsB,SAAS7Z,GACrCgD,GAASA,EAAMgmB,KAAKziB,EAAOvG,IAC3BwG,EAAOxG,GAAO2nB,GAAiB3nB,GAAKypB,EAAYF,EAAqB,IAElE/iB,CAAM,EAgGekjB,CAAyBljB,EAAQ+R,EAAegQ,GAaxE,OAXIF,EAAuBjmB,QACvBimB,EAAuB3P,SAAQ,EAAE1Y,EAAKgD,MAClCuV,EAAcsB,SAAS7Z,GAAK0O,IAAI1L,EAAM,IAI9CuV,EAAcuQ,SAEV,MAAyB,OAAZG,GACbjO,OAAO2O,SAAS,CAAExV,IAAK8U,IAEpB,CAAEziB,OAAQ4iB,EAAiBnP,gBACtC,CAEI,MAAO,CAAEzT,SAAQyT,gBACrB,EASJ,SAAS2P,GAAerR,EAAe/R,EAAQD,EAAQ0T,GACnD,MAxMqB,CAACzT,GACf/G,OAAOyG,KAAKM,GAAQL,KAAK0gB,IAuMzBgD,CAAiBrjB,GAClB0hB,GAAiC3P,EAAe/R,EAAQD,EAAQ0T,GAChE,CAAEzT,SAAQyT,gBACpB,CCvNA,MAAM6P,GAAkB,CAACvR,EAAe/R,EAAQD,EAAQ0T,KACpD,MAAMD,EFqCV,SAA6BzB,MAAoB/R,GAAUyT,GACvD,MAAMlM,EAAUwK,EAAczU,QAC9B,KAAMiK,aAAmBnO,SACrB,MAAO,CAAE4G,SAAQyT,iBAGjBA,IACAA,EAAgB,IAAKA,IAGzB1B,EAAchV,OAAOmV,SAAS1V,IAC1B,MAAMc,EAAUd,EAAM6M,MACtB,KAAK,SAAmB/L,GACpB,OACJ,MAAMkW,EAAWkM,GAAiBpiB,EAASiK,GACvCiM,GACAhX,EAAM0L,IAAIsL,EAAS,IAI3B,IAAK,MAAMha,KAAOwG,EAAQ,CACtB,MAAM1C,EAAU0C,EAAOxG,GACvB,KAAK,SAAmB8D,GACpB,SACJ,MAAMkW,EAAWkM,GAAiBpiB,EAASiK,GACtCiM,IAGLxT,EAAOxG,GAAOga,EACTC,IACDA,EAAgB,CAAC,QAIMha,IAAvBga,EAAcja,KACdia,EAAcja,GAAO8D,GAE7B,CACA,MAAO,CAAE0C,SAAQyT,gBACrB,CE5EqB8P,CAAoBxR,EAAe/R,EAAQyT,GAG5D,OAAO2P,GAAerR,EAFtB/R,EAASwT,EAASxT,OAE2BD,EAD7C0T,EAAgBD,EAASC,cAC0C,E,0BCVvE,MAAM+P,GAAuB,CAAElmB,QAAS,MAClCmmB,GAA2B,CAAEnmB,SAAS,G,yCCF5C,MAAMomB,GAAqB,IAAIzG,QCoBzB0G,GAAe1qB,OAAOyG,KAAK,MAC3BkkB,GAAcD,GAAa/nB,OAC3BioB,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkB,WAKxB,MAAMC,GACFzW,aAAY,OAAE0N,EAAM,MAAE/I,EAAK,gBAAE6H,EAAe,oBAAEkK,EAAmB,YAAEC,GAAgBxkB,EAAU,CAAC,GAK1F+N,KAAKlQ,QAAU,KAIfkQ,KAAK9C,SAAW,IAAI5D,IAIpB0G,KAAK0W,eAAgB,EACrB1W,KAAK2W,uBAAwB,EAQ7B3W,KAAKoH,mBAAqB,KAM1BpH,KAAKzQ,OAAS,IAAIqnB,IAIlB5W,KAAK7C,SAAW,CAAC,EAKjB6C,KAAK6W,mBAAqB,IAAID,IAM9B5W,KAAK8W,iBAAmB,CAAC,EAIzB9W,KAAK+W,OAAS,CAAC,EAMf/W,KAAKgX,uBAAyB,CAAC,EAC/BhX,KAAKiX,aAAe,IAAMjX,KAAKmI,OAAO,SAAUnI,KAAKmC,cACrDnC,KAAK8U,OAAS,KACL9U,KAAKlQ,UAEVkQ,KAAKkX,eACLlX,KAAKmX,eAAenX,KAAKlQ,QAASkQ,KAAKoX,YAAapX,KAAKyE,MAAM5C,MAAO7B,KAAKqX,YAAW,EAE1FrX,KAAKsX,eAAiB,IAAM,YAAatX,KAAK8U,QAAQ,GAAO,GAC7D,MAAM,aAAE3S,EAAY,YAAEiV,GAAgBX,EACtCzW,KAAKmC,aAAeA,EACpBnC,KAAKuX,WAAa,IAAKpV,GACvBnC,KAAKwX,cAAgB/S,EAAM6G,QAAU,IAAKnJ,GAAiB,CAAC,EAC5DnC,KAAKoX,YAAcA,EACnBpX,KAAKwN,OAASA,EACdxN,KAAKyE,MAAQA,EACbzE,KAAKsM,gBAAkBA,EACvBtM,KAAKmS,MAAQ3E,EAASA,EAAO2E,MAAQ,EAAI,EACzCnS,KAAKwW,oBAAsBA,EAC3BxW,KAAK/N,QAAUA,EACf+N,KAAK2W,uBAAwB,QAAsBlS,GACnDzE,KAAK0W,eAAgB,QAAcjS,GAC/BzE,KAAK0W,gBACL1W,KAAK2H,gBAAkB,IAAIrO,KAE/B0G,KAAKqK,uBAAyBjgB,QAAQojB,GAAUA,EAAO1d,SAWvD,MAAM,WAAE4W,KAAe+Q,GAAwBzX,KAAK0X,4BAA4BjT,EAAO,CAAC,GACxF,IAAK,MAAMzY,KAAOyrB,EAAqB,CACnC,MAAMzoB,EAAQyoB,EAAoBzrB,QACRC,IAAtBkW,EAAanW,KAAsB,IAAAqB,GAAc2B,KACjDA,EAAM0L,IAAIyH,EAAanW,IAAM,GACzB6Y,EAAwB6B,IACxBA,EAAW5B,IAAI9Y,GAG3B,CACJ,CAQA0rB,4BAA4BC,EAAQC,GAChC,MAAO,CAAC,CACZ,CACA5L,MAAMpK,GACF5B,KAAKlQ,QAAU8R,EACfsU,GAAmBxb,IAAIkH,EAAU5B,MAC7BA,KAAKqX,aAAerX,KAAKqX,WAAWzV,UACpC5B,KAAKqX,WAAWrL,MAAMpK,GAEtB5B,KAAKwN,QAAUxN,KAAK0W,gBAAkB1W,KAAK2W,wBAC3C3W,KAAK6X,sBAAwB7X,KAAKwN,OAAOsK,gBAAgB9X,OAE7DA,KAAKzQ,OAAOmV,SAAQ,CAAC1V,EAAOhD,IAAQgU,KAAK+X,kBAAkB/rB,EAAKgD,KAC3DinB,GAAyBnmB,SC1JtC,WAEI,GADAmmB,GAAyBnmB,SAAU,EAC9B,KAEL,GAAIkX,OAAOgR,WAAY,CACnB,MAAMC,EAAmBjR,OAAOgR,WAAW,4BACrCE,EAA8B,IAAOlC,GAAqBlmB,QAAUmoB,EAAiB5K,QAC3F4K,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIlC,GAAqBlmB,SAAU,CAEvC,CD8IYsoB,GAEJpY,KAAKoH,mBAC4B,UAA7BpH,KAAKwW,sBAE8B,WAA7BxW,KAAKwW,qBAEDR,GAAqBlmB,SAI/BkQ,KAAKwN,QACLxN,KAAKwN,OAAOtQ,SAAS4H,IAAI9E,MAC7BA,KAAKhL,OAAOgL,KAAKyE,MAAOzE,KAAKsM,gBACjC,CACAR,UACIoK,GAAA,OAA0BlW,KAAKlQ,SAC/BkQ,KAAKqX,YAAcrX,KAAKqX,WAAWvL,WACnC,QAAY9L,KAAKiX,eACjB,QAAYjX,KAAK8U,QACjB9U,KAAK6W,mBAAmBnS,SAAS2C,GAAWA,MAC5CrH,KAAK6X,uBAAyB7X,KAAK6X,wBACnC7X,KAAKwN,QAAUxN,KAAKwN,OAAOtQ,SAAS8N,OAAOhL,MAC3C,IAAK,MAAMhU,KAAOgU,KAAK+W,OACnB/W,KAAK+W,OAAO/qB,GAAKqsB,QAErB,IAAK,MAAMrsB,KAAOgU,KAAK7C,SACnB6C,KAAK7C,SAASnR,GAAK8f,UAEvB9L,KAAKlQ,QAAU,IACnB,CACAioB,kBAAkB/rB,EAAKgD,GACnB,MAAMspB,EAAmBpd,EAAA,MAAmBlP,GACtCusB,EAAiBvpB,EAAMwpB,GAAG,UAAWC,IACvCzY,KAAKmC,aAAanW,GAAOysB,EACzBzY,KAAKyE,MAAM/N,UACP,YAAasJ,KAAKiX,cAAc,GAAO,GACvCqB,GAAoBtY,KAAKqX,aACzBrX,KAAKqX,WAAWqB,kBAAmB,EACvC,IAEEC,EAAwB3pB,EAAMwpB,GAAG,gBAAiBxY,KAAKsX,gBAC7DtX,KAAK6W,mBAAmBnc,IAAI1O,GAAK,KAC7BusB,IACAI,GAAuB,GAE/B,CACApQ,iBAAiBqQ,GAIb,OAAK5Y,KAAKlQ,SACLkQ,KAAK6Y,0BACN7Y,KAAK7J,OAASyiB,EAAMziB,KAGjB6J,KAAK6Y,yBAAyB7Y,KAAKlQ,QAAS8oB,EAAM9oB,SAF9C,CAGf,CACAgpB,cAAa,SAAE5b,KAAa6b,GAAiBC,EAAUC,EAAmBC,GACtE,IAAIC,EACAC,EAaJ,IAAK,IAAI/rB,EAAI,EAAGA,EAAI+oB,GAAa/oB,IAAK,CAClC,MAAM6R,EAAOiX,GAAa9oB,IACpB,UAAEgsB,EAAWxZ,QAASyZ,EAAkB,eAAEC,EAAgBH,cAAeI,GAA4B,KAAmBta,GAC1Hqa,IACAJ,EAA4BI,GAC5BF,EAAUN,MACL/Y,KAAK7C,SAAS+B,IAASoa,IACxBtZ,KAAK7C,SAAS+B,GAAQ,IAAIoa,EAAmBtZ,OAE7CwZ,IACAJ,EAAgBI,GAG5B,CACA,IAAKxZ,KAAKqX,YAAc8B,EAA2B,CAC/CnZ,KAAKqX,WAAa,IAAI8B,EAA0BnZ,KAAKmC,aAAcnC,KAAKwN,QAAUxN,KAAKwN,OAAO6J,YAC9F,MAAM,SAAEoC,EAAQ,OAAEC,EAAM,KAAEla,EAAI,gBAAEma,EAAe,aAAE5X,EAAY,WAAE6X,GAAgBb,EAC/E/Y,KAAKqX,WAAWwC,WAAW,CACvBJ,WACAC,SACAI,oBAAqB1vB,QAAQoV,IACxBma,IAAmB,QAAYA,GACpCpV,cAAevE,KACfsX,eAAgB,IAAMtX,KAAKsX,iBAQ3ByC,cAAiC,iBAAXL,EAAsBA,EAAS,OACrDM,uBAAwBd,EACxBnX,eACA6X,cAER,CACA,OAAOR,CACX,CACAa,iBACI,IAAK,MAAMjuB,KAAOgU,KAAK7C,SAAU,CAC7B,MAAM+c,EAAUla,KAAK7C,SAASnR,GAC1BkuB,EAAQja,UACRia,EAAQllB,OAAOgL,KAAKyE,MAAOzE,KAAKkM,YAGhCgO,EAAQlO,QACRkO,EAAQja,WAAY,EAE5B,CACJ,CACAiX,eACIlX,KAAKma,MAAMna,KAAKoX,YAAapX,KAAKmC,aAAcnC,KAAK/N,QAAS+N,KAAKyE,MACvE,CAMAZ,qBACI,OAAO7D,KAAKlQ,QACNkQ,KAAKoa,2BAA2Bpa,KAAKlQ,QAASkQ,KAAKyE,QACnD,UACV,CACA4V,eAAeruB,GACX,OAAOgU,KAAKmC,aAAanW,EAC7B,CACAwpB,eAAexpB,EAAKgD,GAChBgR,KAAKmC,aAAanW,GAAOgD,CAC7B,CAQAkX,qBAAqB1T,EAAQ8nB,GAAY,GACrC,OAAOta,KAAKua,iCAAiC/nB,EAAQwN,KAAKyE,MAAO6V,EACrE,CAKAtlB,OAAOyP,EAAO6H,IACN7H,EAAM+V,mBAAqBxa,KAAKyE,MAAM+V,oBACtCxa,KAAKsX,iBAETtX,KAAKkM,UAAYlM,KAAKyE,MACtBzE,KAAKyE,MAAQA,EACbzE,KAAK0M,oBAAsB1M,KAAKsM,gBAChCtM,KAAKsM,gBAAkBA,EAIvB,IAAK,IAAIjf,EAAI,EAAGA,EAAIgpB,GAAkBjoB,OAAQf,IAAK,CAC/C,MAAMrB,EAAMqqB,GAAkBhpB,GAC1B2S,KAAKgX,uBAAuBhrB,KAC5BgU,KAAKgX,uBAAuBhrB,YACrBgU,KAAKgX,uBAAuBhrB,IAEvC,MAAMyuB,EAAWhW,EAAM,KAAOzY,GAC1ByuB,IACAza,KAAKgX,uBAAuBhrB,GAAOgU,KAAKwY,GAAGxsB,EAAKyuB,GAExD,CACAza,KAAK8W,iBE5Ub,SAAqC/c,EAASrK,EAAM0U,GAChD,MAAM,WAAEsC,GAAehX,EACvB,IAAK,MAAM1D,KAAO0D,EAAM,CACpB,MAAMgrB,EAAYhrB,EAAK1D,GACjB2uB,EAAYvW,EAAKpY,GACvB,IAAI,IAAAqB,GAAcqtB,GAKd3gB,EAAQ+L,SAAS9Z,EAAK0uB,GAClB7V,EAAwB6B,IACxBA,EAAW5B,IAAI9Y,QAUlB,IAAI,IAAAqB,GAAcstB,GAKnB5gB,EAAQ+L,SAAS9Z,GAAK,OAAY0uB,EAAW,CAAEpgB,MAAOP,KAClD8K,EAAwB6B,IACxBA,EAAWW,OAAOrb,QAGrB,GAAI2uB,IAAcD,EAMnB,GAAI3gB,EAAQ6L,SAAS5Z,GAAM,CACvB,MAAM4uB,EAAgB7gB,EAAQ8L,SAAS7Z,IAEtC4uB,EAAc1T,aAAe0T,EAAclgB,IAAIggB,EACpD,KACK,CACD,MAAMjC,EAAc1e,EAAQsgB,eAAeruB,GAC3C+N,EAAQ+L,SAAS9Z,GAAK,YAA4BC,IAAhBwsB,EAA4BA,EAAciC,EAAW,CAAEpgB,MAAOP,IACpG,CAER,CAEA,IAAK,MAAM/N,KAAOoY,OACInY,IAAdyD,EAAK1D,IACL+N,EAAQ8gB,YAAY7uB,GAE5B,OAAO0D,CACX,CFqRgCorB,CAA4B9a,KAAMA,KAAK0X,4BAA4BjT,EAAOzE,KAAKkM,WAAYlM,KAAK8W,kBACpH9W,KAAK+a,wBACL/a,KAAK+a,wBAEb,CACAve,WACI,OAAOwD,KAAKyE,KAChB,CAIAuW,WAAW9b,GACP,OAAOc,KAAKyE,MAAMwW,SAAWjb,KAAKyE,MAAMwW,SAAS/b,QAAQjT,CAC7D,CAIA+O,uBACI,OAAOgF,KAAKyE,MAAMjJ,UACtB,CACA0f,wBACI,OAAOlb,KAAKyE,MAAMR,kBACtB,CACAkX,wBACI,OAAOnb,KAAK0W,cACN1W,KACAA,KAAKwN,OACDxN,KAAKwN,OAAO2N,6BACZlvB,CACd,CACA0d,kBAAkByR,GAAgB,GAC9B,GAAIA,EACA,OAAOpb,KAAKwN,OAASxN,KAAKwN,OAAO7D,yBAAsB1d,EAE3D,IAAK+T,KAAK2W,sBAAuB,CAC7B,MAAMjN,EAAU1J,KAAKwN,QACfxN,KAAKwN,OAAO7D,qBACZ,CAAC,EAIP,YAH2B1d,IAAvB+T,KAAKyE,MAAM6G,UACX5B,EAAQ4B,QAAUtL,KAAKyE,MAAM6G,SAE1B5B,CACX,CACA,MAAMA,EAAU,CAAC,EACjB,IAAK,IAAIrc,EAAI,EAAGA,EAAIipB,GAAiBjpB,IAAK,CACtC,MAAM6R,EAAO,IAAa7R,GACpB2c,EAAOhK,KAAKyE,MAAMvF,KACpB,OAAe8K,KAAkB,IAATA,KACxBN,EAAQxK,GAAQ8K,EAExB,CACA,OAAON,CACX,CAIAoO,gBAAgB5P,GACZ,MAAMmT,EAAqBrb,KAAKmb,wBAChC,GAAIE,EAGA,OAFAA,EAAmB1T,iBACf0T,EAAmB1T,gBAAgB7C,IAAIoD,GACpC,IAAMmT,EAAmB1T,gBAAgBqD,OAAO9C,EAE/D,CAIApC,SAAS9Z,EAAKgD,GAENA,IAAUgR,KAAKzQ,OAAOsM,IAAI7P,KAC1BgU,KAAK6a,YAAY7uB,GACjBgU,KAAK+X,kBAAkB/rB,EAAKgD,IAEhCgR,KAAKzQ,OAAOmL,IAAI1O,EAAKgD,GACrBgR,KAAKmC,aAAanW,GAAOgD,EAAM6M,KACnC,CAIAgf,YAAY7uB,GACRgU,KAAKzQ,OAAOyb,OAAOhf,GACnB,MAAMsvB,EAActb,KAAK6W,mBAAmBhb,IAAI7P,GAC5CsvB,IACAA,IACAtb,KAAK6W,mBAAmB7L,OAAOhf,WAE5BgU,KAAKmC,aAAanW,GACzBgU,KAAKub,2BAA2BvvB,EAAKgU,KAAKoX,YAC9C,CAIAxR,SAAS5Z,GACL,OAAOgU,KAAKzQ,OAAOkK,IAAIzN,EAC3B,CACA6Z,SAAS7Z,EAAKwvB,GACV,GAAIxb,KAAKyE,MAAMlV,QAAUyQ,KAAKyE,MAAMlV,OAAOvD,GACvC,OAAOgU,KAAKyE,MAAMlV,OAAOvD,GAE7B,IAAIgD,EAAQgR,KAAKzQ,OAAOsM,IAAI7P,GAK5B,YAJcC,IAAV+C,QAAwC/C,IAAjBuvB,IACvBxsB,GAAQ,OAAYwsB,EAAc,CAAElhB,MAAO0F,OAC3CA,KAAK8F,SAAS9Z,EAAKgD,IAEhBA,CACX,CAMAysB,UAAUzvB,GACN,YAAkCC,IAA3B+T,KAAKmC,aAAanW,IAAuBgU,KAAKlQ,QAE/CkQ,KAAK0b,sBAAsB1b,KAAKlQ,QAAS9D,EAAKgU,KAAK/N,SADnD+N,KAAKmC,aAAanW,EAE5B,CAKA2vB,cAAc3vB,EAAKgD,GACfgR,KAAKuX,WAAWvrB,GAAOgD,CAC3B,CAKAoc,cAAcpf,GACV,IAAIwf,EACJ,MAAM,QAAEF,GAAYtL,KAAKyE,MACnBmX,EAAsC,iBAAZtQ,GAA2C,iBAAZA,EACD,QAAvDE,GAAK,OAAwBxL,KAAKyE,MAAO6G,UAA6B,IAAPE,OAAgB,EAASA,EAAGxf,QAC5FC,EAIN,GAAIqf,QAAgCrf,IAArB2vB,EACX,OAAOA,EAMX,MAAMppB,EAASwN,KAAK6b,uBAAuB7b,KAAKyE,MAAOzY,GACvD,YAAeC,IAAXuG,IAAyB,IAAAnF,GAAcmF,QAMRvG,IAA5B+T,KAAKwX,cAAcxrB,SACDC,IAArB2vB,OACE3vB,EACA+T,KAAKuX,WAAWvrB,GARXwG,CASf,CACAgmB,GAAGva,EAAW4R,GAIV,OAHK7P,KAAK+W,OAAO9Y,KACb+B,KAAK+W,OAAO9Y,GAAa,IAAI,MAE1B+B,KAAK+W,OAAO9Y,GAAW6G,IAAI+K,EACtC,CACA1H,OAAOlK,KAAc6d,GACb9b,KAAK+W,OAAO9Y,IACZ+B,KAAK+W,OAAO9Y,GAAWkK,UAAU2T,EAEzC,EGlfJ,MAAMC,WAAyBxF,GAC3BsC,yBAAyBruB,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEwxB,wBAAwBvxB,GAAS,GAAK,CACnD,CACAoxB,uBAAuBpX,EAAOzY,GAC1B,OAAOyY,EAAM5C,MAAQ4C,EAAM5C,MAAM7V,QAAOC,CAC5C,CACAsvB,2BAA2BvvB,GAAK,KAAEiwB,EAAI,MAAEpa,WAC7Boa,EAAKjwB,UACL6V,EAAM7V,EACjB,CACAuuB,kCAAiC,WAAE/e,EAAU,cAAEyK,KAAkBzT,IAAU,gBAAE0pB,GAAmBjc,GAC5F,IAAI1N,EvBqFZ,SAAmBC,EAAQgJ,EAAY+I,GACnC,MAAMhS,EAAS,CAAC,EAChB,IAAK,MAAMvG,KAAOwG,EAAQ,CACtB,MAAM2pB,EAAmBhW,EAAwBna,EAAKwP,GACtD,QAAyBvP,IAArBkwB,EACA5pB,EAAOvG,GAAOmwB,MAEb,CACD,MAAMntB,EAAQuV,EAAcsB,SAAS7Z,GACjCgD,IACAuD,EAAOvG,GAAOgD,EAAM6M,MAE5B,CACJ,CACA,OAAOtJ,CACX,CuBpGqB6pB,CAAU5pB,EAAQgJ,GAAc,CAAC,EAAGwE,MAYjD,GARIkc,IACIjW,IACAA,EAAgBiW,EAAgBjW,IAChCzT,IACAA,EAAS0pB,EAAgB1pB,IACzBD,IACAA,EAAS2pB,EAAgB3pB,KAE7B0N,EAAW,EvBoBvB,SAAiCsE,EAAe/R,EAAQD,GACpD,IAAIiZ,EAAI6Q,EACR,MAAMC,EAAe7wB,OAAOyG,KAAKM,GAAQ4hB,QAAQpoB,IAASuY,EAAcqB,SAAS5Z,KAC3EuwB,EAAeD,EAAaluB,OAClC,GAAKmuB,EAEL,IAAK,IAAIlvB,EAAI,EAAGA,EAAIkvB,EAAclvB,IAAK,CACnC,MAAMrB,EAAMswB,EAAajvB,GACnBmvB,EAAchqB,EAAOxG,GAC3B,IAAIgD,EAAQ,KAKR/E,MAAMC,QAAQsyB,KACdxtB,EAAQwtB,EAAY,IAOV,OAAVxtB,IACAA,EAAoG,QAA3FqtB,EAA4B,QAAtB7Q,EAAKjZ,EAAOvG,UAAyB,IAAPwf,EAAgBA,EAAKjH,EAAckX,UAAUzvB,UAAyB,IAAPqwB,EAAgBA,EAAK7pB,EAAOxG,IAMxIgD,UAEiB,iBAAVA,IwBjFc,iBAAiBgW,KxBkFnBhW,KAAU,OAAkBA,IAE/CA,EAAQkkB,WAAWlkB,IAEb0W,EAAc1W,IAAUqM,EAAA,OAAamhB,KAC3CxtB,GAAQ,OAAkBhD,EAAKwwB,IAEnCjY,EAAcuB,SAAS9Z,GAAK,OAAYgD,EAAO,CAAEsL,MAAOiK,UACpCtY,IAAhBsG,EAAOvG,KACPuG,EAAOvG,GAAOgD,GAEJ,OAAVA,GACAuV,EAAcoX,cAAc3vB,EAAKgD,GACzC,CACJ,CuBjEYytB,CAAwBzc,KAAMxN,EAAQD,GACtC,MAAMmqB,EAAS5G,GAAgB9V,KAAMxN,EAAQD,EAAQ0T,GACrDA,EAAgByW,EAAOzW,cACvBzT,EAASkqB,EAAOlqB,MACpB,CACA,MAAO,CACHgJ,aACAyK,mBACGzT,EAEX,EE/BJ,MAAMmqB,WAA0BZ,GAC5BL,sBAAsB9Z,EAAU5V,GAC5B,GAAIkP,EAAA,MAAmBlP,GAAM,CACzB,MAAM4wB,GAAc,QAAoB5wB,GACxC,OAAO4wB,GAAcA,EAAYC,SAAe,CACpD,CACK,CACD,MAAMC,GAVQ/iB,EAUyB6H,EATxCoF,OAAOyL,iBAAiB1Y,IAUjB/K,IAAS,SAAkBhD,GAC3B8wB,EAAcpK,iBAAiB1mB,GAC/B8wB,EAAc9wB,KAAS,EAC7B,MAAwB,iBAAVgD,EAAqBA,EAAM2jB,OAAS3jB,CACtD,CAfR,IAA0B+K,CAgBtB,CACAqgB,2BAA2BxY,GAAU,mBAAEqC,IACnC,OAAO,EAAA8Y,GAAA,GAAmBnb,EAAUqC,EACxC,CACAkW,MAAM/C,EAAajV,EAAclQ,EAASwS,IACtC,QAAgB2S,EAAajV,EAAclQ,EAASwS,EAAM+V,kBAC9D,CACA9C,4BAA4BjT,EAAOyH,GAC/B,OAAO,QAA4BzH,EAAOyH,EAC9C,CACA6O,yBACQ/a,KAAKgd,oBACLhd,KAAKgd,2BACEhd,KAAKgd,mBAEhB,MAAM,SAAE9f,GAAa8C,KAAKyE,OACtB,IAAApX,GAAc6P,KACd8C,KAAKgd,kBAAoB9f,EAASsb,GAAG,UAAW9jB,IACxCsL,KAAKlQ,UACLkQ,KAAKlQ,QAAQmtB,YAAc,GAAGvoB,IAAQ,IAGtD,CACAyiB,eAAevV,EAAUwV,EAAa8F,EAAW7F,IAC7C,EAAAvC,GAAA,GAAWlT,EAAUwV,EAAa8F,EAAW7F,EACjD,E,2DCxCJ,MAAM8F,WAAyBpB,GAC3Bjc,cACI8L,SAASS,WACTrM,KAAKod,UAAW,CACpB,CACAvB,uBAAuBpX,EAAOzY,GAC1B,OAAOyY,EAAMzY,EACjB,CACA0vB,sBAAsB9Z,EAAU5V,GAC5B,GAAIkP,EAAA,MAAmBlP,GAAM,CACzB,MAAM4wB,GAAc,QAAoB5wB,GACxC,OAAO4wB,GAAcA,EAAYC,SAAe,CACpD,CAEA,OADA7wB,EAAO,SAAwBA,GAA0BA,GAAnB,OAAYA,GAC3C4V,EAASyb,aAAarxB,EACjC,CACAouB,6BACI,OAAO,UACX,CACA1C,4BAA4BjT,EAAOyH,GAC/B,OAAO,QAA4BzH,EAAOyH,EAC9C,CACAiO,MAAM/C,EAAajV,EAAclQ,EAASwS,IACtC,QAAc2S,EAAajV,EAAclQ,EAAS+N,KAAKod,SAAU3Y,EAAM+V,kBAC3E,CACArD,eAAevV,EAAUwV,EAAa8F,EAAW7F,IAC7C,QAAUzV,EAAUwV,EAAa8F,EAAW7F,EAChD,CACArL,MAAMpK,GACF5B,KAAKod,UAAW,QAASxb,EAAS0b,SAClC1R,MAAMI,MAAMpK,EAChB,E,eCtCJ,MCGM2b,GAAe,CACjB7f,SDJ2B,CAAC8f,EAAWvrB,KAChC,QAAeurB,GAChB,IAAIL,GAAiBlrB,EAAS,CAAEwrB,4BAA4B,IAC5D,IAAId,GAAkB1qB,EAAS,CAAEwrB,4BAA4B,OCEhE9W,KACAgL,G,yFCNP,SAAS+L,EAAkB1xB,EAAKgD,GAC5B,IAAI2uB,GAAmB,OAAoB3xB,GAI3C,OAHI2xB,IAAqB,MACrBA,EAAmB,KAEhBA,EAAiBD,kBAClBC,EAAiBD,kBAAkB1uB,QACnC/C,CACV,C,+ECLA,MAAM2xB,EAAoB,I,QACnB,EAEHnY,MAAK,IACLoY,gBAAiB,IACjBC,aAAc,IACd5jB,KAAM,IACN6jB,OAAQ,IAERC,YAAa,IACbC,eAAgB,IAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,gBAAiB,IACjBhK,OAAM,IACNiK,aAAc,KAKZC,EAAuBtyB,GAAQ4xB,EAAkB5xB,E,sDCxBvD,MAAMuyB,EAAqBnqB,GAAM,aAAa4Q,KAAK5Q,E,8ECGnD,MAAMoqB,EAAyBC,GAAsB,IAAVA,EACrCC,EAAyBC,GAAiBA,EAAe,G,+ECD/D,MAAMC,EAAc,IAAItlB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASulB,EAAmBzqB,GACxB,MAAO8K,EAAMlQ,GAASoF,EAAE0qB,MAAM,GAAI,GAAG3L,MAAM,KAC3C,GAAa,gBAATjU,EACA,OAAO9K,EACX,MAAO2qB,GAAU/vB,EAAMsjB,MAAM,OAAe,GAC5C,IAAKyM,EACD,OAAO3qB,EACX,MAAM4qB,EAAOhwB,EAAMiwB,QAAQF,EAAQ,IACnC,IAAIvD,EAAeoD,EAAYnlB,IAAIyF,GAAQ,EAAI,EAG/C,OAFI6f,IAAW/vB,IACXwsB,GAAgB,KACbtc,EAAO,IAAMsc,EAAewD,EAAO,GAC9C,CACA,MAAME,EAAgB,oBAChB9K,EAAS,IACR,IACHsJ,kBAAoBtpB,IAChB,MAAM+qB,EAAY/qB,EAAEke,MAAM4M,GAC1B,OAAOC,EAAYA,EAAU7zB,IAAIuzB,GAAoBO,KAAK,KAAOhrB,CAAC,E","sources":["webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://rishikc.com/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs"],"sourcesContent":["const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        else if (typeof keyframes[i] === \"string\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import * as React from 'react';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (React.createElement(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict } }, children));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.8\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.8 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n"],"names":["instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Object","hasOwnProperty","call","Element","prototype","results","supports","key","undefined","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","i","Math","abs","binarySubdivide","isEasingArray","reverse","backInOut","mirror","easingLookup","circInOut","anticipate","p","pow","easingDefinitionToFunction","definition","length","x1","y1","x2","y2","keyframes","duration","keyframeValues","times","easingFunctions","state","done","value","absoluteTimes","offset","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","values","splice","calculatedDuration","next","velocitySampleDuration","calcGeneratorVelocity","resolveValue","current","prevT","max","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","velocity","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","delta","calcAngularFreq","exp","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","restDelta","restSpeed","origin","target","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","update","passTimestamp","timestamp","start","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","type","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","cancel","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","Set","createAcceleratedAnimation","valueName","has","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","push","animation","element","keyframeOptions","animate","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","set","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","transform","startsWith","isAnimatable","complex","isNone","animateMotionValue","transition","valueTransition","isTargetAnimatable","defaultOrigin","from","get","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","getVelocity","setValue","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","getValueTransition","LazyMotion","children","features","strict","setIsLoaded","useState","isLazyBundle","loadedRenderer","useRef","renderer","loadedFeatures","useEffect","acos","mirrorEasing","reverseEasing","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","addPointerEvent","extractEventInfo","event","pointType","point","y","addPointerInfo","isPrimaryPointer","pointerType","button","isPrimary","createLock","name","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","convertBoundingBoxToBox","top","left","right","bottom","convertBoxToBoundingBox","transformBoxPoints","transformPoint","topLeft","bottomRight","scalePoint","scale","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","projectionDelta","instance","style","display","layoutScroll","scroll","root","transformBox","latestValues","snapToDefault","Number","isInteger","translateAxis","distance","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","createDelta","createBox","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","measureViewportBox","getBoundingClientRect","measurePageBox","rootProjectionNode","transformPagePoint","viewportBox","shallowCompare","prev","prevLength","resolveVariant","visualElement","custom","props","forEach","getCurrent","optimizedAppearDataAttribute","isWillChangeMotionValue","add","testValueType","test","dimensionValueTypes","px","vw","vh","parse","findDimensionValueType","find","valueTypes","color","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","resolved","transitionEnd","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","animationState","getState","valueTarget","window","HandoffAppearAnimations","hasAnimated","appearId","shouldReduceMotion","remove","all","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","context","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","prevResolvedValues","allKeys","markToAnimate","delete","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","initial","setActive","_a","setAnimateFunction","makeAnimator","AnimationFeature","super","updateAnimationControlsSubscription","unmount","subscribe","mount","prevAnimate","prevProps","id","ExitAnimationFeature","arguments","presenceContext","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addHoverEvent","callbackName","info","HoverGesture","pipe","FocusGesture","onFocus","isFocusVisible","matches","onBlur","isNodeOrChild","parent","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","gestureAnimations","inView","tap","focus","hover","splitCSSVariableRegex","maxDepth","getVariableValue","depth","token","fallback","match","exec","parseCSSVariable","getComputedStyle","getPropertyValue","trim","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","parseFloat","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","checkAndConvertChangedValueTypes","targetPositionalKeys","filter","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","to","toType","numKeyframes","fromIndex","removedTransforms","render","removeNonTranslationalTransform","jump","scrollY","indexOf","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","setStaticValue","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","Map","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","projection","scheduleRender","baseTarget","initialValues","initialMotionValues","scrapeMotionValuesFromProps","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","clear","valueIsTransform","removeOnChange","on","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","loadFeatures","renderedProps","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","MeasureLayout","isEnabled","FeatureConstructor","ProjectionNode","MeasureLayoutComponent","layoutId","layout","dragConstraints","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","updateFeatures","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","transformTemplate","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getTransformPagePoint","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","vars","transformValues","transitionOrigin","getOrigin","_b","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","default","computedStyle","measure","childSubscription","textContent","styleProp","SVGVisualElement","isSVGTag","getAttribute","tagName","domAnimation","Component","enableHardwareAcceleration","getAnimatableNone","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","isZeroValueString","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","maxDefaults","applyDefaultFilter","slice","number","unit","replace","functionRegex","functions","join"],"sourceRoot":""}